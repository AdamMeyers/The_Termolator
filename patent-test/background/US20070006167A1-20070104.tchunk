US	US	PRP	0
20070006167	20070006167	CD	0
A1	A1	CD	0
20070104	20070104	CD	0
US	US	NNP	0
11140841	11140841	CD	0
20050531	20050531	CD	0
11	11	CD	0
20060101	20060101	CD	0
A	A	DT	0
G	G	NNP	0
06	06	CD	0
F	F	NN	0
9	9	CD	0
44	44	CD	0
F	F	NN	0
I	I	PRP	0
20070104	20070104	CD	0
US	US	NNP	0
B	B	NNP	B-NP
H	H	NNP	I-NP
US	US	NNP	0
717130000	717130000	CD	0
Optimizing	Optimizing	JJ	B-NP
binary-level	binary-level	JJ	I-NP
instrumentation	instrumentation	NN	I-NP
via	via	IN	0
instruction	instruction	FW	0
scheduling	scheduling	VBG	B-NP
Luk	Luk	NNP	I-NP
Chi-Keung	Chi-Keung	NN	I-NP
Ashland	Ashland	NNP	0
MA	MA	NNP	0
US	US	NNP	0
Zichron	Zichron	UH	B-NP
Yaacov	Yaacov	UH	I-NP
IL	IL	UH	I-NP
Salem	Salem	NNP	B-NP
NH	NH	NNP	I-NP
US	US	NNP	0
Michmoret	Michmoret	UH	B-NP
IL	IL	UH	I-NP
1616	1616	CD	0
S.	S.	NNP	B-NP
VOSS	VOSS	NNP	I-NP
ROAD	ROAD	NNP	I-NP
,	,	,	0
SUITE	SUITE	NNP	0
750	750	CD	0
HOUSTON	HOUSTON	NNP	B-NP
TX	TX	NNP	I-NP
77057-2631	77057-2631	NNP	0
US	US	NNP	0
In	In	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
,	,	,	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
includes	includes	VBZ	0
a	a	DT	0
method	method	NN	0
for	for	IN	0
receiving	receiving	VBG	0
a	a	DT	0
command	command	NN	0
to	to	TO	0
insert	insert	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
into	into	IN	0
a	a	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
,	,	,	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
to	to	TO	0
determine	determine	VB	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
optimal	optimal	JJ	I-NP
location	location	NN	I-NP
within	within	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
,	,	,	0
and	and	CC	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
optimal	optimal	JJ	B-NP
location	location	NN	I-NP
to	to	TO	0
generate	generate	VB	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
.	.	.	0
The	The	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
may	may	MD	0
then	then	RB	0
be	be	VB	0
executed	executed	VBN	0
and	and	CC	0
may	may	MD	0
provide	provide	VB	0
for	for	IN	0
improved	improved	JJ	0
performance	performance	NN	0
over	over	IN	0
unoptimized	unoptimized	JJ	B-NP
instrumented	instrumented	JJ	I-NP
code	code	NN	I-NP
.	.	.	0
Other	Other	JJ	0
embodiments	embodiments	NNS	0
are	are	VBP	0
described	described	VBN	0
and	and	CC	0
claimed	claimed	VBD	0
.	.	.	0
Embodiments	Embodiments	NNP	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NNS	0
relate	relate	VBP	0
to	to	TO	0
software	software	NN	B-NP
operation	operation	NN	I-NP
,	,	,	0
and	and	CC	0
more	more	RBR	0
particularly	particularly	RB	0
to	to	TO	0
optimizing	optimizing	VB	B-NP
instrumentation	instrumentation	JJ	I-NP
code	code	NN	I-NP
.	.	.	0
As	As	IN	0
software	software	NN	B-NP
complexity	complexity	NN	I-NP
increase	increase	NN	I-NP
,	,	,	0
instrumentation	instrumentation	NN	0
,	,	,	0
which	which	WDT	0
is	is	VBZ	0
a	a	DT	0
technique	technique	NN	0
for	for	IN	0
inserting	inserting	VBG	0
extra	extra	JJ	0
code	code	NN	0
into	into	IN	0
an	an	DT	0
application	application	NN	0
to	to	TO	0
observe	observe	VB	0
its	its	PRP$	0
behavior	behavior	NN	0
,	,	,	0
is	is	VBZ	0
becoming	becoming	VBG	0
more	more	RBR	0
important	important	JJ	0
.	.	.	0
Instrumentation	Instrumentation	NN	0
can	can	MD	0
be	be	VB	0
performed	performed	VBN	0
at	at	IN	0
various	various	JJ	0
stages	stages	NNS	0
in	in	IN	0
a	a	DT	0
software	software	NN	B-NP
development	development	NN	I-NP
cycle	cycle	NN	I-NP
:	:	:	0
in	in	IN	0
source	source	NN	B-NP
code	code	NN	I-NP
,	,	,	0
at	at	IN	0
compile	compile	JJ	0
time	time	NN	0
,	,	,	0
post	post	NN	0
link	link	NN	0
time	time	NN	0
,	,	,	0
or	or	CC	0
at	at	IN	0
run	run	NN	B-NP
time	time	NN	I-NP
.	.	.	0
Robust	Robust	JJ	0
and	and	CC	0
powerful	powerful	JJ	0
software	software	NN	B-NP
instrumentation	instrumentation	NN	I-NP
tool	tool	NN	I-NP
are	are	VBP	0
used	used	VBN	0
for	for	IN	0
program	program	NN	B-NP
analysis	analysis	NN	I-NP
task	task	NN	I-NP
such	such	JJ	0
as	as	IN	0
profiling	profiling	NN	0
,	,	,	0
performance	performance	NN	B-NP
evaluation	evaluation	NN	I-NP
,	,	,	0
and	and	CC	0
bug	bug	JJ	0
detection	detection	NN	0
.	.	.	0
In	In	IN	0
binary	binary	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
system	system	NN	I-NP
,	,	,	0
a	a	DT	0
user	user	NN	0
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
a	a	DT	0
tool	tool	NN	B-NP
writer	writer	NN	I-NP
)	)	-RRB-	0
specifies	specifies	VBZ	0
where	where	WRB	0
in	in	IN	0
the	the	DT	0
binary	binary	JJ	B-NP
image	image	NN	I-NP
he	he	PRP	I-NP
/	/	VBP	I-NP
she	she	PRP	I-NP
desires	desires	VBP	0
to	to	TO	0
insert	insert	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	0
.	.	.	0
typical	typical	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
point	point	NN	I-NP
are	are	VBP	0
before	before	IN	B-NP
/	/	CD	I-NP
after	after	IN	I-NP
an	an	DT	0
instruction	instruction	NN	0
,	,	,	0
before	before	IN	B-NP
/	/	CD	I-NP
after	after	IN	I-NP
a	a	DT	0
basic	basic	JJ	0
block	block	NN	0
,	,	,	0
or	or	CC	0
before	before	IN	B-NP
/	/	CD	I-NP
after	after	IN	I-NP
a	a	DT	0
function	function	NN	0
.	.	.	0
Generally	Generally	RB	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
is	is	VBZ	0
placed	placed	VBN	0
at	at	IN	0
the	the	DT	0
exact	exact	JJ	0
place	place	NN	0
specified	specified	VBN	0
by	by	IN	0
the	the	DT	0
user	user	NN	0
.	.	.	0
Static	Static	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
has	has	VBZ	0
certain	certain	JJ	0
limitations	limitations	NNS	0
compared	compared	VBN	0
to	to	TO	0
dynamic	dynamic	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
possible	possible	JJ	0
to	to	TO	0
mix	mix	VB	0
code	code	NN	0
and	and	CC	0
data	data	NNS	0
in	in	IN	0
an	an	DT	0
executable	executable	NN	B-NP
,	,	,	0
and	and	CC	0
a	a	DT	0
static	static	JJ	B-NP
tool	tool	NN	I-NP
may	may	MD	0
not	not	RB	0
have	have	VB	0
enough	enough	JJ	0
information	information	NN	0
to	to	TO	0
distinguish	distinguish	VB	0
the	the	DT	0
two	two	CD	0
code	code	NN	B-NP
type	type	NN	I-NP
.	.	.	0
dynamic	dynamic	JJ	B-NP
tool	tool	NN	I-NP
,	,	,	0
in	in	IN	0
contrast	contrast	NN	0
,	,	,	0
can	can	MD	0
rely	rely	VB	0
on	on	IN	0
execution	execution	NN	0
to	to	TO	0
discover	discover	VB	0
all	all	DT	0
of	of	IN	0
the	the	DT	0
code	code	NN	0
at	at	IN	0
run	run	NN	B-NP
time	time	NN	I-NP
.	.	.	0
Other	Other	JJ	0
difficult	difficult	JJ	0
problems	problems	NNS	0
for	for	IN	0
static	static	JJ	B-NP
system	system	NN	I-NP
are	are	VBP	0
indirect	indirect	JJ	0
branches	branches	NNS	0
,	,	,	0
shared	shared	VBN	B-NP
library	library	NN	I-NP
,	,	,	0
and	and	CC	0
dynamically-generated	dynamically-generated	JJ	0
code	code	NN	0
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
for	for	IN	0
at	at	IN	0
least	least	JJS	0
certain	certain	JJ	0
application	application	NN	B-NP
,	,	,	0
dynamic	dynamic	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
can	can	MD	0
be	be	VB	0
more	more	RBR	0
effective	effective	JJ	0
.	.	.	0
There	There	EX	0
are	are	VBP	0
two	two	CD	0
approaches	approaches	NNS	0
to	to	TO	0
dynamic	dynamic	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
:	:	:	0
probe-based	probe-based	JJ	0
and	and	CC	0
just-in-time	just-in-time	JJ	B-NP
(	(	-LRB-	I-NP
JIT	JIT	NNP	I-NP
)	)	-RRB-	I-NP
-based	-based	JJ	I-NP
instrumentation	instrumentation	NN	I-NP
.	.	.	0
The	The	DT	0
probe-based	probe-based	JJ	0
approach	approach	NN	B-NP
work	work	NN	I-NP
by	by	IN	0
dynamically	dynamically	NNS	0
replacing	replacing	VBG	B-NP
instruction	instruction	NN	I-NP
in	in	IN	0
the	the	DT	0
original	original	JJ	B-NP
program	program	NN	I-NP
with	with	IN	0
trampolines	trampolines	NN	0
that	that	IN	0
branch	branch	NN	0
to	to	TO	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
.	.	.	0
The	The	DT	0
drawbacks	drawbacks	NNS	0
of	of	IN	0
probe-based	probe-based	JJ	0
systems	systems	NNS	0
are	are	VBP	0
that	that	IN	0
:	:	:	0
(	(	-LRB-	0
i	i	FW	0
)	)	-RRB-	0
instrumentation	instrumentation	NN	0
is	is	VBZ	0
not	not	RB	0
transparent	transparent	VBN	0
because	because	IN	0
original	original	JJ	B-NP
instruction	instruction	NN	I-NP
in	in	IN	0
memory	memory	NN	B-NP
are	are	VBP	0
overwritten	overwritten	VBN	0
by	by	IN	0
trampolines	trampolines	NNS	0
;	;	:	0
(	(	-LRB-	0
ii	ii	LS	0
)	)	-RRB-	0
on	on	IN	0
architectures	architectures	NN	0
where	where	WRB	0
instruction	instruction	JJ	B-NP
size	size	NN	I-NP
vary	vary	VBP	0
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
an	an	DT	0
x86-based	x86-based	JJ	B-NP
architecture	architecture	NN	I-NP
)	)	-RRB-	0
,	,	,	0
an	an	DT	0
instruction	instruction	NN	0
cannot	cannot	RB	0
be	be	VB	0
replaced	replaced	VBN	0
by	by	IN	0
a	a	DT	0
trampoline	trampoline	NN	0
that	that	WDT	0
occupies	occupies	VBZ	0
more	more	JJR	0
byte	byte	NN	B-NP
than	than	IN	0
the	the	DT	0
instruction	instruction	NN	0
itself	itself	PRP	0
because	because	IN	0
it	it	PRP	0
will	will	MD	0
overwrite	overwrite	VB	0
the	the	DT	0
following	following	JJ	0
instruction	instruction	NN	0
;	;	:	0
and	and	CC	0
(	(	-LRB-	0
iii	iii	LS	0
)	)	-RRB-	0
trampolines	trampolines	NNS	0
are	are	VBP	0
implemented	implemented	VBN	0
by	by	IN	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
levels	levels	NNS	0
of	of	IN	0
branches	branches	NNS	0
,	,	,	0
which	which	WDT	0
can	can	MD	0
incur	incur	VB	0
a	a	DT	0
significant	significant	JJ	0
performance	performance	NN	0
overhead	overhead	NN	0
.	.	.	0
These	These	DT	0
drawbacks	drawbacks	NNS	0
make	make	VBP	0
fine-grained	fine-grained	JJ	0
instrumentation	instrumentation	NN	0
challenging	challenging	VBG	0
on	on	IN	0
probe-based	probe-based	JJ	0
systems	systems	NNS	0
.	.	.	0
In	In	IN	0
contrast	contrast	NN	0
,	,	,	0
the	the	DT	0
JIT-based	JIT-based	JJ	B-NP
approach	approach	NN	I-NP
is	is	VBZ	0
more	more	RBR	0
suitable	suitable	JJ	0
for	for	IN	0
fine-grained	fine-grained	JJ	0
instrumentation	instrumentation	NN	0
,	,	,	0
as	as	IN	0
it	it	PRP	0
works	works	VBZ	0
by	by	IN	0
dynamically	dynamically	NNS	0
compiling	compiling	VBG	0
the	the	DT	0
binary	binary	NN	B-NP
and	and	CC	0
inserting	inserting	JJ	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
(	(	-LRB-	0
or	or	CC	0
calls	calls	VBZ	0
to	to	TO	0
it	it	PRP	0
)	)	-RRB-	0
within	within	IN	0
the	the	DT	0
binary	binary	NN	B-NP
.	.	.	0
However	However	RB	0
,	,	,	0
depending	depending	VBG	0
on	on	IN	0
where	where	WRB	0
the	the	DT	0
code	code	NN	0
is	is	VBZ	0
inserted	inserted	VBN	0
into	into	IN	0
the	the	DT	0
binary	binary	NN	B-NP
,	,	,	0
performance	performance	NN	B-NP
degradation	degradation	NN	I-NP
may	may	MD	0
occur	occur	VB	0
,	,	,	0
as	as	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
can	can	MD	0
affect	affect	VB	0
various	various	JJ	0
resources	resources	NNS	0
,	,	,	0
such	such	JJ	0
as	as	IN	0
registers	registers	NNS	0
and	and	CC	0
the	the	DT	0
like	like	JJ	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
typically	typically	RB	0
causes	causes	VBZ	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
registers	registers	NNS	0
that	that	IN	0
store	store	NN	B-NP
information	information	NN	I-NP
to	to	TO	0
be	be	VB	0
spilled	spilled	VBN	0
and	and	CC	0
rewritten	rewritten	VBN	0
after	after	IN	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
.	.	.	0
Such	Such	JJ	0
spilling	spilling	NN	0
and	and	CC	0
rewriting	rewriting	NN	0
causes	causes	VBZ	0
flushing	flushing	VBN	0
of	of	IN	0
various	various	JJ	0
processor	processor	NN	B-NP
resource	resource	NN	I-NP
,	,	,	0
and	and	CC	0
thus	thus	RB	0
leads	leads	VBZ	0
to	to	TO	0
degraded	degraded	VB	B-NP
performance	performance	NN	I-NP
.	.	.	0
A	A	DT	0
need	need	NN	0
thus	thus	RB	0
exists	exists	VBZ	0
to	to	TO	0
optimize	optimize	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
.	.	.	0
FIG.	FIG.	CD	0
1	1	CD	0
is	is	VBZ	0
a	a	DT	0
flow	flow	NN	B-NP
diagram	diagram	NN	I-NP
of	of	IN	0
a	a	DT	0
method	method	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
FIG.	FIG.	CD	0
2	2	CD	0
is	is	VBZ	0
a	a	DT	0
block	block	NN	0
diagram	diagram	NN	0
of	of	IN	0
a	a	DT	0
software	software	NN	B-NP
architecture	architecture	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
FIG.	FIG.	CD	0
3	3	CD	0
is	is	VBZ	0
a	a	DT	0
flow	flow	NN	B-NP
diagram	diagram	NN	I-NP
of	of	IN	0
a	a	DT	0
method	method	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
FIG.	FIG.	CD	0
4	4	CD	0
is	is	VBZ	0
a	a	DT	0
block	block	NN	0
diagram	diagram	NN	0
of	of	IN	0
a	a	DT	0
system	system	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
In	In	IN	0
various	various	JJ	0
embodiments	embodiments	NN	0
,	,	,	0
efficient	efficient	JJ	0
instrumentation	instrumentation	NN	0
may	may	MD	0
be	be	VB	0
effected	effected	VBN	0
by	by	IN	0
using	using	VBG	0
a	a	DT	0
just-in-time	just-in-time	JJ	B-NP
(	(	-LRB-	0
JIT	JIT	NNP	B-NP
)	)	-RRB-	0
compiler	compiler	NN	0
to	to	TO	0
insert	insert	VB	0
and	and	CC	0
optimize	optimize	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
.	.	.	0
Code	Code	NNP	0
may	may	MD	0
be	be	VB	0
dynamically	dynamically	JJ	0
instrumented	instrumented	NN	B-NP
in	in	IN	0
various	various	JJ	0
manners	manners	NNS	0
,	,	,	0
including	including	VBG	B-NP
code	code	NN	I-NP
caching	caching	NNS	0
and	and	CC	0
trace	trace	JJ	B-NP
linking	linking	NN	I-NP
,	,	,	0
register	register	JJ	B-NP
reallocation	reallocation	NN	I-NP
,	,	,	0
inlining	inlining	NN	B-NP
,	,	,	0
liveness	liveness	JJ	B-NP
analysis	analysis	NN	I-NP
,	,	,	0
and	and	CC	0
instruction	instruction	NN	B-NP
scheduling	scheduling	NN	I-NP
.	.	.	0
While	While	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
may	may	MD	0
be	be	VB	0
performed	performed	VBN	0
dynamically	dynamically	NN	0
,	,	,	0
other	other	JJ	0
embodiments	embodiments	NN	0
may	may	MD	0
be	be	VB	0
implemented	implemented	VBN	0
in	in	IN	0
other	other	JJ	0
stages	stages	NNS	0
of	of	IN	0
software	software	NN	B-NP
development	development	NN	I-NP
.	.	.	0
JIT-based	JIT-based	JJ	B-NP
instrumentation	instrumentation	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
may	may	MD	0
defer	defer	VB	0
code	code	NN	B-NP
discovery	discovery	NN	I-NP
until	until	IN	0
run	run	NN	B-NP
time	time	NN	I-NP
,	,	,	0
allowing	allowing	VBG	B-NP
instrumentation	instrumentation	NN	I-NP
to	to	TO	0
be	be	VB	0
robust	robust	JJ	0
.	.	.	0
Embodiments	Embodiments	NNP	0
can	can	MD	0
seamlessly	seamlessly	RB	0
handle	handle	VB	0
mixed	mixed	JJ	0
code	code	NN	0
and	and	CC	0
data	data	NNS	0
,	,	,	0
variable-length	variable-length	JJ	B-NP
instruction	instruction	NN	I-NP
,	,	,	0
statically	statically	JJ	0
unknown	unknown	JJ	0
indirect	indirect	JJ	0
jump	jump	NN	B-NP
target	target	NN	I-NP
,	,	,	0
dynamically	dynamically	FW	0
loaded	loaded	JJ	B-NP
library	library	NN	I-NP
,	,	,	0
and	and	CC	0
dynamically	dynamically	JJ	0
generated	generated	JJ	0
code	code	NN	0
,	,	,	0
among	among	IN	0
other	other	JJ	0
structures	structures	NNS	0
.	.	.	0
Behavior	Behavior	NN	0
of	of	IN	0
an	an	DT	0
original	original	JJ	B-NP
application	application	NN	I-NP
may	may	MD	0
be	be	VB	0
preserved	preserved	VBN	0
by	by	IN	0
providing	providing	VBG	B-NP
instrumentation	instrumentation	NN	I-NP
transparency	transparency	NN	I-NP
.	.	.	0
That	That	WDT	0
is	is	VBZ	0
,	,	,	0
the	the	DT	0
application	application	NN	0
observes	observes	VBZ	0
the	the	DT	0
same	same	JJ	0
addresses	addresses	NNS	0
(	(	-LRB-	0
both	both	DT	0
instruction	instruction	NN	0
and	and	CC	0
data	data	NNS	0
)	)	-RRB-	0
and	and	CC	0
same	same	JJ	0
values	values	NNS	0
(	(	-LRB-	0
both	both	DT	0
register	register	NN	0
and	and	CC	0
memory	memory	NN	B-NP
)	)	-RRB-	0
as	as	IN	0
it	it	PRP	0
would	would	MD	0
in	in	IN	0
an	an	DT	0
uninstrumented	uninstrumented	JJ	B-NP
execution	execution	NN	I-NP
.	.	.	0
Transparency	Transparency	NNP	B-NP
makes	makes	VBZ	0
the	the	DT	0
information	information	NN	0
collected	collected	VBN	0
by	by	IN	0
instrumentation	instrumentation	NN	0
more	more	RBR	0
relevant	relevant	JJ	0
and	and	CC	0
correct	correct	JJ	0
.	.	.	0
In	In	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
,	,	,	0
instrumentation	instrumentation	NN	0
is	is	VBZ	0
performed	performed	VBN	0
by	by	IN	0
a	a	DT	0
JIT	JIT	NNP	B-NP
compiler	compiler	NN	I-NP
.	.	.	0
The	The	DT	0
input	input	NN	0
to	to	TO	0
this	this	DT	0
compiler	compiler	NN	0
is	is	VBZ	0
not	not	RB	0
bytecodes	bytecodes	JJ	0
,	,	,	0
however	however	RB	0
,	,	,	0
but	but	CC	0
a	a	DT	0
native	native	JJ	0
executable	executable	NN	B-NP
.	.	.	0
The	The	DT	0
compiler	compiler	JJ	0
intercepts	intercepts	JJ	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
first	first	JJ	0
instruction	instruction	NN	0
of	of	IN	0
the	the	DT	0
executable	executable	NN	B-NP
and	and	CC	0
generates	generates	VBZ	0
(	(	-LRB-	0
compiles	compiles	LS	0
)	)	-RRB-	0
new	new	JJ	0
code	code	NN	0
for	for	IN	0
the	the	DT	0
straight-line	straight-line	JJ	B-NP
code	code	NN	I-NP
sequence	sequence	NN	I-NP
starting	starting	VBG	0
at	at	IN	0
this	this	DT	0
instruction	instruction	NN	0
.	.	.	0
It	It	PRP	0
then	then	RB	0
transfers	transfers	JJ	B-NP
control	control	NN	I-NP
to	to	TO	0
the	the	DT	0
generated	generated	JJ	0
sequence	sequence	NN	0
.	.	.	0
The	The	DT	0
generated	generated	JJ	0
code	code	NN	B-NP
sequence	sequence	NN	I-NP
is	is	VBZ	0
almost	almost	RB	0
identical	identical	JJ	0
to	to	TO	0
the	the	DT	0
original	original	JJ	B-NP
code	code	NN	I-NP
sequence	sequence	NN	I-NP
,	,	,	0
but	but	CC	0
the	the	DT	0
compiler	compiler	JJ	0
ensures	ensures	NN	0
that	that	IN	0
it	it	PRP	0
regains	regains	VBZ	0
control	control	NN	0
when	when	WRB	0
a	a	DT	0
branch	branch	NN	0
exits	exits	NNS	0
the	the	DT	0
sequence	sequence	NN	0
.	.	.	0
After	After	IN	0
regaining	regaining	JJ	0
control	control	NN	0
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
generates	generates	VBZ	0
more	more	JJR	0
code	code	NN	0
for	for	IN	0
the	the	DT	0
branch	branch	NN	0
target	target	NN	0
and	and	CC	0
continues	continues	VBZ	0
execution	execution	NN	0
.	.	.	0
Whenever	Whenever	WRB	0
the	the	DT	0
compiler	compiler	JJ	0
fetches	fetches	JJ	0
code	code	NN	0
,	,	,	0
an	an	DT	0
application	application	NN	B-NP
programming	programming	NN	I-NP
interface	interface	NN	I-NP
(	(	-LRB-	0
API	API	NNP	B-NP
)	)	-RRB-	0
for	for	IN	0
performing	performing	VBG	B-NP
instrumentation	instrumentation	NN	I-NP
has	has	VBZ	0
the	the	DT	0
opportunity	opportunity	NN	0
to	to	TO	0
instrument	instrument	VB	0
the	the	DT	0
code	code	NN	0
before	before	IN	0
it	it	PRP	0
is	is	VBZ	0
translated	translated	VBN	0
for	for	IN	0
execution	execution	NN	0
.	.	.	0
The	The	DT	0
translated	translated	JJ	0
code	code	NN	0
and	and	CC	0
its	its	PRP$	0
instrumentation	instrumentation	NN	0
may	may	MD	0
be	be	VB	0
saved	saved	VBN	0
in	in	IN	0
a	a	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
for	for	IN	0
future	future	JJ	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
same	same	JJ	0
sequence	sequence	NN	0
of	of	IN	0
instruction	instruction	NN	B-NP
to	to	TO	0
improve	improve	VB	0
performance	performance	NN	0
,	,	,	0
in	in	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
.	.	.	0
Referring	Referring	VBG	0
now	now	RB	0
to	to	TO	0
FIG.	FIG.	CD	0
1	1	CD	0
,	,	,	0
shown	shown	VBN	0
is	is	VBZ	0
a	a	DT	0
flow	flow	NN	B-NP
diagram	diagram	NN	I-NP
of	of	IN	0
a	a	DT	0
method	method	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
1	1	CD	0
,	,	,	0
method	method	NN	0
10	10	CD	0
may	may	MD	0
be	be	VB	0
used	used	VBN	0
to	to	TO	0
perform	perform	VB	0
just-in-time	just-in-time	JJ	B-NP
(	(	-LRB-	0
JIT	JIT	NNP	B-NP
)	)	-RRB-	0
compilation	compilation	NN	0
of	of	IN	0
code	code	NN	0
and	and	CC	0
further	further	JJ	0
to	to	TO	0
dynamically	dynamically	VB	0
instrument	instrument	VBN	0
the	the	DT	0
code	code	NN	0
during	during	IN	0
compilation	compilation	NN	0
.	.	.	0
Method	Method	NN	0
10	10	CD	0
may	may	MD	0
begin	begin	VB	0
by	by	IN	0
initiating	initiating	VBG	0
a	a	DT	0
JIT	JIT	NNP	B-NP
compiler	compiler	NN	I-NP
(	(	-LRB-	0
block	block	VB	0
15	15	CD	0
)	)	-RRB-	0
.	.	.	0
The	The	DT	0
compiler	compiler	NN	0
may	may	MD	0
then	then	RB	0
fetch	fetch	VB	0
the	the	DT	0
binary	binary	JJ	B-NP
code	code	NN	I-NP
to	to	TO	0
be	be	VB	0
compiled	compiled	VBN	0
(	(	-LRB-	0
block	block	VB	0
20	20	CD	0
)	)	-RRB-	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
in	in	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
the	the	DT	0
compiler	compiler	NN	0
may	may	MD	0
fetch	fetch	VB	0
a	a	DT	0
first	first	JJ	0
portion	portion	NN	0
of	of	IN	0
a	a	DT	0
native	native	JJ	0
executable	executable	NN	B-NP
,	,	,	0
for	for	IN	0
example	example	NN	0
,	,	,	0
a	a	DT	0
first	first	JJ	0
functional	functional	JJ	B-NP
block	block	NN	I-NP
.	.	.	0
Next	Next	JJ	B-NP
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
may	may	MD	0
determine	determine	VB	0
whether	whether	IN	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
has	has	VBZ	0
been	been	VBN	0
invoked	invoked	NNS	0
(	(	-LRB-	0
diamond	diamond	CD	0
30	30	CD	0
)	)	-RRB-	0
.	.	.	0
That	That	WDT	0
is	is	VBZ	0
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
may	may	MD	0
determine	determine	VB	0
whether	whether	IN	0
a	a	DT	0
user	user	NN	0
seeks	seeks	VBZ	0
to	to	TO	0
instrument	instrument	VB	0
the	the	DT	0
binary	binary	JJ	B-NP
code	code	NN	I-NP
that	that	WDT	0
has	has	VBZ	0
been	been	VBN	0
fetched	fetched	NN	0
.	.	.	0
If	If	IN	0
so	so	RB	0
,	,	,	0
the	the	DT	0
compiler	compiler	JJ	B-NP
insert	insert	NN	I-NP
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
into	into	IN	0
the	the	DT	0
binary	binary	JJ	B-NP
code	code	NN	I-NP
(	(	-LRB-	0
block	block	VB	0
35	35	CD	0
)	)	-RRB-	0
.	.	.	0
As	As	RB	0
will	will	MD	0
be	be	VB	0
discussed	discussed	VBN	0
further	further	RBR	0
below	below	RB	0
,	,	,	0
in	in	IN	0
various	various	JJ	0
embodiments	embodiments	NNS	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
inserted	inserted	VBN	0
into	into	IN	0
the	the	DT	0
binary	binary	NN	B-NP
may	may	MD	0
be	be	VB	0
optimized	optimized	VBN	0
in	in	IN	0
various	various	JJ	0
manners	manners	NNS	0
.	.	.	0
Next	Next	JJ	B-NP
(	(	-LRB-	0
or	or	CC	0
alternately	alternately	VBP	0
directly	directly	RB	0
from	from	IN	0
diamond	diamond	CD	0
30	30	CD	0
if	if	IN	0
no	no	DT	0
instrumentation	instrumentation	NN	B-NP
instruction	instruction	NN	I-NP
were	were	VBD	0
received	received	VBN	0
)	)	-RRB-	0
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
translates	translates	VBD	0
the	the	DT	0
binary	binary	JJ	B-NP
code	code	NN	I-NP
and	and	CC	0
places	places	VBZ	0
the	the	DT	0
code	code	NN	0
into	into	IN	0
a	a	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
(	(	-LRB-	0
block	block	VB	0
40	40	CD	0
)	)	-RRB-	0
.	.	.	0
From	From	IN	0
there	there	RB	0
,	,	,	0
the	the	DT	0
code	code	NN	0
may	may	MD	0
be	be	VB	0
released	released	VBN	0
for	for	IN	0
execution	execution	NN	0
(	(	-LRB-	0
block	block	VB	0
45	45	CD	0
)	)	-RRB-	0
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
the	the	DT	0
code	code	NN	0
may	may	MD	0
be	be	VB	0
executed	executed	VBN	0
from	from	IN	0
the	the	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
(	(	-LRB-	0
block	block	VB	0
50	50	CD	0
)	)	-RRB-	0
.	.	.	0
Execution	Execution	NN	0
may	may	MD	0
continue	continue	VB	0
until	until	IN	0
a	a	DT	0
branch	branch	NN	0
is	is	VBZ	0
reached	reached	VBN	0
in	in	IN	0
the	the	DT	0
executed	executed	JJ	0
code	code	NN	0
(	(	-LRB-	0
diamond	diamond	CD	0
60	60	CD	0
)	)	-RRB-	0
.	.	.	0
Thus	Thus	RB	0
if	if	IN	0
no	no	DT	0
branch	branch	NN	0
is	is	VBZ	0
reached	reached	VBN	0
,	,	,	0
the	the	DT	0
code	code	NN	0
continues	continues	VBZ	0
executing	executing	VBG	0
in	in	IN	0
a	a	DT	0
loop	loop	NN	0
between	between	IN	0
block	block	NN	0
50	50	CD	0
and	and	CC	0
diamond	diamond	NN	0
60	60	CD	0
.	.	.	0
If	If	IN	0
instead	instead	RB	0
,	,	,	0
a	a	DT	0
branch	branch	NN	0
is	is	VBZ	0
reached	reached	VBN	0
at	at	IN	0
diamond	diamond	CD	0
60	60	CD	0
,	,	,	0
control	control	NN	0
passes	passes	VBZ	0
to	to	TO	0
diamond	diamond	CD	0
70	70	CD	0
.	.	.	0
There	There	RB	0
,	,	,	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
whether	whether	IN	0
the	the	DT	0
target	target	NN	B-NP
code	code	NN	I-NP
is	is	VBZ	0
included	included	VBN	0
already	already	RB	0
in	in	IN	0
the	the	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
(	(	-LRB-	0
diamond	diamond	CD	0
70	70	CD	0
)	)	-RRB-	0
.	.	.	0
If	If	IN	0
so	so	RB	0
,	,	,	0
control	control	NN	B-NP
return	return	NN	I-NP
to	to	TO	0
block	block	VB	0
50	50	CD	0
for	for	IN	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
code	code	NN	0
from	from	IN	0
the	the	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
.	.	.	0
If	If	IN	0
instead	instead	RB	0
the	the	DT	0
target	target	NN	B-NP
code	code	NN	I-NP
is	is	VBZ	0
not	not	RB	0
included	included	VBN	0
in	in	IN	0
the	the	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
,	,	,	0
control	control	NN	0
may	may	MD	0
return	return	VB	0
to	to	TO	0
block	block	VB	0
20	20	CD	0
,	,	,	0
as	as	RB	0
described	described	VBN	0
above	above	IN	0
.	.	.	0
FIG.	FIG.	CD	0
2	2	CD	0
is	is	VBZ	0
a	a	DT	0
block	block	NN	0
diagram	diagram	NN	0
of	of	IN	0
a	a	DT	0
software	software	NN	B-NP
architecture	architecture	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
one	one	CD	0
embodiment	embodiment	NNS	0
.	.	.	0
Software	Software	NN	B-NP
architecture	architecture	NN	I-NP
100	100	CD	0
provides	provides	VBZ	0
a	a	DT	0
high-level	high-level	JJ	0
view	view	NN	0
of	of	IN	0
the	the	DT	0
interaction	interaction	NN	0
between	between	IN	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
and	and	CC	0
other	other	JJ	0
software	software	NN	0
(	(	-LRB-	0
and	and	CC	0
hardware	hardware	NN	0
)	)	-RRB-	0
of	of	IN	0
a	a	DT	0
system	system	NN	0
.	.	.	0
A	A	DT	0
compiler	compiler	JJ	0
130	130	CD	0
is	is	VBZ	0
used	used	VBN	0
to	to	TO	0
compile	compile	VB	0
an	an	DT	0
application	application	NN	0
120	120	CD	0
.	.	.	0
To	To	TO	0
allow	allow	VB	0
a	a	DT	0
user	user	NN	0
to	to	TO	0
instrument	instrument	NN	B-NP
application	application	NN	I-NP
120	120	CD	0
,	,	,	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
110	110	CD	0
may	may	MD	0
be	be	VB	0
provided	provided	VBN	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
2	2	CD	0
,	,	,	0
compiler	compiler	CD	0
130	130	CD	0
also	also	RB	0
interacts	interacts	VBN	0
with	with	IN	0
an	an	DT	0
operating	operating	NN	B-NP
system	system	NN	I-NP
(	(	-LRB-	0
OS	OS	NNP	B-NP
)	)	-RRB-	0
170	170	CD	0
,	,	,	0
which	which	WDT	0
in	in	IN	0
turn	turn	NN	0
interacts	interacts	NN	0
with	with	IN	0
underlying	underlying	JJ	0
hardware	hardware	NN	0
180	180	CD	0
of	of	IN	0
a	a	DT	0
system	system	NN	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
2	2	CD	0
,	,	,	0
there	there	EX	0
are	are	VBP	0
three	three	CD	0
binary	binary	CD	B-NP
program	program	NN	I-NP
present	present	VBP	0
when	when	WRB	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
program	program	NN	I-NP
is	is	VBZ	0
running	running	VBG	0
namely	namely	RB	0
,	,	,	0
application	application	NN	0
120	120	CD	0
,	,	,	0
compiler	compiler	CD	0
130	130	CD	0
,	,	,	0
and	and	CC	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
110	110	CD	0
.	.	.	0
Compiler	Compiler	NNP	0
130	130	CD	0
is	is	VBZ	0
the	the	DT	0
engine	engine	NN	0
that	that	WDT	0
performs	performs	VBZ	0
just-in-time	just-in-time	JJ	B-NP
compilation	compilation	NN	I-NP
and	and	CC	0
instrument	instrument	NN	B-NP
application	application	VBD	I-NP
120	120	CD	0
.	.	.	0
Instrumentation	Instrumentation	JJ	B-NP
tool	tool	NN	I-NP
110	110	CD	0
contains	contains	VBZ	0
the	the	DT	0
instrumentation	instrumentation	NN	0
and	and	CC	0
analysis	analysis	NN	B-NP
routine	routine	JJ	I-NP
and	and	CC	0
is	is	VBZ	0
linked	linked	VBN	0
with	with	IN	0
a	a	DT	0
library	library	NN	B-NP
that	that	WDT	0
allows	allows	VBZ	0
it	it	PRP	0
to	to	TO	0
communicate	communicate	VB	0
with	with	IN	0
compiler	compiler	CD	0
130	130	CD	0
.	.	.	0
At	At	IN	0
the	the	DT	0
highest	highest	JJS	0
level	level	NN	0
,	,	,	0
compiler	compiler	CD	0
130	130	CD	0
includes	includes	VBZ	0
a	a	DT	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
(	(	-LRB-	0
VM	VM	NNP	B-NP
)	)	-RRB-	0
140	140	CD	0
,	,	,	0
a	a	DT	0
code	code	NN	0
cache	cache	VBD	0
135	135	CD	0
,	,	,	0
and	and	CC	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
instrumentation	instrumentation	NN	0
API	API	NNP	0
's	's	POS	0
145	145	CD	0
invoked	invoked	NN	0
by	by	IN	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
110	110	CD	0
.	.	.	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
140	140	CD	0
includes	includes	VBZ	0
a	a	DT	0
JIT	JIT	NNP	B-NP
compiler	compiler	VBD	I-NP
150	150	CD	0
,	,	,	0
an	an	DT	0
emulation	emulation	JJ	B-NP
unit	unit	NN	I-NP
160	160	CD	0
,	,	,	0
and	and	CC	0
a	a	DT	0
dispatcher	dispatcher	JJ	0
155	155	CD	0
.	.	.	0
After	After	IN	0
compiler	compiler	CD	0
130	130	CD	0
gain	gain	NN	B-NP
control	control	NN	I-NP
of	of	IN	0
application	application	NN	0
120	120	CD	0
,	,	,	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
140	140	CD	0
coordinates	coordinates	VBZ	0
its	its	PRP$	0
components	components	NNS	0
to	to	TO	0
execute	execute	VB	0
application	application	NN	0
120	120	CD	0
.	.	.	0
Specifically	Specifically	RB	0
,	,	,	0
JIT	JIT	NNP	B-NP
compiler	compiler	VBD	I-NP
150	150	CD	0
compiles	compiles	NNS	0
and	and	CC	0
instruments	instruments	NNS	0
application	application	NN	B-NP
code	code	NN	I-NP
,	,	,	0
which	which	WDT	0
is	is	VBZ	0
then	then	RB	0
launched	launched	VBN	0
by	by	IN	0
dispatcher	dispatcher	CD	B-NP
155	155	CD	0
.	.	.	0
The	The	DT	0
compiled	compiled	JJ	0
code	code	NN	0
is	is	VBZ	0
stored	stored	VBN	0
in	in	IN	0
code	code	NN	0
cache	cache	VBD	0
135	135	CD	0
.	.	.	0
That	That	WDT	0
is	is	VBZ	0
,	,	,	0
only	only	RB	0
code	code	VB	0
residing	residing	VBN	0
in	in	IN	0
code	code	NN	0
cache	cache	VBD	0
135	135	CD	0
is	is	VBZ	0
executed	executed	VBN	0
:	:	:	0
the	the	DT	0
original	original	JJ	B-NP
code	code	NN	I-NP
is	is	VBZ	0
not	not	RB	0
executed	executed	VBN	0
.	.	.	0
Emulation	Emulation	JJ	B-NP
unit	unit	NN	I-NP
160	160	CD	0
interprets	interprets	CD	0
instruction	instruction	NN	B-NP
that	that	WDT	0
cannot	cannot	RB	0
be	be	VB	0
executed	executed	VBN	0
directly	directly	RB	0
,	,	,	0
and	and	CC	0
may	may	MD	0
be	be	VB	0
used	used	VBN	0
for	for	IN	0
system	system	NN	B-NP
call	call	NN	I-NP
which	which	WDT	0
require	require	VBP	0
special	special	JJ	0
handling	handling	NN	0
from	from	IN	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
140	140	CD	0
.	.	.	0
In	In	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
,	,	,	0
an	an	DT	0
application	application	NN	0
is	is	VBZ	0
compiled	compiled	VBN	0
one	one	CD	0
trace	trace	NN	0
at	at	IN	0
a	a	DT	0
time	time	NN	0
.	.	.	0
A	A	DT	0
trace	trace	NN	0
is	is	VBZ	0
a	a	DT	0
instruction	instruction	NN	B-NP
straight-line	straight-line	JJ	I-NP
sequence	sequence	NN	I-NP
which	which	WDT	0
terminates	terminates	VBZ	0
at	at	IN	0
one	one	CD	0
of	of	IN	0
the	the	DT	0
following	following	JJ	0
conditions	conditions	NNS	0
:	:	:	0
(	(	-LRB-	0
i	i	FW	0
)	)	-RRB-	0
an	an	DT	0
unconditional	unconditional	JJ	B-NP
control	control	NN	I-NP
transfer	transfer	NN	I-NP
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
branch	branch	NN	0
,	,	,	0
call	call	NN	0
,	,	,	0
or	or	CC	0
return	return	NN	0
)	)	-RRB-	0
;	;	:	0
(	(	-LRB-	0
ii	ii	LS	0
)	)	-RRB-	0
a	a	DT	0
predefined	predefined	JJ	0
number	number	NN	0
of	of	IN	0
conditional	conditional	JJ	B-NP
control	control	NN	I-NP
transfer	transfer	NN	I-NP
;	;	:	0
or	or	CC	0
(	(	-LRB-	0
iii	iii	LS	0
)	)	-RRB-	0
a	a	DT	0
predefined	predefined	JJ	0
number	number	NN	0
of	of	IN	0
instruction	instruction	NN	B-NP
have	have	VBP	0
been	been	VBN	0
fetched	fetched	VBN	0
in	in	IN	0
the	the	DT	0
trace	trace	NN	0
.	.	.	0
In	In	IN	0
addition	addition	NN	0
to	to	TO	0
the	the	DT	0
last	last	JJ	0
exit	exit	NN	B-NP
,	,	,	0
a	a	DT	0
trace	trace	NN	0
may	may	MD	0
have	have	VB	0
multiple	multiple	JJ	0
side-exit	side-exit	NN	B-NP
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
conditional	conditional	JJ	B-NP
control	control	NN	I-NP
transfer	transfer	NN	I-NP
)	)	-RRB-	0
.	.	.	0
Each	Each	DT	0
exit	exit	NN	B-NP
initially	initially	RB	0
branches	branches	NNS	0
to	to	TO	0
a	a	DT	0
stub	stub	NN	0
,	,	,	0
which	which	WDT	0
redirects	redirects	JJ	B-NP
control	control	NN	I-NP
to	to	TO	0
the	the	DT	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
.	.	.	0
The	The	DT	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
determines	determines	VBZ	0
the	the	DT	0
target	target	NN	B-NP
address	address	NN	I-NP
(	(	-LRB-	0
which	which	WDT	0
is	is	VBZ	0
statically	statically	JJ	0
unknown	unknown	NN	B-NP
for	for	IN	0
indirect	indirect	JJ	0
control	control	NN	B-NP
transfer	transfer	NN	I-NP
)	)	-RRB-	0
,	,	,	0
generates	generates	VBZ	0
a	a	DT	0
new	new	JJ	0
trace	trace	NN	0
for	for	IN	0
the	the	DT	0
target	target	NN	0
if	if	IN	0
it	it	PRP	0
has	has	VBZ	0
not	not	RB	0
been	been	VBN	0
generated	generated	VBN	0
before	before	RB	0
,	,	,	0
and	and	CC	0
resumes	resumes	JJ	0
execution	execution	NN	0
at	at	IN	0
the	the	DT	0
target	target	NN	B-NP
trace	trace	NN	I-NP
.	.	.	0
To	To	TO	0
improve	improve	VB	0
performance	performance	NN	0
,	,	,	0
in	in	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
the	the	DT	0
compiler	compiler	NN	0
may	may	MD	0
attempt	attempt	VB	0
to	to	TO	0
branch	branch	VB	0
directly	directly	RB	0
from	from	IN	0
a	a	DT	0
trace	trace	JJ	B-NP
exit	exit	NN	I-NP
to	to	TO	0
the	the	DT	0
target	target	NN	B-NP
trace	trace	NN	I-NP
,	,	,	0
bypassing	bypassing	VBG	0
the	the	DT	0
stub	stub	NN	0
and	and	CC	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
.	.	.	0
This	This	DT	0
process	process	NN	0
is	is	VBZ	0
referred	referred	VBN	0
to	to	TO	0
herein	herein	VB	0
as	as	IN	0
trace	trace	JJ	B-NP
linking	linking	NN	I-NP
.	.	.	0
Linking	Linking	VBG	0
a	a	DT	0
direct	direct	JJ	0
control	control	NN	B-NP
transfer	transfer	NN	I-NP
is	is	VBZ	0
straightforward	straightforward	JJ	0
,	,	,	0
as	as	IN	0
it	it	PRP	0
has	has	VBZ	0
a	a	DT	0
unique	unique	JJ	0
target	target	NN	0
.	.	.	0
The	The	DT	0
branch	branch	NN	0
may	may	MD	0
be	be	VB	0
patched	patched	VBN	0
at	at	IN	0
the	the	DT	0
end	end	NN	0
of	of	IN	0
one	one	CD	0
trace	trace	NN	0
to	to	TO	0
jump	jump	VB	0
to	to	TO	0
the	the	DT	0
target	target	NN	B-NP
trace	trace	NN	I-NP
.	.	.	0
However	However	RB	0
,	,	,	0
an	an	DT	0
indirect	indirect	JJ	0
control	control	NN	B-NP
transfer	transfer	NN	I-NP
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
a	a	DT	0
jump	jump	NN	0
,	,	,	0
call	call	NN	0
,	,	,	0
or	or	CC	0
return	return	NN	0
)	)	-RRB-	0
has	has	VBZ	0
multiple	multiple	JJ	0
possible	possible	JJ	0
targets	targets	NNS	0
and	and	CC	0
therefore	therefore	RB	0
implicates	implicates	VB	0
a	a	DT	0
target-prediction	target-prediction	JJ	B-NP
mechanism	mechanism	NN	I-NP
.	.	.	0
Precise	Precise	JJ	B-NP
liveness	liveness	JJ	I-NP
information	information	NN	I-NP
of	of	IN	0
registers	registers	NNS	0
at	at	IN	0
trace	trace	JJ	B-NP
exit	exit	NN	I-NP
makes	makes	VBZ	0
register	register	JJ	B-NP
allocation	allocation	NN	I-NP
more	more	RBR	0
effective	effective	JJ	0
,	,	,	0
since	since	IN	0
dead	dead	JJ	0
registers	registers	NNS	0
can	can	MD	0
be	be	VB	0
reused	reused	VBN	0
by	by	IN	0
the	the	DT	0
compiler	compiler	NN	0
without	without	IN	0
introducing	introducing	VBG	B-NP
spill	spill	NN	I-NP
.	.	.	0
The	The	DT	0
term	term	NN	0
dead	dead	JJ	0
register	register	NN	0
refers	refers	VBZ	0
to	to	TO	0
a	a	DT	0
register	register	NN	0
that	that	WDT	0
will	will	MD	0
have	have	VB	0
its	its	PRP$	0
contents	contents	NNS	0
modified	modified	VBN	0
at	at	IN	0
a	a	DT	0
next	next	JJ	0
instruction	instruction	NN	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
it	it	PRP	0
contains	contains	VBZ	0
invalid	invalid	JJ	0
information	information	NN	0
)	)	-RRB-	0
.	.	.	0
Without	Without	IN	0
a	a	DT	0
complete	complete	JJ	0
flow	flow	NN	B-NP
graph	graph	NN	I-NP
,	,	,	0
livene	livene	NN	B-NP
may	may	MD	0
be	be	VB	0
incrementally	incrementally	JJ	B-NP
computed	computed	NN	I-NP
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
after	after	IN	0
a	a	DT	0
trace	trace	NN	0
at	at	IN	0
address	address	NN	0
A	A	DT	0
is	is	VBZ	0
compiled	compiled	VBN	0
,	,	,	0
the	the	DT	0
livene	livene	NN	B-NP
at	at	IN	0
the	the	DT	0
beginning	beginning	NN	0
of	of	IN	0
the	the	DT	0
trace	trace	NN	0
may	may	MD	0
be	be	VB	0
recorded	recorded	VBN	0
in	in	IN	0
a	a	DT	0
hash	hash	JJ	0
table	table	NN	0
using	using	VBG	0
address	address	NN	0
A	A	NN	0
as	as	IN	0
the	the	DT	0
key	key	NN	0
.	.	.	0
If	If	IN	0
a	a	DT	0
trace	trace	JJ	B-NP
exit	exit	NN	I-NP
has	has	VBZ	0
a	a	DT	0
statically-known	statically-known	JJ	0
target	target	NN	0
,	,	,	0
the	the	DT	0
liveness	liveness	JJ	B-NP
information	information	NN	I-NP
may	may	MD	0
be	be	VB	0
retrieved	retrieved	VBN	0
from	from	IN	0
the	the	DT	0
hash	hash	JJ	0
table	table	NN	0
to	to	TO	0
compute	compute	VB	0
more	more	RBR	0
precise	precise	JJ	0
livene	livene	NN	B-NP
for	for	IN	0
the	the	DT	0
current	current	JJ	0
trace	trace	NN	0
.	.	.	0
In	In	IN	0
such	such	JJ	0
manner	manner	NN	0
,	,	,	0
register	register	NN	0
spills	spills	VBZ	0
introduced	introduced	VBN	0
by	by	IN	0
the	the	DT	0
compiler	compiler	NN	0
's	's	POS	0
register	register	JJ	B-NP
allocation	allocation	NN	I-NP
may	may	MD	0
be	be	VB	0
reduced	reduced	VBN	0
.	.	.	0
Much	Much	RB	0
of	of	IN	0
the	the	DT	0
slowdown	slowdown	NN	B-NP
from	from	IN	0
instrumentation	instrumentation	NN	0
may	may	MD	0
be	be	VB	0
caused	caused	VBN	0
by	by	IN	0
executing	executing	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
,	,	,	0
rather	rather	RB	0
than	than	IN	0
compilation	compilation	JJ	B-NP
time	time	NN	I-NP
(	(	-LRB-	0
which	which	WDT	0
includes	includes	VBZ	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
)	)	-RRB-	0
.	.	.	0
Therefore	Therefore	RB	0
,	,	,	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
beneficial	beneficial	JJ	0
to	to	TO	0
spend	spend	VB	0
more	more	RBR	0
compilation	compilation	JJ	B-NP
time	time	NN	I-NP
in	in	IN	0
optimizing	optimizing	JJ	B-NP
call	call	NN	I-NP
to	to	TO	0
analysis	analysis	NN	B-NP
routine	routine	JJ	I-NP
.	.	.	0
Of	Of	IN	0
course	course	NN	0
,	,	,	0
the	the	DT	0
run	run	NN	B-NP
time	time	NN	I-NP
overhead	overhead	NN	0
of	of	IN	0
executing	executing	VBG	B-NP
analysis	analysis	NN	I-NP
routine	routine	JJ	I-NP
highly	highly	RB	0
depends	depends	VBZ	0
on	on	IN	0
their	their	PRP$	0
invocation	invocation	JJ	B-NP
frequency	frequency	NN	I-NP
and	and	CC	0
complexity	complexity	NN	0
.	.	.	0
Many	Many	JJ	0
frequently-executed	frequently-executed	JJ	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
analysis	analysis	NN	I-NP
routine	routine	JJ	I-NP
perform	perform	VBP	0
only	only	RB	0
simple	simple	JJ	0
tasks	tasks	NNS	0
such	such	JJ	0
as	as	IN	0
counting	counting	VBG	0
and	and	CC	0
tracing	tracing	NN	0
.	.	.	0
Embodiments	Embodiments	NNP	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
may	may	MD	0
optimize	optimize	VB	0
those	those	DT	0
cases	cases	NNS	0
by	by	IN	0
inlining	inlining	VBG	0
the	the	DT	0
analysis	analysis	NN	B-NP
routine	routine	JJ	I-NP
,	,	,	0
which	which	WDT	0
reduces	reduces	VBZ	0
execution	execution	NN	0
overhead	overhead	NN	0
.	.	.	0
Without	Without	IN	0
inlining	inlining	NN	B-NP
,	,	,	0
a	a	DT	0
bridge	bridge	NN	B-NP
routine	routine	NN	I-NP
is	is	VBZ	0
called	called	VBN	0
to	to	TO	0
save	save	VB	0
all	all	DT	0
caller-saved	caller-saved	JJ	B-NP
register	register	NN	I-NP
,	,	,	0
set	set	VBN	0
up	up	RP	0
analysis	analysis	NN	0
routine	routine	JJ	B-NP
argument	argument	NN	I-NP
,	,	,	0
and	and	CC	0
finally	finally	RB	0
call	call	VB	0
the	the	DT	0
analysis	analysis	NN	B-NP
routine	routine	NN	I-NP
.	.	.	0
Each	Each	DT	0
analysis	analysis	NN	B-NP
routine	routine	NN	I-NP
requires	requires	VBZ	0
two	two	CD	0
calls	calls	NNS	0
and	and	CC	0
two	two	CD	0
returns	returns	NNS	0
for	for	IN	0
each	each	DT	0
invocation	invocation	NN	0
.	.	.	0
With	With	IN	0
inlining	inlining	NN	B-NP
,	,	,	0
the	the	DT	0
bridge	bridge	NN	0
may	may	MD	0
be	be	VB	0
eliminated	eliminated	VBN	0
and	and	CC	0
thus	thus	RB	0
the	the	DT	0
two	two	CD	0
calls	calls	NNS	0
and	and	CC	0
returns	returns	NNS	0
may	may	MD	0
be	be	VB	0
avoided	avoided	VBN	0
.	.	.	0
Also	Also	RB	0
,	,	,	0
the	the	DT	0
caller-saved	caller-saved	JJ	B-NP
register	register	NN	I-NP
need	need	VBP	0
not	not	RB	0
be	be	VB	0
explicitly	explicitly	RB	0
saved	saved	VBN	0
.	.	.	0
Instead	Instead	RB	0
,	,	,	0
the	the	DT	0
caller-saved	caller-saved	JJ	B-NP
register	register	NN	I-NP
may	may	MD	0
be	be	VB	0
renamed	renamed	VBN	0
in	in	IN	0
the	the	DT	0
analysis	analysis	NN	B-NP
routine	routine	NN	I-NP
inlined	inlined	JJ	I-NP
body	body	NN	I-NP
,	,	,	0
allowing	allowing	VBG	0
a	a	DT	0
register	register	JJ	B-NP
allocator	allocator	NN	I-NP
to	to	TO	0
manage	manage	VB	0
spilling	spilling	NN	0
.	.	.	0
Furthermore	Furthermore	RB	0
,	,	,	0
inlining	inlining	NN	B-NP
enables	enables	VBZ	0
other	other	JJ	0
optimization	optimization	NN	B-NP
like	like	IN	0
constant	constant	JJ	0
folding	folding	NN	0
of	of	IN	0
analysis	analysis	NN	0
routine	routine	JJ	B-NP
argument	argument	NN	I-NP
.	.	.	0
In	In	IN	0
various	various	JJ	0
embodiments	embodiments	JJ	0
additional	additional	JJ	0
optimization	optimization	NN	B-NP
on	on	IN	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
effected	effected	NNS	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
most	most	JJS	0
analysis	analysis	NN	B-NP
routine	routine	JJ	I-NP
modify	modify	VB	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
or	or	CC	0
conditional	conditional	JJ	B-NP
flag	flag	NN	I-NP
register	register	VBP	0
(	(	-LRB-	0
referred	referred	VBN	0
to	to	TO	0
as	as	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
in	in	IN	0
an	an	DT	0
x86	x86	JJ	B-NP
environment	environment	NN	I-NP
)	)	-RRB-	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
if	if	IN	0
an	an	DT	0
analysis	analysis	NN	0
routine	routine	JJ	B-NP
increment	increment	NN	I-NP
a	a	DT	0
counter	counter	NN	0
,	,	,	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
modified	modified	VBN	0
.	.	.	0
Thus	Thus	RB	0
,	,	,	0
before	before	IN	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
the	the	DT	0
original	original	JJ	B-NP
eflag	eflag	NN	I-NP
register	register	VBP	0
value	value	NN	0
as	as	IN	0
seen	seen	VBN	0
by	by	IN	0
the	the	DT	0
application	application	NN	0
is	is	VBZ	0
to	to	TO	0
be	be	VB	0
preserved	preserved	VBN	0
prior	prior	RB	0
to	to	TO	0
modifying	modifying	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
However	However	RB	0
,	,	,	0
accessing	accessing	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
a	a	DT	0
fairly	fairly	RB	0
expensive	expensive	JJ	B-NP
operation	operation	NN	I-NP
because	because	IN	0
it	it	PRP	0
must	must	MD	0
be	be	VB	0
done	done	VBN	0
by	by	IN	0
pushing	pushing	VBG	0
it	it	PRP	0
onto	onto	IN	0
the	the	DT	0
stack	stack	NN	0
.	.	.	0
Moreover	Moreover	RB	0
,	,	,	0
a	a	DT	0
switch	switch	NN	0
to	to	TO	0
another	another	DT	0
stack	stack	NN	0
may	may	MD	0
be	be	VB	0
performed	performed	VBN	0
before	before	IN	0
pushing	pushing	VBG	0
/	/	RB	0
popping	popping	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
to	to	TO	0
avoid	avoid	VB	0
changing	changing	VBG	0
the	the	DT	0
application	application	NN	B-NP
stack	stack	NN	I-NP
.	.	.	0
The	The	DT	0
compiler	compiler	NN	0
may	may	MD	0
avoid	avoid	VB	0
saving	saving	VBG	0
/	/	RB	0
restoring	restoring	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
as	as	IN	0
much	much	JJ	0
as	as	IN	0
possible	possible	JJ	0
by	by	IN	0
using	using	VBG	0
a	a	DT	0
liveness	liveness	JJ	B-NP
analysis	analysis	NN	I-NP
on	on	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
The	The	DT	0
liveness	liveness	JJ	B-NP
analysis	analysis	NN	I-NP
tracks	tracks	VBZ	0
the	the	DT	0
individual	individual	JJ	B-NP
bit	bit	NN	I-NP
in	in	IN	0
the	the	DT	0
eflag	eflag	NN	B-NP
register	register	VBP	0
written	written	VBN	0
and	and	CC	0
read	read	VB	0
by	by	IN	0
each	each	DT	0
instruction	instruction	NN	0
.	.	.	0
If	If	IN	0
it	it	PRP	0
is	is	VBZ	0
determined	determined	VBN	0
that	that	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
dead	dead	VBN	0
at	at	IN	0
the	the	DT	0
point	point	NN	0
where	where	WRB	0
an	an	DT	0
analysis	analysis	NN	0
routine	routine	JJ	B-NP
call	call	NN	I-NP
is	is	VBZ	0
inserted	inserted	VBN	0
,	,	,	0
saving	saving	VBG	0
and	and	CC	0
restoring	restoring	VBG	0
of	of	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
may	may	MD	0
be	be	VB	0
avoided	avoided	VBN	0
.	.	.	0
In	In	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
further	further	RB	0
may	may	MD	0
be	be	VB	0
optimized	optimized	VBN	0
if	if	IN	0
it	it	PRP	0
can	can	MD	0
be	be	VB	0
scheduled	scheduled	VBN	0
,	,	,	0
provided	provided	VBN	0
that	that	IN	0
the	the	DT	0
resulting	resulting	JJ	0
schedule	schedule	NN	0
still	still	RB	0
honors	honors	VB	0
the	the	DT	0
original	original	JJ	B-NP
semantics	semantics	NN	I-NP
of	of	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
if	if	IN	0
a	a	DT	0
user	user	NN	0
wants	wants	VBZ	0
to	to	TO	0
obtain	obtain	VB	0
an	an	DT	0
execution	execution	NN	B-NP
count	count	NN	I-NP
of	of	IN	0
a	a	DT	0
basic	basic	JJ	0
block	block	NN	0
,	,	,	0
he	he	PRP	B-NP
/	/	VBP	I-NP
she	she	PRP	I-NP
usually	usually	RB	0
updates	updates	VB	0
a	a	DT	0
counter	counter	NN	0
at	at	IN	0
the	the	DT	0
basic	basic	JJ	0
block	block	NN	0
's	's	POS	0
entry	entry	NN	0
.	.	.	0
Nevertheless	Nevertheless	RB	0
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
legal	legal	JJ	0
to	to	TO	0
put	put	VB	0
the	the	DT	0
counter	counter	RB	0
update	update	VB	0
anywhere	anywhere	RB	0
inside	inside	IN	0
the	the	DT	0
basic	basic	JJ	0
block	block	NN	0
.	.	.	0
Having	Having	VBG	0
this	this	DT	0
scheduling	scheduling	NN	B-NP
feasibility	feasibility	NN	I-NP
opens	opens	VBZ	0
up	up	RB	0
various	various	JJ	0
optimization	optimization	JJ	B-NP
opportunity	opportunity	NN	I-NP
.	.	.	0
For	For	IN	0
instance	instance	NN	0
,	,	,	0
the	the	DT	0
counter	counter	JJ	0
update	update	NN	0
may	may	MD	0
be	be	VB	0
placed	placed	VBN	0
at	at	IN	0
a	a	DT	0
point	point	NN	0
in	in	IN	0
the	the	DT	0
basic	basic	JJ	0
block	block	NN	0
where	where	WRB	0
there	there	EX	0
is	is	VBZ	0
a	a	DT	0
free	free	JJ	0
register	register	NN	0
or	or	CC	0
a	a	DT	0
dead	dead	JJ	0
register	register	NN	0
,	,	,	0
for	for	IN	0
example	example	NN	0
.	.	.	0
Then	Then	RB	0
the	the	DT	0
counter	counter	JJ	0
update	update	NN	0
can	can	MD	0
take	take	VB	0
this	this	DT	0
register	register	NN	0
for	for	IN	0
its	its	PRP$	0
own	own	JJ	0
use	use	NN	0
,	,	,	0
thereby	thereby	RB	0
avoiding	avoiding	VBG	0
the	the	DT	0
need	need	NN	0
to	to	TO	0
spill	spill	VB	0
a	a	DT	0
register	register	NN	0
.	.	.	0
On	On	IN	0
an	an	DT	0
in-order	in-order	JJ	B-NP
machine	machine	NN	I-NP
such	such	JJ	0
as	as	IN	0
the	the	DT	0
Intel	Intel	NNP	B-NP
Itanium	Itanium	NNP	I-NP
processor	processor	NN	I-NP
,	,	,	0
the	the	DT	0
counter	counter	JJ	0
update	update	NN	0
may	may	MD	0
be	be	VB	0
scheduled	scheduled	VBN	0
into	into	IN	0
existing	existing	VBG	0
no	no	DT	0
operation	operation	NN	0
(	(	-LRB-	0
nop	nop	NNP	B-NP
)	)	-RRB-	0
instruction	instruction	NN	B-NP
(	(	-LRB-	0
if	if	IN	0
any	any	DT	0
)	)	-RRB-	0
inside	inside	IN	0
the	the	DT	0
basic	basic	JJ	0
block	block	NN	0
and	and	CC	0
hence	hence	RB	0
the	the	DT	0
instrumentation	instrumentation	NN	0
could	could	MD	0
potentially	potentially	RB	0
be	be	VB	0
done	done	VBN	0
at	at	IN	0
no	no	DT	0
cost	cost	NN	0
.	.	.	0
In	In	IN	0
general	general	JJ	0
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
safe	safe	JJ	0
to	to	TO	0
schedule	schedule	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
that	that	WDT	0
does	does	VBZ	0
not	not	RB	0
access	access	VB	0
the	the	DT	0
register	register	NN	0
and	and	CC	0
memory	memory	NN	B-NP
values	values	VBZ	0
used	used	VBN	0
in	in	IN	0
the	the	DT	0
application	application	NN	0
.	.	.	0
This	This	DT	0
orthogonal	orthogonal	JJ	B-NP
relation	relation	NN	I-NP
between	between	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	0
and	and	CC	0
the	the	DT	0
application	application	NN	0
may	may	MD	0
be	be	VB	0
referred	referred	VBN	0
to	to	TO	0
as	as	IN	0
data	data	NN	B-NP
independency	independency	NN	I-NP
.	.	.	0
In	In	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
,	,	,	0
different	different	JJ	0
approaches	approaches	NNS	0
to	to	TO	0
scheduling	scheduling	VB	B-NP
instrumentation	instrumentation	JJ	I-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
effected	effected	NNS	0
.	.	.	0
A	A	DT	0
first	first	JJ	0
approach	approach	NN	0
is	is	VBZ	0
a	a	DT	0
user-directed	user-directed	JJ	B-NP
approach	approach	NN	I-NP
,	,	,	0
where	where	WRB	0
the	the	DT	0
tool	tool	NN	B-NP
writer	writer	NN	I-NP
provides	provides	VBZ	0
hints	hints	VBN	0
to	to	TO	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
engine	engine	NN	I-NP
about	about	IN	0
where	where	WRB	0
to	to	TO	0
schedule	schedule	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
.	.	.	0
The	The	DT	0
data	data	NN	B-NP
independency	independency	NN	I-NP
tool	tool	NN	I-NP
writer	writer	NN	I-NP
guarantee	guarantee	NN	I-NP
.	.	.	0
That	That	WDT	0
is	is	VBZ	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
may	may	MD	0
accept	accept	VB	0
the	the	DT	0
user	user	NN	0
's	's	POS	0
indication	indication	NN	0
of	of	IN	0
data	data	NNS	0
independency	independency	VBN	0
at	at	IN	0
face	face	NN	B-NP
value	value	NN	I-NP
and	and	CC	0
schedule	schedule	NN	B-NP
instrumentation	instrumentation	NN	I-NP
code	code	NN	I-NP
accordingly	accordingly	RB	0
.	.	.	0
The	The	DT	0
second	second	JJ	0
approach	approach	NN	0
is	is	VBZ	0
an	an	DT	0
automatic	automatic	JJ	B-NP
approach	approach	NN	I-NP
,	,	,	0
in	in	IN	0
which	which	WDT	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
engine	engine	NN	I-NP
itself	itself	PRP	0
analyzes	analyzes	VBD	0
the	the	DT	0
code	code	NN	0
to	to	TO	0
be	be	VB	0
instrumented	instrumented	NN	B-NP
and	and	CC	0
determines	determines	VBZ	0
if	if	IN	0
the	the	DT	0
data	data	NN	B-NP
independency	independency	NN	I-NP
exists	exists	VBZ	0
.	.	.	0
In	In	IN	0
an	an	DT	0
implementation	implementation	NN	B-NP
of	of	IN	0
the	the	DT	0
first	first	JJ	0
approach	approach	NN	0
,	,	,	0
a	a	DT	0
user	user	NN	0
may	may	MD	0
be	be	VB	0
provided	provided	VBN	0
with	with	IN	0
a	a	DT	0
command	command	NN	0
to	to	TO	0
provide	provide	VB	0
the	the	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
.	.	.	0
The	The	DT	0
command	command	NN	0
may	may	MD	0
be	be	VB	0
termed	termed	VBN	B-NP
IPOINT_ANYWHERE	IPOINT_ANYWHERE	NNP	I-NP
,	,	,	0
in	in	IN	0
one	one	CD	0
embodiment	embodiment	NNS	0
.	.	.	0
Via	Via	IN	0
this	this	DT	0
command	command	NN	0
,	,	,	0
the	the	DT	0
tool	tool	NN	B-NP
writer	writer	NN	I-NP
can	can	MD	0
specify	specify	VB	0
that	that	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
can	can	MD	0
be	be	VB	0
scheduled	scheduled	VBN	0
anywhere	anywhere	RB	0
within	within	IN	0
the	the	DT	0
scope	scope	NN	0
of	of	IN	0
instrumentation	instrumentation	NN	0
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
a	a	DT	0
basic	basic	JJ	0
block	block	NN	0
,	,	,	0
trace	trace	NN	0
,	,	,	0
or	or	CC	0
function	function	NN	0
)	)	-RRB-	0
.	.	.	0
Upon	Upon	IN	0
receiving	receiving	VBG	0
this	this	DT	0
command	command	NN	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
may	may	MD	0
seek	seek	VB	0
to	to	TO	0
optimize	optimize	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
by	by	IN	0
selective	selective	JJ	B-NP
scheduling	scheduling	NN	I-NP
of	of	IN	0
the	the	DT	0
code	code	NN	0
within	within	IN	0
the	the	DT	0
block	block	NN	0
or	or	CC	0
function	function	NN	0
.	.	.	0
For	For	IN	0
instance	instance	NN	0
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
can	can	MD	0
insert	insert	VB	0
the	the	DT	0
call	call	NN	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
or	or	CC	0
analysis	analysis	NN	B-NP
routine	routine	NN	I-NP
)	)	-RRB-	0
immediately	immediately	RB	0
before	before	IN	0
an	an	DT	0
instruction	instruction	NN	0
that	that	IN	0
overwrites	overwrites	VBG	0
a	a	DT	0
register	register	NN	0
(	(	-LRB-	0
or	or	CC	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
)	)	-RRB-	0
and	and	CC	0
thereby	thereby	RB	0
the	the	DT	0
analysis	analysis	NN	B-NP
routine	routine	NN	I-NP
can	can	MD	0
use	use	VB	0
that	that	DT	0
register	register	NN	0
(	(	-LRB-	0
or	or	CC	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
)	)	-RRB-	0
without	without	IN	0
first	first	JJ	0
spilling	spilling	NN	0
it	it	PRP	0
.	.	.	0
As	As	IN	0
an	an	DT	0
example	example	NN	0
,	,	,	0
an	an	DT	0
optimization	optimization	NN	B-NP
that	that	WDT	0
avoids	avoids	VBZ	0
saving	saving	VBG	0
/	/	RB	0
restoring	restoring	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
during	during	IN	0
execution	execution	NN	0
of	of	IN	0
instrumented	instrumented	JJ	B-NP
binary	binary	JJ	I-NP
code	code	NN	I-NP
may	may	MD	0
provide	provide	VB	0
improved	improved	JJ	0
program	program	NN	B-NP
performance	performance	NN	I-NP
.	.	.	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
avoiding	avoiding	VBG	I-NP
overwriting	overwriting	NN	I-NP
different	different	JJ	I-NP
manner	manner	NN	I-NP
in	in	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
performed	performed	VBN	0
.	.	.	0
A	A	DT	0
first	first	JJ	0
method	method	NN	0
may	may	MD	0
analyze	analyze	VB	0
code	code	NN	0
of	of	IN	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
scope	scope	NN	I-NP
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
a	a	DT	0
basic	basic	JJ	0
block	block	NN	0
)	)	-RRB-	0
for	for	IN	0
an	an	DT	0
instruction	instruction	NN	0
that	that	IN	0
overwrites	overwrites	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
If	If	IN	0
such	such	PDT	0
an	an	DT	0
instruction	instruction	NN	0
,	,	,	0
say	say	VBP	0
i	i	VBN	0
,	,	,	0
is	is	VBZ	0
found	found	VBN	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
scheduled	scheduled	VBN	0
immediately	immediately	RB	0
before	before	IN	0
i	i	FW	0
.	.	.	0
Since	Since	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
already	already	RB	0
dead	dead	JJ	0
after	after	IN	0
i	i	FW	0
,	,	,	0
there	there	EX	0
is	is	VBZ	0
no	no	DT	0
need	need	NN	0
to	to	TO	0
save	save	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
before	before	IN	0
executing	executing	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
.	.	.	0
Referring	Referring	VBG	0
now	now	RB	0
to	to	TO	0
Table	Table	NNP	0
1	1	CD	0
below	below	IN	0
,	,	,	0
shown	shown	VBN	0
is	is	VBZ	0
an	an	DT	0
example	example	NN	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
that	that	WDT	0
includes	includes	VBZ	0
a	a	DT	0
number	number	NN	0
of	of	IN	0
instruction	instruction	NN	B-NP
.	.	.	0
The	The	DT	0
middle	middle	JJ	0
code	code	NN	0
block	block	NN	0
of	of	IN	0
Table	Table	NNP	0
1	1	CD	0
shows	shows	NNS	0
a	a	DT	0
basic	basic	JJ	0
block	block	NN	0
to	to	TO	0
be	be	VB	0
instrumented	instrumented	NN	B-NP
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
,	,	,	0
the	the	DT	0
block	block	NN	0
includes	includes	VBZ	0
an	an	DT	0
instruction	instruction	NN	0
to	to	TO	0
move	move	VB	0
the	the	DT	0
contents	contents	NNS	0
of	of	IN	0
a	a	DT	0
first	first	JJ	0
register	register	NN	0
to	to	TO	0
a	a	DT	0
second	second	JJ	0
register	register	NNS	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
esi	esi	VBG	0
to	to	TO	0
edi	edi	CD	B-NP
)	)	-RRB-	0
,	,	,	0
and	and	CC	0
then	then	RB	0
to	to	TO	0
compare	compare	VB	0
a	a	DT	0
value	value	NN	0
of	of	IN	0
the	the	DT	0
second	second	JJ	0
register	register	NN	0
to	to	TO	0
another	another	DT	0
value	value	NN	0
.	.	.	0
This	This	DT	0
comparison	comparison	NN	B-NP
instruction	instruction	NN	I-NP
will	will	MD	0
thus	thus	RB	0
overwrite	overwrite	VBN	0
at	at	IN	0
least	least	JJS	0
a	a	DT	0
portion	portion	NN	0
of	of	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
Finally	Finally	RB	0
,	,	,	0
the	the	DT	0
code	code	NN	B-NP
block	block	NN	I-NP
includes	includes	VBZ	0
a	a	DT	0
jump	jump	NN	B-NP
instruction	instruction	NN	I-NP
to	to	TO	0
a	a	DT	0
target	target	NN	B-NP
branch	branch	NN	I-NP
.	.	.	0
TABLE	TABLE	NN	0
1	1	LS	0
Table	Table	NN	0
1	1	CD	0
also	also	RB	0
includes	includes	VBZ	0
two	two	CD	0
instrumented	instrumented	CD	B-NP
version	version	NN	I-NP
of	of	IN	0
the	the	DT	0
code	code	NN	0
,	,	,	0
namely	namely	RB	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
version	version	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
(	(	-LRB-	0
shown	shown	VBN	0
on	on	IN	0
the	the	DT	0
right	right	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
1	1	CD	0
)	)	-RRB-	0
and	and	CC	0
an	an	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
instrumented	instrumented	JJ	I-NP
version	version	NN	I-NP
without	without	IN	0
implementing	implementing	VBG	0
optimization	optimization	JJ	B-NP
method	method	NN	I-NP
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
instrumented	instrumented	VBG	0
without	without	IN	0
scheduling	scheduling	NN	0
)	)	-RRB-	0
as	as	RB	0
shown	shown	VBN	0
on	on	IN	0
the	the	DT	0
left	left	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
1	1	CD	0
.	.	.	0
Referring	Referring	VBG	0
to	to	TO	0
the	the	DT	0
unoptimized	unoptimized	JJ	B-NP
instruction	instruction	NN	I-NP
code	code	NN	I-NP
on	on	IN	0
the	the	DT	0
left	left	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
1	1	CD	0
,	,	,	0
since	since	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
alive	alive	JJ	0
at	at	IN	0
the	the	DT	0
first	first	JJ	0
instruction	instruction	NN	0
(	(	-LRB-	0
cmova	cmova	LS	B-NP
)	)	-RRB-	0
,	,	,	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
is	is	VBZ	0
saved	saved	VBN	0
and	and	CC	0
restored	restored	VBN	0
around	around	IN	0
the	the	DT	0
increment	increment	JJ	B-NP
instruction	instruction	NN	I-NP
(	(	-LRB-	0
the	the	DT	0
desired	desired	JJ	0
instrumentation	instrumentation	NN	B-NP
function	function	NN	I-NP
)	)	-RRB-	0
.	.	.	0
Also	Also	RB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
switches	switches	VBZ	0
to	to	TO	0
another	another	DT	0
stack	stack	NN	0
before	before	IN	0
the	the	DT	0
pushf	pushf	JJ	B-NP
instruction	instruction	NN	I-NP
,	,	,	0
which	which	WDT	0
flushes	flushes	VBZ	0
the	the	DT	0
entire	entire	JJ	0
processor	processor	NN	B-NP
pipeline	pipeline	NN	I-NP
,	,	,	0
to	to	TO	0
avoid	avoid	VB	0
touching	touching	VBG	0
the	the	DT	0
user	user	NN	B-NP
stack	stack	NN	I-NP
(	(	-LRB-	0
for	for	IN	0
instrumentation	instrumentation	NN	B-NP
transparency	transparency	NN	I-NP
reason	reason	NN	I-NP
)	)	-RRB-	0
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
uses	uses	VBZ	0
six	six	CD	0
instruction	instruction	NN	B-NP
and	and	CC	0
further	further	RB	0
causes	causes	VBZ	0
the	the	DT	0
entire	entire	JJ	0
processor	processor	NN	B-NP
pipeline	pipeline	NN	I-NP
to	to	TO	0
be	be	VB	0
flushed	flushed	NNS	0
,	,	,	0
which	which	WDT	0
is	is	VBZ	0
a	a	DT	0
very	very	RB	0
expensive	expensive	JJ	B-NP
process	process	NN	I-NP
.	.	.	0
In	In	IN	0
contrast	contrast	NN	0
,	,	,	0
referring	referring	VBG	0
to	to	TO	0
the	the	DT	0
right	right	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
1	1	CD	0
,	,	,	0
shown	shown	VBN	0
is	is	VBZ	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
block	block	NN	I-NP
resulting	resulting	VBG	0
from	from	IN	0
instrumentation	instrumentation	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
Because	Because	IN	0
the	the	DT	0
desired	desired	JJ	0
instrumentation	instrumentation	NN	B-NP
instruction	instruction	NN	I-NP
,	,	,	0
namely	namely	RB	0
a	a	DT	0
counter	counter	NN	0
update	update	NNS	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
inc	inc	NNS	0
(	(	-LRB-	0
eax	eax	LS	B-NP
)	)	-RRB-	0
)	)	-RRB-	0
is	is	VBZ	0
scheduled	scheduled	VBN	0
immediately	immediately	RB	0
before	before	IN	0
the	the	DT	0
compare	compare	JJ	0
instruction	instruction	NN	0
(	(	-LRB-	0
cmp	cmp	LS	B-NP
)	)	-RRB-	0
,	,	,	0
which	which	WDT	0
writes	writes	VBZ	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
,	,	,	0
there	there	EX	0
is	is	VBZ	0
no	no	DT	0
need	need	NN	0
to	to	TO	0
save	save	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
only	only	RB	0
a	a	DT	0
single	single	JJ	0
instruction	instruction	NN	0
is	is	VBZ	0
added	added	VBN	0
for	for	IN	0
purposes	purposes	NNS	0
of	of	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	0
.	.	.	0
Furthermore	Furthermore	RB	0
,	,	,	0
there	there	EX	0
is	is	VBZ	0
no	no	DT	0
need	need	NN	0
to	to	TO	0
spill	spill	VB	0
any	any	DT	0
registers	registers	NN	0
or	or	CC	0
change	change	NN	B-NP
stack	stack	NN	I-NP
.	.	.	0
As	As	IN	0
such	such	JJ	0
,	,	,	0
the	the	DT	0
processor	processor	NN	B-NP
pipeline	pipeline	NN	I-NP
need	need	VBP	0
not	not	RB	0
be	be	VB	0
flushed	flushed	NNS	0
and	and	CC	0
execution	execution	NN	0
of	of	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
is	is	VBZ	0
thus	thus	RB	0
optimized	optimized	VBN	0
.	.	.	0
If	If	IN	0
the	the	DT	0
first	first	JJ	0
method	method	NN	0
is	is	VBZ	0
not	not	RB	0
applicable	applicable	JJ	0
,	,	,	0
a	a	DT	0
second	second	JJ	0
method	method	NN	0
may	may	MD	0
be	be	VB	0
performed	performed	VBN	0
.	.	.	0
Namely	Namely	RB	0
,	,	,	0
an	an	DT	0
instruction	instruction	NN	0
in	in	IN	0
the	the	DT	0
scope	scope	NN	0
being	being	VBG	B-NP
instrumented	instrumented	NN	I-NP
that	that	WDT	0
overwrites	overwrites	VBZ	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
register	register	NN	I-NP
may	may	MD	0
be	be	VB	0
sought	sought	VBN	0
.	.	.	0
With	With	IN	0
this	this	DT	0
free	free	JJ	0
register	register	NN	0
,	,	,	0
an	an	DT	0
instruction	instruction	NN	B-NP
sequence	sequence	NN	I-NP
may	may	MD	0
be	be	VB	0
generated	generated	VBN	0
that	that	IN	0
performs	performs	VBG	0
the	the	DT	0
intended	intended	JJ	0
instrumentation	instrumentation	NN	0
but	but	CC	0
does	does	VBZ	0
not	not	RB	0
modify	modify	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
An	An	DT	0
example	example	NN	0
is	is	VBZ	0
given	given	VBN	0
in	in	IN	0
Table	Table	NNP	0
2	2	CD	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
Table	Table	NNP	0
2	2	CD	0
,	,	,	0
an	an	DT	0
original	original	JJ	B-NP
code	code	NN	I-NP
block	block	NN	I-NP
is	is	VBZ	0
presented	presented	VBN	0
,	,	,	0
along	along	RB	0
with	with	IN	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
version	version	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
on	on	IN	0
the	the	DT	0
right	right	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
2	2	CD	0
)	)	-RRB-	0
,	,	,	0
and	and	CC	0
an	an	DT	0
unoptimized	unoptimized	JJ	B-NP
instrumented	instrumented	JJ	I-NP
version	version	NN	I-NP
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
on	on	IN	0
the	the	DT	0
left	left	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
2	2	CD	0
)	)	-RRB-	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
Table	Table	NNP	0
2	2	CD	0
,	,	,	0
the	the	DT	0
original	original	JJ	B-NP
code	code	NN	I-NP
block	block	NN	I-NP
moves	moves	VBZ	0
the	the	DT	0
contents	contents	NNS	0
of	of	IN	0
a	a	DT	0
first	first	JJ	0
register	register	NN	0
to	to	TO	0
a	a	DT	0
second	second	JJ	0
register	register	NNS	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
ebx	ebx	VBG	0
to	to	TO	0
edi	edi	CD	B-NP
)	)	-RRB-	0
and	and	CC	0
secondly	secondly	JJ	0
moves	moves	NNS	0
the	the	DT	0
contents	contents	NNS	0
of	of	IN	0
a	a	DT	0
third	third	JJ	0
register	register	NN	0
to	to	TO	0
a	a	DT	0
fourth	fourth	JJ	0
register	register	NNS	0
(	(	-LRB-	0
i.e.	i.e.	FW	0
,	,	,	0
esi	esi	VBG	0
to	to	TO	0
edx	edx	CD	B-NP
)	)	-RRB-	0
.	.	.	0
Then	Then	RB	0
the	the	DT	0
code	code	NN	B-NP
block	block	NN	I-NP
jumps	jumps	VBZ	0
to	to	TO	0
a	a	DT	0
target	target	NN	B-NP
branch	branch	NN	I-NP
.	.	.	0
TABLE	TABLE	NN	0
2	2	LS	0
The	The	DT	0
optimized	optimized	JJ	B-NP
instrumented	instrumented	JJ	I-NP
code	code	NN	I-NP
block	block	NN	I-NP
shown	shown	VBN	0
on	on	IN	0
the	the	DT	0
right	right	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
2	2	CD	0
schedules	schedules	CD	0
three	three	CD	0
new	new	JJ	0
instruction	instruction	NN	B-NP
prior	prior	RB	0
to	to	TO	0
the	the	DT	0
second	second	JJ	0
move	move	NN	B-NP
instruction	instruction	NN	I-NP
.	.	.	0
These	These	DT	0
three	three	CD	0
instruction	instruction	NN	B-NP
make	make	VBP	0
use	use	NN	0
of	of	IN	0
the	the	DT	0
free	free	JJ	0
register	register	JJ	B-NP
edx	edx	NN	I-NP
to	to	TO	0
perform	perform	VB	0
an	an	DT	0
increment	increment	NN	0
without	without	IN	0
modifying	modifying	VBG	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
The	The	DT	0
added	added	JJ	0
instrumentation	instrumentation	NN	B-NP
instruction	instruction	NN	I-NP
lea	lea	NN	I-NP
is	is	VBZ	0
an	an	DT	0
x86	x86	JJ	B-NP
instruction	instruction	NN	I-NP
that	that	WDT	0
computes	computes	VBZ	0
the	the	DT	0
effective	effective	JJ	0
address	address	NN	0
of	of	IN	0
the	the	DT	0
given	given	VBN	0
addressing	addressing	VBG	B-NP
mode	mode	NN	I-NP
,	,	,	0
and	and	CC	0
does	does	VBZ	0
not	not	RB	0
modify	modify	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
the	the	DT	0
optimized	optimized	JJ	B-NP
instrumented	instrumented	JJ	I-NP
code	code	NN	I-NP
adds	adds	VBZ	0
three	three	CD	0
instruction	instruction	NN	B-NP
and	and	CC	0
avoids	avoids	VBZ	0
saving	saving	VBG	0
/	/	CD	0
restoring	restoring	NN	0
of	of	IN	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
.	.	.	0
While	While	IN	0
shown	shown	VBN	0
with	with	IN	0
the	the	DT	0
use	use	NN	0
of	of	IN	0
this	this	DT	0
particular	particular	JJ	0
instruction	instruction	NN	0
and	and	CC	0
register	register	VB	0
in	in	IN	0
the	the	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
Table	Table	NNP	0
2	2	CD	0
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
to	to	TO	0
be	be	VB	0
understood	understood	VBN	0
that	that	IN	0
other	other	JJ	0
instruction	instruction	NN	B-NP
and	and	CC	0
registers	registers	NNS	0
that	that	WDT	0
do	do	VBP	0
not	not	RB	0
modify	modify	VB	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
or	or	CC	0
another	another	DT	0
conditional	conditional	JJ	B-NP
code	code	NN	I-NP
register	register	NN	I-NP
may	may	MD	0
be	be	VB	0
implemented	implemented	VBN	0
in	in	IN	0
other	other	JJ	0
embodiments	embodiments	NN	0
.	.	.	0
In	In	IN	0
contrast	contrast	NN	0
,	,	,	0
referring	referring	VBG	0
to	to	TO	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
block	block	NN	I-NP
on	on	IN	0
the	the	DT	0
left	left	JJ	0
side	side	NN	0
of	of	IN	0
Table	Table	NNP	0
2	2	CD	0
,	,	,	0
the	the	DT	0
original	original	JJ	B-NP
code	code	NN	I-NP
block	block	NN	I-NP
is	is	VBZ	0
instrumented	instrumented	VBN	0
in	in	IN	0
the	the	DT	0
same	same	JJ	0
manner	manner	NN	0
as	as	IN	0
described	described	VBN	0
above	above	IN	0
regarding	regarding	VBG	B-NP
Table	Table	NNP	I-NP
1	1	CD	0
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
expensive	expensive	JJ	B-NP
stack	stack	JJ	I-NP
switch	switch	NN	I-NP
and	and	CC	0
processor	processor	NN	B-NP
flush	flush	JJ	I-NP
occur	occur	VBP	0
.	.	.	0
Referring	Referring	VBG	0
now	now	RB	0
to	to	TO	0
FIG.	FIG.	CD	0
3	3	CD	0
,	,	,	0
shown	shown	VBN	0
is	is	VBZ	0
a	a	DT	0
flow	flow	NN	B-NP
diagram	diagram	NN	I-NP
of	of	IN	0
a	a	DT	0
method	method	NN	0
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
3	3	CD	0
,	,	,	0
method	method	NN	0
200	200	CD	0
may	may	MD	0
be	be	VB	0
used	used	VBN	0
to	to	TO	0
optimize	optimize	VB	0
placement	placement	NN	0
of	of	IN	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
within	within	IN	0
a	a	DT	0
code	code	NN	B-NP
block	block	NN	I-NP
.	.	.	0
Method	Method	NN	0
200	200	CD	0
may	may	MD	0
begin	begin	VB	0
by	by	IN	0
receiving	receiving	VBG	0
an	an	DT	0
instruction	instruction	NN	0
to	to	TO	0
insert	insert	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
(	(	-LRB-	0
block	block	VB	0
210	210	CD	0
)	)	-RRB-	0
.	.	.	0
As	As	RB	0
discussed	discussed	VBN	0
above	above	IN	0
,	,	,	0
such	such	PDT	0
an	an	DT	0
instruction	instruction	NN	0
or	or	CC	0
command	command	NN	0
may	may	MD	0
be	be	VB	0
received	received	VBN	0
from	from	IN	0
a	a	DT	0
tool	tool	NN	B-NP
writer	writer	NN	I-NP
.	.	.	0
Next	Next	IN	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
if	if	IN	0
the	the	DT	0
instruction	instruction	NN	0
provides	provides	VBZ	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
(	(	-LRB-	0
diamond	diamond	CD	0
215	215	CD	0
)	)	-RRB-	0
.	.	.	0
As	As	RB	0
discussed	discussed	VBN	0
above	above	IN	0
,	,	,	0
this	this	DT	0
hint	hint	NN	0
may	may	MD	0
indicate	indicate	VB	0
to	to	TO	0
the	the	DT	0
compiler	compiler	NN	0
or	or	CC	0
other	other	JJ	0
instrumentation	instrumentation	NN	B-NP
engine	engine	NN	I-NP
that	that	IN	0
there	there	EX	0
are	are	VBP	0
no	no	DT	0
dependency	dependency	NN	B-NP
between	between	IN	0
application	application	NN	B-NP
data	data	NN	I-NP
and	and	CC	0
instrumentation	instrumentation	NN	0
data	data	NNS	0
.	.	.	0
If	If	IN	0
such	such	PDT	0
a	a	DT	0
hint	hint	NN	0
is	is	VBZ	0
present	present	JJ	0
,	,	,	0
control	control	NN	0
may	may	MD	0
pass	pass	VB	0
directly	directly	RB	0
to	to	TO	0
block	block	VB	0
225	225	CD	0
where	where	WRB	0
the	the	DT	0
code	code	NN	0
to	to	TO	0
be	be	VB	0
instrumented	instrumented	NN	B-NP
is	is	VBZ	0
analyzed	analyzed	VBN	0
.	.	.	0
For	For	IN	0
example	example	NN	0
,	,	,	0
the	the	DT	0
code	code	NN	0
may	may	MD	0
be	be	VB	0
analyzed	analyzed	VBN	0
to	to	TO	0
determine	determine	VB	0
whether	whether	IN	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
instruction	instruction	NN	B-NP
within	within	IN	0
the	the	DT	0
code	code	NN	0
causes	causes	VBZ	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register	register	NN	I-NP
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
the	the	DT	0
eflags	eflags	JJ	B-NP
register	register	NN	I-NP
)	)	-RRB-	0
to	to	TO	0
be	be	VB	0
updated	updated	VBN	0
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
modified	modified	VBN	0
or	or	CC	0
overwritten	overwritten	CD	B-NP
)	)	-RRB-	0
.	.	.	0
If	If	IN	0
so	so	RB	0
,	,	,	0
prior	prior	RB	0
to	to	TO	0
that	that	DT	0
instruction	instruction	NN	0
the	the	DT	0
register	register	NN	0
is	is	VBZ	0
considered	considered	VBN	0
dead	dead	JJ	0
.	.	.	0
Thus	Thus	RB	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
whether	whether	IN	0
an	an	DT	0
instruction	instruction	NN	0
modifies	modifies	VBZ	0
the	the	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register	register	NN	I-NP
(	(	-LRB-	0
diamond	diamond	CD	0
230	230	CD	0
)	)	-RRB-	0
.	.	.	0
If	If	IN	0
so	so	RB	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
inserted	inserted	VBN	0
immediately	immediately	RB	0
prior	prior	RB	0
to	to	TO	0
that	that	DT	0
instruction	instruction	NN	0
(	(	-LRB-	0
block	block	VB	0
240	240	CD	0
)	)	-RRB-	0
.	.	.	0
Accordingly	Accordingly	RB	0
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
has	has	VBZ	0
been	been	VBN	0
scheduled	scheduled	VBN	0
to	to	TO	0
an	an	DT	0
optimized	optimized	JJ	B-NP
location	location	NN	I-NP
and	and	CC	0
method	method	NN	0
200	200	CD	0
ends	ends	NNS	0
.	.	.	0
If	If	IN	0
instead	instead	RB	0
at	at	IN	0
diamond	diamond	CD	0
230	230	CD	0
the	the	DT	0
analysis	analysis	NN	0
indicates	indicates	VBZ	0
that	that	IN	0
the	the	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register	register	NN	I-NP
is	is	VBZ	0
not	not	RB	0
modified	modified	VBN	0
,	,	,	0
next	next	IN	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
whether	whether	IN	0
an	an	DT	0
instruction	instruction	NN	0
within	within	IN	0
the	the	DT	0
code	code	NN	0
overwrites	overwrites	VBD	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
register	register	NN	I-NP
(	(	-LRB-	0
diamond	diamond	CD	0
250	250	CD	0
)	)	-RRB-	0
.	.	.	0
In	In	IN	0
some	some	DT	0
embodiments	embodiments	NN	0
,	,	,	0
overwriting	overwriting	VBG	0
this	this	DT	0
general-purpose	general-purpose	JJ	B-NP
register	register	NN	I-NP
may	may	MD	0
not	not	RB	0
affect	affect	VB	0
the	the	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register	register	NN	I-NP
.	.	.	0
If	If	IN	0
such	such	PDT	0
an	an	DT	0
instruction	instruction	NN	0
exists	exists	VBZ	0
,	,	,	0
control	control	NN	0
may	may	MD	0
pass	pass	VB	0
to	to	TO	0
block	block	VB	0
240	240	CD	0
where	where	WRB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
is	is	VBZ	0
inserted	inserted	VBN	0
immediately	immediately	RB	0
prior	prior	RB	0
to	to	TO	0
such	such	JJ	0
instruction	instruction	NN	0
(	(	-LRB-	0
block	block	VB	0
240	240	CD	0
)	)	-RRB-	0
.	.	.	0
Thus	Thus	RB	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
optimized	optimized	JJ	I-NP
location	location	NN	I-NP
may	may	MD	0
be	be	VB	0
realized	realized	VBN	0
,	,	,	0
and	and	CC	0
method	method	NN	0
200	200	CD	0
concludes	concludes	NNS	0
.	.	.	0
If	If	IN	0
instead	instead	RB	0
at	at	IN	0
diamond	diamond	CD	0
250	250	CD	0
it	it	PRP	0
is	is	VBZ	0
determined	determined	VBN	0
that	that	IN	0
no	no	DT	0
instruction	instruction	NN	B-NP
overwrite	overwrite	VBP	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
register	register	NN	I-NP
,	,	,	0
control	control	NN	0
may	may	MD	0
pass	pass	VB	0
to	to	TO	0
diamond	diamond	CD	0
260	260	CD	0
.	.	.	0
There	There	EX	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
whether	whether	IN	0
any	any	DT	0
instruction	instruction	NN	B-NP
in	in	IN	0
the	the	DT	0
code	code	NN	0
are	are	VBP	0
no	no	DT	0
operation	operation	NN	0
(	(	-LRB-	0
nop	nop	LS	B-NP
)	)	-RRB-	0
instruction	instruction	NN	B-NP
(	(	-LRB-	0
diamond	diamond	CD	0
260	260	CD	0
)	)	-RRB-	0
.	.	.	0
If	If	IN	0
one	one	CD	0
or	or	CC	0
more	more	RBR	0
such	such	JJ	0
instruction	instruction	NN	B-NP
exist	exist	VBP	0
,	,	,	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
may	may	MD	0
be	be	VB	0
placed	placed	VBN	0
in	in	IN	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
of	of	IN	0
those	those	DT	0
nop	nop	NNP	B-NP
(	(	-LRB-	0
block	block	VB	0
270	270	CD	0
)	)	-RRB-	0
.	.	.	0
From	From	IN	0
both	both	DT	0
of	of	IN	0
block	block	NN	0
270	270	CD	0
and	and	CC	0
diamond	diamond	NN	0
260	260	CD	0
,	,	,	0
the	the	DT	0
method	method	NN	0
may	may	MD	0
conclude	conclude	VB	0
.	.	.	0
Even	Even	RB	0
when	when	WRB	0
a	a	DT	0
user	user	NN	0
does	does	VBZ	0
not	not	RB	0
provide	provide	VB	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
,	,	,	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
may	may	MD	0
attempt	attempt	VB	0
to	to	TO	0
schedule	schedule	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
for	for	IN	0
purposes	purposes	NNS	0
of	of	IN	0
optimization	optimization	NN	B-NP
.	.	.	0
Specifically	Specifically	RB	0
,	,	,	0
if	if	IN	0
at	at	IN	0
diamond	diamond	CD	0
215	215	CD	0
it	it	PRP	0
is	is	VBZ	0
determined	determined	VBN	0
that	that	IN	0
the	the	DT	0
user	user	NN	0
does	does	VBZ	0
not	not	RB	0
provide	provide	VB	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
,	,	,	0
next	next	IN	0
it	it	PRP	0
may	may	MD	0
be	be	VB	0
determined	determined	VBN	0
whether	whether	IN	0
a	a	DT	0
data	data	NN	B-NP
independency	independency	NN	I-NP
exists	exists	VBZ	0
in	in	IN	0
the	the	DT	0
code	code	NN	0
to	to	TO	0
be	be	VB	0
instrumented	instrumented	NN	B-NP
(	(	-LRB-	0
diamond	diamond	CD	0
220	220	CD	0
)	)	-RRB-	0
.	.	.	0
In	In	IN	0
various	various	JJ	0
embodiments	embodiments	NN	0
,	,	,	0
the	the	DT	0
compiler	compiler	NN	0
may	may	MD	0
analyze	analyze	VB	0
the	the	DT	0
code	code	NN	0
to	to	TO	0
check	check	VB	0
for	for	IN	0
such	such	JJ	0
independency	independency	NN	B-NP
.	.	.	0
If	If	IN	0
the	the	DT	0
independency	independency	NN	B-NP
exists	exists	VBZ	0
,	,	,	0
control	control	NN	0
may	may	MD	0
pass	pass	VB	0
to	to	TO	0
block	block	VB	0
225	225	CD	0
.	.	.	0
In	In	IN	0
contrast	contrast	NN	0
,	,	,	0
if	if	IN	0
no	no	DT	0
such	such	JJ	0
independency	independency	NN	B-NP
exists	exists	VBZ	0
,	,	,	0
the	the	DT	0
method	method	NN	0
may	may	MD	0
terminate	terminate	VB	0
.	.	.	0
Embodiments	Embodiments	NNP	0
may	may	MD	0
be	be	VB	0
implemented	implemented	VBN	0
in	in	IN	0
a	a	DT	0
computer	computer	NN	B-NP
program	program	NN	I-NP
.	.	.	0
As	As	IN	0
such	such	JJ	0
,	,	,	0
these	these	DT	0
embodiments	embodiments	NN	0
may	may	MD	0
be	be	VB	0
stored	stored	VBN	0
on	on	IN	0
a	a	DT	0
storage	storage	NN	0
or	or	CC	0
including	including	VBG	B-NP
instruction	instruction	NN	I-NP
signal	signal	NN	I-NP
medium	medium	NN	I-NP
which	which	WDT	0
can	can	MD	0
be	be	VB	0
used	used	VBN	0
to	to	TO	0
program	program	VB	0
a	a	DT	0
system	system	NN	0
to	to	TO	0
perform	perform	VB	0
the	the	DT	0
embodiments	embodiments	NN	0
.	.	.	0
The	The	DT	0
storage	storage	NN	B-NP
medium	medium	NN	I-NP
may	may	MD	0
include	include	VB	0
,	,	,	0
but	but	CC	0
is	is	VBZ	0
not	not	RB	0
limited	limited	VBN	0
to	to	TO	0
,	,	,	0
any	any	DT	0
type	type	NN	0
of	of	IN	0
disk	disk	NN	0
including	including	VBG	0
floppy	floppy	JJ	0
disks	disks	NNS	0
,	,	,	0
optical	optical	JJ	B-NP
disk	disk	NN	I-NP
,	,	,	0
compact	compact	JJ	B-NP
disk	disk	NN	I-NP
read-only	read-only	JJ	I-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
CD-ROMs	CD-ROMs	NNP	B-NP
)	)	-RRB-	0
,	,	,	0
compact	compact	JJ	B-NP
disk	disk	NN	I-NP
rewritable	rewritable	NN	I-NP
(	(	-LRB-	0
CD-RWs	CD-RWs	NNP	B-NP
)	)	-RRB-	0
,	,	,	0
and	and	CC	0
magneto-optical	magneto-optical	JJ	B-NP
disk	disk	NN	I-NP
,	,	,	0
semiconductor	semiconductor	NN	B-NP
device	device	NN	I-NP
such	such	JJ	0
as	as	IN	0
read-only	read-only	JJ	B-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
ROMs	ROMs	NNP	B-NP
)	)	-RRB-	0
,	,	,	0
random	random	JJ	B-NP
access	access	NN	I-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
RAMs	RAMs	NNP	B-NP
)	)	-RRB-	0
such	such	JJ	0
as	as	IN	0
dynamic	dynamic	JJ	B-NP
ram	ram	NN	I-NP
(	(	-LRB-	0
DRAMs	DRAMs	NNS	0
)	)	-RRB-	0
,	,	,	0
erasable	erasable	JJ	B-NP
programmable	programmable	JJ	I-NP
read-only	read-only	JJ	I-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
EPROMs	EPROMs	NNP	B-NP
)	)	-RRB-	0
,	,	,	0
electrically	electrically	RB	B-NP
erasable	erasable	JJ	I-NP
programmable	programmable	JJ	I-NP
read-only	read-only	JJ	I-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
EEPROMs	EEPROMs	NNP	B-NP
)	)	-RRB-	0
,	,	,	0
flash	flash	JJ	B-NP
memory	memory	NN	I-NP
,	,	,	0
magnetic	magnetic	JJ	0
or	or	CC	0
optical	optical	JJ	B-NP
card	card	NN	I-NP
,	,	,	0
or	or	CC	0
any	any	DT	0
type	type	NN	0
of	of	IN	0
media	media	NNS	0
suitable	suitable	JJ	0
for	for	IN	0
storing	storing	VBG	0
electronic	electronic	JJ	B-NP
instruction	instruction	NN	I-NP
.	.	.	0
Similarly	Similarly	RB	0
,	,	,	0
embodiments	embodiments	NNS	0
may	may	MD	0
be	be	VB	0
implemented	implemented	VBN	0
as	as	IN	0
software	software	NN	0
modules	modules	VBZ	0
executed	executed	VBN	0
by	by	IN	0
a	a	DT	0
programmable	programmable	JJ	0
control	control	NN	B-NP
device	device	NN	I-NP
,	,	,	0
such	such	JJ	0
as	as	IN	0
a	a	DT	0
computer	computer	NN	B-NP
processor	processor	NN	I-NP
or	or	CC	0
a	a	DT	0
custom	custom	NN	0
designed	designed	VBN	B-NP
state	state	NN	I-NP
machine	machine	NN	I-NP
.	.	.	0
Now	Now	RB	0
referring	referring	VBG	0
to	to	TO	0
FIG.	FIG.	CD	0
4	4	CD	0
,	,	,	0
in	in	IN	0
one	one	CD	0
embodiment	embodiment	CD	0
a	a	DT	0
computer	computer	NN	B-NP
system	system	NN	I-NP
400	400	CD	0
includes	includes	VBZ	0
a	a	DT	0
processor	processor	NN	0
410	410	CD	0
,	,	,	0
which	which	WDT	0
may	may	MD	0
include	include	VB	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
or	or	CC	0
special-purpose	special-purpose	JJ	B-NP
processor	processor	NN	I-NP
such	such	JJ	0
as	as	IN	0
a	a	DT	0
microprocessor	microprocessor	NN	0
,	,	,	0
microcontroller	microcontroller	NN	B-NP
,	,	,	0
a	a	DT	0
programmable	programmable	JJ	B-NP
gate	gate	NN	I-NP
array	array	NN	I-NP
(	(	-LRB-	0
polyglycolic	polyglycolic	NN	B-NP
acid	acid	JJ	I-NP
)	)	-RRB-	0
,	,	,	0
and	and	CC	0
the	the	DT	0
like	like	JJ	0
.	.	.	0
As	As	RB	0
used	used	VBN	0
herein	herein	NN	0
,	,	,	0
the	the	DT	0
term	term	NN	B-NP
computer	computer	NN	I-NP
system	system	NN	I-NP
may	may	MD	0
refer	refer	VB	0
to	to	TO	0
any	any	DT	0
type	type	NN	0
of	of	IN	0
processor-based	processor-based	JJ	B-NP
system	system	NN	I-NP
,	,	,	0
such	such	JJ	0
as	as	IN	0
a	a	DT	0
desktop	desktop	JJ	0
computer	computer	NN	0
,	,	,	0
a	a	DT	0
server	server	JJ	B-NP
computer	computer	NN	I-NP
,	,	,	0
a	a	DT	0
laptop	laptop	JJ	0
computer	computer	NN	0
,	,	,	0
or	or	CC	0
the	the	DT	0
like	like	JJ	0
.	.	.	0
The	The	DT	0
processor	processor	NN	0
410	410	CD	0
may	may	MD	0
be	be	VB	0
coupled	coupled	VBN	0
over	over	IN	0
a	a	DT	0
host	host	NN	B-NP
bus	bus	NN	I-NP
415	415	CD	0
to	to	TO	0
a	a	DT	0
memory	memory	NN	B-NP
hub	hub	NN	I-NP
430	430	CD	0
in	in	IN	0
one	one	CD	0
embodiment	embodiment	NN	0
,	,	,	0
which	which	WDT	0
may	may	MD	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
a	a	DT	0
system	system	NN	B-NP
memory	memory	NN	I-NP
420	420	CD	0
(	(	-LRB-	0
e.g.	e.g.	NNP	0
,	,	,	0
a	a	DT	0
dynamic	dynamic	JJ	B-NP
random	random	JJ	I-NP
access	access	NN	I-NP
memory	memory	NN	I-NP
(	(	-LRB-	0
RAM	RAM	NNP	B-NP
)	)	-RRB-	0
)	)	-RRB-	0
via	via	IN	0
a	a	DT	0
memory	memory	NN	B-NP
bus	bus	NN	I-NP
425	425	CD	0
.	.	.	0
Programs	Programs	NNS	0
such	such	JJ	0
as	as	IN	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
tool	tool	NN	I-NP
and	and	CC	0
a	a	DT	0
JIT	JIT	NNP	B-NP
compiler	compiler	NN	I-NP
in	in	IN	0
accordance	accordance	NN	0
with	with	IN	0
an	an	DT	0
embodiment	embodiment	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
may	may	MD	0
be	be	VB	0
stored	stored	VBN	0
in	in	IN	0
system	system	NN	B-NP
memory	memory	NN	I-NP
420	420	CD	0
during	during	IN	0
operation	operation	NN	0
.	.	.	0
The	The	DT	0
memory	memory	NN	B-NP
hub	hub	NN	I-NP
430	430	CD	0
may	may	MD	0
also	also	RB	0
be	be	VB	0
coupled	coupled	VBN	0
over	over	IN	0
an	an	DT	0
Advanced	Advanced	NNP	B-NP
Graphics	Graphics	NNP	I-NP
Port	Port	NNP	I-NP
(	(	-LRB-	0
AGP	AGP	NNP	B-NP
)	)	-RRB-	0
bus	bus	NN	0
433	433	CD	0
to	to	TO	0
a	a	DT	0
video	video	JJ	B-NP
controller	controller	NN	I-NP
435	435	CD	0
,	,	,	0
which	which	WDT	0
may	may	MD	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
a	a	DT	0
display	display	NN	0
437	437	CD	0
.	.	.	0
The	The	DT	0
AGP	AGP	NNP	B-NP
bus	bus	NN	I-NP
433	433	CD	0
may	may	MD	0
conform	conform	VB	0
to	to	TO	0
the	the	DT	0
Accelerated	Accelerated	NNP	B-NP
Graphics	Graphics	NNP	I-NP
Port	Port	NNP	I-NP
Interface	Interface	NNP	I-NP
Specification	Specification	NNP	I-NP
,	,	,	0
Revision	Revision	NNP	0
2.0	2.0	NNP	0
,	,	,	0
published	published	VBN	0
May	May	NNP	0
4	4	CD	0
,	,	,	0
1998	1998	CD	0
,	,	,	0
by	by	IN	0
Intel	Intel	NNP	0
Corporation	Corporation	NNP	0
,	,	,	0
Santa	Santa	NNP	0
Clara	Clara	NNP	0
,	,	,	0
Calif	Calif	NNP	0
.	.	.	0
The	The	DT	0
memory	memory	NN	B-NP
hub	hub	NN	I-NP
430	430	CD	0
may	may	MD	0
also	also	RB	0
be	be	VB	0
coupled	coupled	VBN	0
(	(	-LRB-	0
via	via	IN	0
a	a	DT	0
hub	hub	NN	B-NP
link	link	NN	I-NP
438	438	CD	0
)	)	-RRB-	0
to	to	TO	0
an	an	DT	0
input	input	NN	B-NP
/	/	CD	I-NP
output	output	NN	I-NP
(	(	-LRB-	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
)	)	-RRB-	0
hub	hub	NN	B-NP
440	440	CD	0
that	that	WDT	0
is	is	VBZ	0
coupled	coupled	VBN	0
to	to	TO	0
a	a	DT	0
input	input	NN	B-NP
/	/	CD	I-NP
output	output	NN	I-NP
(	(	-LRB-	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
)	)	-RRB-	0
expansion	expansion	NN	B-NP
bus	bus	NN	I-NP
442	442	CD	0
and	and	CC	0
a	a	DT	0
Peripheral	Peripheral	NNP	B-NP
Component	Component	NNP	I-NP
Interconnect	Interconnect	NNP	0
(	(	-LRB-	0
PCI	PCI	NNP	B-NP
)	)	-RRB-	0
bus	bus	NN	0
444	444	CD	0
,	,	,	0
as	as	RB	0
defined	defined	VBN	0
by	by	IN	0
the	the	DT	0
PCI	PCI	NNP	B-NP
Local	Local	NNP	I-NP
Bus	Bus	NNP	I-NP
Specification	Specification	NNP	I-NP
,	,	,	0
Production	Production	NNP	B-NP
Version	Version	NNP	I-NP
,	,	,	0
Revision	Revision	NNP	0
2.1	2.1	CD	0
dated	dated	JJ	0
June	June	NNP	0
1995	1995	CD	0
.	.	.	0
The	The	DT	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
expansion	expansion	NN	I-NP
bus	bus	NN	I-NP
442	442	CD	0
may	may	MD	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
an	an	DT	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
controller	controller	VBD	I-NP
446	446	CD	0
that	that	WDT	0
controls	controls	VBZ	0
access	access	NN	0
to	to	TO	0
one	one	CD	0
or	or	CC	0
more	more	JJR	0
i/o	i/o	NN	B-NP
device	device	NN	I-NP
.	.	.	0
As	As	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
4	4	CD	0
,	,	,	0
these	these	DT	0
devices	devices	NNS	0
may	may	MD	0
include	include	VB	0
in	in	IN	0
one	one	CD	0
embodiment	embodiment	JJ	0
storage	storage	NN	B-NP
device	device	NN	I-NP
,	,	,	0
such	such	JJ	0
as	as	IN	0
a	a	DT	0
floppy	floppy	JJ	0
disk	disk	NN	0
drive	drive	NN	0
450	450	CD	0
and	and	CC	0
input	input	NN	B-NP
device	device	NN	I-NP
,	,	,	0
such	such	JJ	0
as	as	IN	0
keyboard	keyboard	CD	0
452	452	CD	0
and	and	CC	0
mouse	mouse	CD	0
454	454	CD	0
.	.	.	0
The	The	DT	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
hub	hub	VBD	I-NP
440	440	CD	0
may	may	MD	0
also	also	RB	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
,	,	,	0
for	for	IN	0
example	example	NN	0
,	,	,	0
a	a	DT	0
hard	hard	JJ	0
disk	disk	NN	0
drive	drive	NN	0
456	456	CD	0
and	and	CC	0
a	a	DT	0
compact	compact	JJ	0
disc	disc	NN	0
(	(	-LRB-	0
CD	CD	NNP	0
)	)	-RRB-	0
drive	drive	VB	0
458	458	CD	0
,	,	,	0
as	as	RB	0
shown	shown	VBN	0
in	in	IN	0
FIG.	FIG.	CD	0
4	4	CD	0
.	.	.	0
It	It	PRP	0
is	is	VBZ	0
to	to	TO	0
be	be	VB	0
understood	understood	VBN	0
that	that	IN	0
other	other	JJ	0
storage	storage	NN	B-NP
medium	medium	JJ	I-NP
may	may	MD	0
also	also	RB	0
be	be	VB	0
included	included	VBN	0
in	in	IN	0
the	the	DT	0
system	system	NN	0
.	.	.	0
The	The	DT	0
PCI	PCI	NNP	B-NP
bus	bus	NN	I-NP
444	444	CD	0
may	may	MD	0
also	also	RB	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
various	various	JJ	0
components	components	NNS	0
including	including	VBG	0
,	,	,	0
for	for	IN	0
example	example	NN	0
,	,	,	0
a	a	DT	0
network	network	NN	B-NP
controller	controller	NN	I-NP
460	460	CD	0
that	that	WDT	0
is	is	VBZ	0
coupled	coupled	VBN	0
to	to	TO	0
a	a	DT	0
network	network	NN	B-NP
port	port	NN	I-NP
(	(	-LRB-	0
not	not	RB	0
shown	shown	VBN	0
)	)	-RRB-	0
.	.	.	0
additional	additional	JJ	B-NP
device	device	NN	I-NP
may	may	MD	0
be	be	VB	0
coupled	coupled	VBN	0
to	to	TO	0
the	the	DT	0
I	I	NNP	B-NP
/	/	NNP	I-NP
O	O	NNP	I-NP
expansion	expansion	NN	I-NP
bus	bus	NN	I-NP
442	442	CD	0
and	and	CC	0
the	the	DT	0
PCI	PCI	NNP	B-NP
bus	bus	NN	I-NP
444	444	CD	0
,	,	,	0
such	such	JJ	0
as	as	IN	0
an	an	DT	0
input	input	NN	B-NP
/	/	CD	I-NP
output	output	NN	I-NP
control	control	NN	I-NP
circuit	circuit	NN	I-NP
coupled	coupled	VBN	0
to	to	TO	0
a	a	DT	0
parallel	parallel	JJ	0
port	port	NN	0
,	,	,	0
serial	serial	JJ	0
port	port	NN	0
,	,	,	0
a	a	DT	0
non-volatile	non-volatile	JJ	B-NP
memory	memory	NN	I-NP
,	,	,	0
and	and	CC	0
the	the	DT	0
like	like	JJ	0
.	.	.	0
Although	Although	IN	0
the	the	DT	0
description	description	NN	0
makes	makes	VBZ	0
reference	reference	VBN	0
to	to	TO	0
specific	specific	JJ	0
components	components	NNS	0
of	of	IN	0
the	the	DT	0
system	system	NN	0
400	400	CD	0
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
contemplated	contemplated	VBN	0
that	that	IN	0
numerous	numerous	JJ	B-NP
modification	modification	NN	I-NP
and	and	CC	0
variations	variations	NNS	0
of	of	IN	0
the	the	DT	0
described	described	VBN	0
and	and	CC	0
illustrated	illustrated	JJ	0
embodiments	embodiments	NN	0
may	may	MD	0
be	be	VB	0
possible	possible	JJ	0
.	.	.	0
More	More	RBR	0
so	so	RB	0
,	,	,	0
while	while	IN	0
FIG.	FIG.	CD	0
4	4	CD	0
shows	shows	NNS	0
a	a	DT	0
block	block	NN	0
diagram	diagram	NN	0
of	of	IN	0
a	a	DT	0
system	system	NN	0
such	such	JJ	0
as	as	IN	0
a	a	DT	0
personal	personal	JJ	B-NP
computer	computer	NN	I-NP
,	,	,	0
it	it	PRP	0
is	is	VBZ	0
to	to	TO	0
be	be	VB	0
understood	understood	VBN	0
that	that	IN	0
embodiments	embodiments	NN	0
of	of	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
may	may	MD	0
be	be	VB	0
implemented	implemented	VBN	0
in	in	IN	0
a	a	DT	0
wireless	wireless	JJ	0
device	device	NN	0
such	such	JJ	0
as	as	IN	0
a	a	DT	0
cellular	cellular	JJ	B-NP
phone	phone	NN	I-NP
,	,	,	0
personal	personal	JJ	B-NP
digital	digital	JJ	I-NP
assistant	assistant	NN	I-NP
(	(	-LRB-	0
PDA	PDA	NNP	B-NP
)	)	-RRB-	0
or	or	CC	0
the	the	DT	0
like	like	JJ	0
.	.	.	0
While	While	IN	0
the	the	DT	0
present	present	JJ	0
invention	invention	NN	0
has	has	VBZ	0
been	been	VBN	0
described	described	VBN	0
with	with	IN	0
respect	respect	NN	0
to	to	TO	0
a	a	DT	0
limited	limited	JJ	0
number	number	NN	0
of	of	IN	0
embodiments	embodiments	NN	0
,	,	,	0
those	those	DT	0
skilled	skilled	JJ	0
in	in	IN	0
the	the	DT	0
art	art	NN	0
will	will	MD	0
appreciate	appreciate	VB	0
numerous	numerous	JJ	B-NP
modification	modification	NN	I-NP
and	and	CC	0
variations	variations	JJ	0
therefrom	therefrom	NN	0
.	.	.	0
It	It	PRP	0
is	is	VBZ	0
intended	intended	VBN	0
that	that	IN	0
the	the	DT	0
appended	appended	JJ	0
claims	claims	NNS	0
cover	cover	VBP	0
all	all	DT	0
such	such	JJ	0
modification	modification	NN	B-NP
and	and	CC	0
variations	variations	NNS	0
as	as	IN	0
fall	fall	NN	0
within	within	IN	0
the	the	DT	0
true	true	JJ	0
spirit	spirit	NN	0
and	and	CC	0
scope	scope	NN	0
of	of	IN	0
this	this	DT	0
present	present	JJ	0
invention	invention	NN	0
.	.	.	0
1	1	LS	0
.	.	.	0
A	A	DT	0
method	method	NN	0
comprising	comprising	NNS	0
:	:	:	0
receiving	receiving	VBG	0
a	a	DT	0
command	command	NN	0
to	to	TO	0
insert	insert	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
into	into	IN	0
a	a	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
;	;	:	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
to	to	TO	0
determine	determine	VB	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
optimal	optimal	JJ	I-NP
location	location	NN	I-NP
within	within	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
;	;	:	0
and	and	CC	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
optimal	optimal	JJ	B-NP
location	location	NN	I-NP
to	to	TO	0
generate	generate	VB	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment.	segment.	CD	I-NP
2	2	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBZ	0
receiving	receiving	VBG	0
the	the	DT	0
command	command	NN	0
comprises	comprises	VBZ	0
receiving	receiving	VBG	0
an	an	DT	0
indication	indication	NN	0
from	from	IN	0
a	a	DT	0
user	user	NN	0
of	of	IN	0
a	a	DT	0
data	data	NN	B-NP
independency	independency	NN	I-NP
between	between	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
and	and	CC	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code.	code.	CD	I-NP
3	3	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBZ	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
comprises	comprises	VBZ	0
determining	determining	VBG	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
of	of	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
causes	causes	VBZ	0
an	an	DT	0
update	update	NN	0
to	to	TO	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register.	register.	CD	I-NP
4	4	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
3	3	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
immediately	immediately	RB	0
prior	prior	RB	0
to	to	TO	0
the	the	DT	0
instruction.	instruction.	CD	0
5	5	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBZ	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
comprises	comprises	VBZ	0
determining	determining	VBG	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
of	of	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
overwrites	overwrites	VBD	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
register.	register.	CD	I-NP
6	6	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
automatically	automatically	RB	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
without	without	IN	0
receiving	receiving	VBG	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
from	from	IN	0
a	a	DT	0
user.	user.	CD	0
7	7	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBZ	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
optimal	optimal	JJ	B-NP
location	location	NN	I-NP
prevents	prevents	VBZ	0
movement	movement	NN	0
of	of	IN	0
register	register	JJ	B-NP
data	data	NN	I-NP
to	to	TO	0
a	a	DT	0
stack.	stack.	CD	0
8	8	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
analyzing	analyzing	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
using	using	VBG	0
a	a	DT	0
just-in-time	just-in-time	JJ	B-NP
compiler.	compiler.	CD	I-NP
9	9	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBZ	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
comprises	comprises	VBZ	0
dynamically	dynamically	VBN	0
instrumenting	instrumenting	VBG	0
the	the	DT	0
code	code	NN	B-NP
segment.	segment.	CD	I-NP
10	10	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
storing	storing	VBG	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
in	in	IN	0
a	a	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
and	and	CC	0
executing	executing	VBG	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
from	from	IN	0
the	the	DT	0
code	code	NN	B-NP
cache.	cache.	CD	I-NP
11	11	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
1	1	CD	0
,	,	,	0
wherein	wherein	VBG	0
the	the	DT	0
optimal	optimal	JJ	B-NP
location	location	NN	I-NP
comprises	comprises	VBZ	0
a	a	DT	0
no	no	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
operation	operation	NN	I-NP
instruction	instruction	NN	I-NP
12	12	CD	0
.	.	.	0
A	A	DT	0
method	method	NN	0
comprising	comprising	NNS	0
:	:	:	0
receiving	receiving	VBG	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
from	from	IN	0
a	a	DT	0
user	user	NN	B-NP
corresponding	corresponding	NN	I-NP
to	to	TO	0
a	a	DT	0
relation	relation	NN	0
between	between	IN	0
application	application	NN	B-NP
data	data	NN	I-NP
of	of	IN	0
an	an	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
and	and	CC	0
instrumentation	instrumentation	NN	0
data	data	NNS	0
of	of	IN	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
;	;	:	0
scheduling	scheduling	VBG	0
a	a	DT	0
position	position	NN	0
within	within	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
application	application	NN	I-NP
program	program	NN	I-NP
based	based	VBN	0
on	on	IN	0
the	the	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
;	;	:	0
and	and	CC	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
scheduled	scheduled	VBN	B-NP
position.	position.	CD	I-NP
13	13	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
12	12	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
analyzing	analyzing	VBG	0
the	the	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
to	to	TO	0
determine	determine	VB	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
causes	causes	VBZ	0
an	an	DT	0
update	update	NN	0
to	to	TO	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register.	register.	CD	I-NP
14	14	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
13	13	CD	0
,	,	,	0
wherein	wherein	VBZ	0
scheduling	scheduling	VBG	0
the	the	DT	0
position	position	NN	0
comprises	comprises	VBZ	0
selecting	selecting	VBG	0
a	a	DT	0
location	location	NN	0
immediately	immediately	RB	0
prior	prior	RB	0
to	to	TO	0
the	the	DT	0
instruction	instruction	NN	0
for	for	IN	0
inserting	inserting	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code.	code.	CD	I-NP
15	15	CD	0
.	.	.	0
The	The	DT	0
method	method	NN	0
of	of	IN	0
claim	claim	NN	0
12	12	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
analyzing	analyzing	VBG	0
the	the	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
to	to	TO	0
determine	determine	VB	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
overwrites	overwrites	VBD	0
a	a	DT	0
general-purpose	general-purpose	JJ	B-NP
register.	register.	CD	I-NP
16	16	CD	0
.	.	.	0
An	An	DT	0
article	article	NN	0
comprising	comprising	VBG	0
a	a	DT	0
machine-accessible	machine-accessible	JJ	0
medium	medium	NN	0
having	having	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
a	a	DT	0
system	system	NN	0
to	to	TO	0
:	:	:	0
receive	receive	VB	0
a	a	DT	0
command	command	NN	0
to	to	TO	0
insert	insert	VB	0
instrumentation	instrumentation	JJ	B-NP
code	code	NN	I-NP
into	into	IN	0
a	a	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
;	;	:	0
analyze	analyze	VB	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
to	to	TO	0
determine	determine	VB	0
an	an	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
optimal	optimal	JJ	I-NP
location	location	NN	I-NP
within	within	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
;	;	:	0
and	and	CC	0
insert	insert	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
optimal	optimal	JJ	B-NP
location	location	NN	I-NP
to	to	TO	0
generate	generate	VB	0
an	an	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment.	segment.	CD	I-NP
17	17	CD	0
.	.	.	0
The	The	DT	0
article	article	NN	0
of	of	IN	0
claim	claim	NN	0
16	16	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
receive	receive	VB	0
an	an	DT	0
indication	indication	NN	0
from	from	IN	0
a	a	DT	0
user	user	NN	0
of	of	IN	0
a	a	DT	0
data	data	NN	B-NP
independency	independency	NN	I-NP
between	between	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
and	and	CC	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code.	code.	CD	I-NP
18	18	CD	0
.	.	.	0
The	The	DT	0
article	article	NN	0
of	of	IN	0
claim	claim	NN	0
16	16	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
determine	determine	VB	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
of	of	IN	0
the	the	DT	0
code	code	NN	B-NP
segment	segment	NN	I-NP
causes	causes	VBZ	0
an	an	DT	0
update	update	NN	0
to	to	TO	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register.	register.	CD	I-NP
19	19	CD	0
.	.	.	0
The	The	DT	0
article	article	NN	0
of	of	IN	0
claim	claim	NN	0
16	16	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
dynamically	dynamically	VB	0
instrument	instrument	VBN	0
the	the	DT	0
code	code	NN	B-NP
segment.	segment.	CD	I-NP
20	20	CD	0
.	.	.	0
The	The	DT	0
article	article	NN	0
of	of	IN	0
claim	claim	NN	0
16	16	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
store	store	VB	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
in	in	IN	0
a	a	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
and	and	CC	0
execute	execute	VB	0
the	the	DT	0
instrumented	instrumented	JJ	B-NP
code	code	NN	I-NP
segment	segment	NN	I-NP
from	from	IN	0
the	the	DT	0
code	code	NN	B-NP
cache.	cache.	CD	I-NP
21	21	CD	0
.	.	.	0
A	A	DT	0
system	system	NN	0
comprising	comprising	NNS	0
:	:	:	0
a	a	DT	0
storage	storage	NN	0
including	including	VBG	B-NP
instruction	instruction	NN	I-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
receive	receive	VB	0
a	a	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
from	from	IN	0
a	a	DT	0
user	user	NN	B-NP
corresponding	corresponding	NN	I-NP
to	to	TO	0
a	a	DT	0
relation	relation	NN	0
between	between	IN	0
application	application	NN	B-NP
data	data	NN	I-NP
of	of	IN	0
an	an	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
and	and	CC	0
instrumentation	instrumentation	NN	0
data	data	NNS	0
of	of	IN	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
,	,	,	0
schedule	schedule	VB	0
a	a	DT	0
position	position	NN	0
within	within	IN	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
application	application	NN	I-NP
program	program	NN	I-NP
based	based	VBN	0
on	on	IN	0
the	the	DT	0
data	data	NNS	0
independency	independency	JJ	B-NP
hint	hint	NN	I-NP
,	,	,	0
and	and	CC	0
insert	insert	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
at	at	IN	0
the	the	DT	0
scheduled	scheduled	JJ	0
position	position	NN	0
;	;	:	0
and	and	CC	0
a	a	DT	0
dynamic	dynamic	JJ	B-NP
random	random	JJ	I-NP
access	access	NN	I-NP
memory	memory	NN	I-NP
coupled	coupled	VBN	0
to	to	TO	0
the	the	DT	0
storage.	storage.	CD	0
22	22	CD	0
.	.	.	0
The	The	DT	0
system	system	NN	0
of	of	IN	0
claim	claim	NN	0
21	21	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
a	a	DT	0
just-in-time	just-in-time	JJ	B-NP
compiler	compiler	NN	I-NP
to	to	TO	0
compile	compile	VB	0
the	the	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
and	and	CC	0
to	to	TO	0
insert	insert	VB	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code	code	NN	I-NP
therein.	therein.	CD	0
23	23	CD	0
.	.	.	0
The	The	DT	0
system	system	NN	0
of	of	IN	0
claim	claim	NN	0
22	22	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
a	a	DT	0
code	code	NN	B-NP
cache	cache	NN	I-NP
to	to	TO	0
store	store	VB	0
the	the	DT	0
compiled	compiled	JJ	0
application	application	NN	B-NP
program	program	NN	I-NP
including	including	VBG	0
the	the	DT	0
instrumentation	instrumentation	NN	B-NP
code.	code.	CD	I-NP
24	24	CD	0
.	.	.	0
The	The	DT	0
system	system	NN	0
of	of	IN	0
claim	claim	NN	0
21	21	CD	0
,	,	,	0
wherein	wherein	VBG	0
the	the	DT	0
storage	storage	NN	0
further	further	RB	0
includes	includes	VBZ	0
instruction	instruction	NN	B-NP
that	that	IN	0
when	when	WRB	0
executed	executed	RB	0
cause	cause	VB	0
the	the	DT	0
system	system	NN	0
to	to	TO	0
analyze	analyze	VB	0
the	the	DT	0
application	application	NN	B-NP
program	program	NN	I-NP
to	to	TO	0
determine	determine	VB	0
if	if	IN	0
an	an	DT	0
instruction	instruction	NN	0
causes	causes	VBZ	0
an	an	DT	0
update	update	NN	0
to	to	TO	0
a	a	DT	0
condition	condition	NN	B-NP
code	code	NN	I-NP
register.	register.	CD	I-NP
25	25	CD	0
.	.	.	0
The	The	DT	0
system	system	NN	0
of	of	IN	0
claim	claim	NN	0
23	23	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
a	a	DT	0
dispatcher	dispatcher	NN	B-NP
to	to	TO	0
launch	launch	VB	0
the	the	DT	0
compiled	compiled	JJ	0
application	application	NN	B-NP
program.	program.	CD	I-NP
26	26	CD	0
.	.	.	0
The	The	DT	0
system	system	NN	0
of	of	IN	0
claim	claim	NN	0
22	22	CD	0
,	,	,	0
further	further	RB	0
comprising	comprising	VBG	0
a	a	DT	0
virtual	virtual	JJ	B-NP
machine	machine	NN	I-NP
including	including	VBG	0
the	the	DT	0
just-in-time	just-in-time	JJ	B-NP
compiler	compiler	NN	I-NP
,	,	,	0
an	an	DT	0
emulation	emulation	JJ	B-NP
unit	unit	NN	I-NP
and	and	CC	0
a	a	DT	0
dispatcher	dispatcher	NN	B-NP
.	.	.	0
