<s>
<NP>
Liste	NOM	liste
</NP>
<PP>
de	PRP	de
<NP>
langages	NOM	langage
</NP>
</PP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<NP>
Le	DET:ART	le
but	NOM	but
</NP>
<PP>
de	PRP	de
<NP>
cette	PRO:DEM	ce
liste	NOM	liste
</NP>
</PP>
<PP>
de	PRP	de
<NP>
langages	NOM	langage
</NP>
</PP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<VN>
est	VER:pres	être
</VN>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
inclure	VER:infi	inclure
</VN>
<NP>
tous	PRO:IND	tout
les	DET:ART	le
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<AP>
existants	ADJ	existant
,	PUN	,
</AP>
<Ssub>
qu'	PRO:REL	que
</Ssub>
<VN>
ils	PRO:PER	il
soient	VER:subp	être
actuellement	ADV	actuellement
utilisés	VER:pper	utiliser
</VN>
<COORD>
ou	KON	ou
</COORD>
<AP>
historiques	ADJ	historique
,	PUN	,
</AP>
<PP>
par	PRP	par
<PP>
ordre	NOM	ordre
<AP>
alphabétique	ADJ	alphabétique
</AP>
</PP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Ne	ADV	ne
sont	VER:pres	être
pas	ADV	pas
</VN>
<NP>
listés	VER:pper	lister
</NP>
<VN>
ici	ADV	ici
</VN>
<NP>
les	DET:ART	le
langages	NOM	langage
</NP>
<AP>
informatiques	ADJ	informatique
</AP>
<PP>
de	PRP	de
<NP>
représentation	NOM	représentation
</NP>
</PP>
<PP>
de	PRP	de
<NP>
données	NOM	donnée
</NP>
</PP>
<AP>
tels	PRO:DEM	tel
</AP>
<Ssub>
que	PRO:REL	que
</Ssub>
<NP>
<NP>
XML	NAM	<unknown>
,	PUN	,
HTML	NAM	<unknown>
,	PUN	,
XHTML	NAM	<unknown>
</NP>
<COORD>
ou	KON	ou
</COORD>
<NP>
YAML	NAM	<unknown>
</NP>
</NP>
.	SENT	.
</s>
<s>
<NP>
Un	DET:ART	un
langage	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<VN>
doit	VER:pres	devoir
</VN>
<VN>
permettre	VER:infi	permettre
d’	NOM	<unknown>
</VN>
<VN>
écrire	VER:infi	écrire
</VN>
<NP>
des	PRP:det	du
algorithmes	NOM	algorithme
,	PUN	,
</NP>
<COORD>
mais	KON	mais
</COORD>
<PP>
il	PRO:PER	il
<NP>
n’	NOM	<unknown>
</NP>
<VN>
est	VER:pres	être
pas	ADV	pas
</VN>
</PP>
<AP>
nécessaire	ADJ	nécessaire
</AP>
<NP>
qu’	NOM	<unknown>
</NP>
<VN>
il	PRO:PER	il
soit	VER:subp	être
</VN>
<NP>
Turing-complet	NAM	<unknown>
(	PUN	(
</NP>
<PP>
par	PRP	par
<NP>
exemple	NOM	exemple
Gallina	NAM	<unknown>
,	PUN	,
</NP>
</PP>
<NP>
le	DET:ART	le
langage	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<PP>
de	PRP	de
<NP>
Coq	NOM	coq
,	PUN	,
</NP>
</PP>
<VN>
ne	ADV	ne
l’	ADJ	<unknown>
est	VER:pres	être
pas	ADV	pas
)	PUN	)
</VN>
.	SENT	.
</s>
<s>
<PONCT:S>
Par	PRP	par
ailleurs	ADV	ailleurs
,	PUN	,
</PONCT:S>
<NP>
cette	PRO:DEM	ce
liste	NOM	liste
</NP>
<VN>
répertorie	VER:pres	répertorier
</VN>
<NP>
les	DET:ART	le
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
<NP>
programmation	NOM	programmation
,	PUN	,
</NP>
<COORD>
et	KON	et
non	ADV	non
</COORD>
<NP>
leurs	DET:POS	leur
implémentations	NOM	<unknown>
(	PUN	(
</NP>
</NP>
</PP>
<PP>
par	PRP	par
<NP>
exemple	NOM	exemple
,	PUN	,
</NP>
</PP>
<NP>
<NP>
JRuby	NAM	<unknown>
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
IronRuby	NAM	<unknown>
</NP>
</NP>
<VN>
sont	VER:pres	être
</VN>
<NP>
deux	NUM	deux
implémentations	NOM	<unknown>
</NP>
<AP>
différentes	ADJ	différent
</AP>
<PP>
du	PRP:det	du
<NP>
même	ADJ	même
langage	NOM	langage
Ruby	NAM	<unknown>
)	PUN	)
</NP>
</PP>
.	SENT	.
</s>
