<s>
<NP>
ISWIM	NAM	<unknown>
ISWIM	NAM	<unknown>
</NP>
<VN>
est	VER:pres	être
</VN>
<NP>
un	DET:ART	un
langage	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<AP>
abstrait	ADJ	abstrait
(	PUN	(
</AP>
<COORD>
ou	KON	ou
</COORD>
<AdP>
plus	ADV	plus
précisément	ADV	précisément
</AdP>
<NP>
une	DET:ART	un
famille	NOM	famille
</NP>
<PP>
de	PRP	de
<NP>
langages	NOM	langage
</NP>
</PP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
)	PUN	)
</NP>
</PP>
<VPpart>
conçu	VER:pper	concevoir
</VPpart>
<PP>
par	PRP	par
<NP>
Peter	NAM	Peter
J.	NAM	<unknown>
Landin	NAM	<unknown>
</NP>
</PP>
<COORD>
et	KON	et
</COORD>
<VN>
décrit	VER:pres	décrire
</VN>
<PP>
dans	PRP	dans
<NP>
un	DET:ART	un
article	NOM	article
</NP>
</PP>
<VN>
célèbre	VER:pres	célébrer
</VN>
<VPpart>
intitulé	VER:pper	intituler
"	PUN:cit	"
</VPpart>
<NP>
Les	DET:ART	le
</NP>
<NP>
700	NUM	@card@
prochains	ADJ	prochain
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
"	PUN:cit	"
</NP>
</PP>
<COORD>
et	KON	et
</COORD>
<VPpart>
publié	VER:pper	publier
</VPpart>
<PP>
dans	PRP	dans
<NP>
les	DET:ART	le
"	PUN:cit	"
Communications	NOM	communication
</NP>
</PP>
<AP>
of	ADJ	<unknown>
</AP>
<NP>
the	VER:pper	<unknown>
ACM	NAM	<unknown>
"	PUN:cit	"
</NP>
<PP>
en	PRP	en
<NP>
1966	NUM	@card@
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
Son	DET:POS	son
acronyme	NOM	acronyme
ISWIM	NAM	<unknown>
</NP>
<VN>
signifie	VER:pres	signifier
"	PUN:cit	"
</VN>
«	PUN:cit	«
<NP>
If	NAM	If
you	NOM	<unknown>
</NP>
<NP>
See	NAM	<unknown>
</NP>
<NP>
What	NAM	<unknown>
</NP>
<NP>
I	NUM	I
</NP>
<AP>
Mean	NAM	<unknown>
</AP>
<PP>
»	PUN:cit	»
<NP>
"	PUN:cit	"
(	PUN	(
«	PUN:cit	«
</NP>
<Ssub>
Si	KON	si
</Ssub>
</PP>
<VN>
vous	PRO:PER	vous
voyez	VER:pres	voir
</VN>
<NP>
ce	PRO:DEM	ce
</NP>
<NP>
que	PRO:REL	que
</NP>
<VN>
je	PRO:PER	je
veux	VER:pres	vouloir
</VN>
<VPinf>
dire	VER:infi	dire
</VPinf>
<NP>
»	PUN:cit	»
)	PUN	)
</NP>
.	SENT	.
</s>
<s>
<NP>
ISWIM	NAM	<unknown>
</NP>
<VN>
a	VER:pres	avoir
fortement	ADV	fortement
influencé	VER:pper	influencer
</VN>
<NP>
la	DET:ART	le
conception	NOM	conception
</NP>
<PP>
des	PRP:det	du
<NP>
langages	NOM	langage
</NP>
</PP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
l'	PRO:PER	la|le
ont	VER:pres	avoir
suivi	VER:pper	suivre
,	PUN	,
en	PRP	en
particulier	NOM	particulier
</VN>
<PP>
dans	PRP	dans
<PP>
le	DET:ART	le
<PP>
domaine	NOM	domaine
<PP>
de	PRP	de
<NP>
la	DET:ART	le
programmation	NOM	programmation
</NP>
</PP>
</PP>
</PP>
</PP>
<AP>
fonctionnelle	ADJ	fonctionnel
,	PUN	,
</AP>
<PP>
de	PRP	de
<PP>
à	PRP	à
<NP>
Haskell	NAM	<unknown>
,	PUN	,
</NP>
</PP>
</PP>
<PP>
en	PRO:PER	en
<PP>
passant	VER:ppre	passer
<PP>
par	PRP	par
</PP>
</PP>
<NP>
<NP>
ML	NAM	<unknown>
</NP>
<COORD>
et	KON	et
et	KON	et
</COORD>
<NP>
leurs	DET:POS	leur
successeurs	NOM	successeur
,	PUN	,
</NP>
</NP>
</PP>
<COORD>
et	KON	et
</COORD>
<PP>
dans	PRP	dans
<PP>
le	DET:ART	le
<PP>
domaine	NOM	domaine
<PP>
de	PRP	de
<NP>
la	DET:ART	le
programmation	NOM	programmation
dataflow	NOM	<unknown>
</NP>
</PP>
</PP>
</PP>
</PP>
<PP>
comme	KON	comme
<COORD>
et	KON	et
</COORD>
</PP>
<NP>
Lustre	NOM	lustre
</NP>
.	SENT	.
</s>
<s>
<PONCT:S>
En	PRO:PER	en
fait	VER:pres	faire
,	PUN	,
</PONCT:S>
<PP>
dans	PRP	dans
<NP>
son	DET:POS	son
article	NOM	article
,	PUN	,
</NP>
</PP>
<NP>
Landin	NAM	<unknown>
</NP>
<VN>
définit	VER:pres	définir
</VN>
<NP>
les	DET:ART	le
grands	ADJ	grand
principes	NOM	principe
</NP>
<PP>
de	PRP	de
<NP>
ce	PRO:DEM	ce
</NP>
</PP>
<NP>
que	PRO:REL	que
</NP>
<VN>
devaient	VER:impf	devoir
</VN>
<VN>
être	VER:infi	être
,	PUN	,
</VN>
<PP>
en	PRP	en
<NP>
1965	NUM	@card@
,	PUN	,
</NP>
</PP>
<NP>
les	DET:ART	le
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
</NP>
</PP>
<PP>
du	PRP:det	du
<NP>
futur	NOM	futur
</NP>
</PP>
.	SENT	.
</s>
<s>
<PP>
À	PRP	à
<NP>
cette	PRO:DEM	ce
époque	NOM	époque
,	PUN	,
</NP>
</PP>
<NP>
ALGOL	NOM	algol
60	NUM	@card@
,	PUN	,
</NP>
<NP>
<NP>
Lisp	NAM	<unknown>
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
PL/1	NAM	<unknown>
</NP>
</NP>
<VN>
venaient	VER:impf	venir
</VN>
<VPinf>
de	PRP	de
</VPinf>
<VN>
naître	VER:infi	naître
</VN>
.	SENT	.
</s>
<s>
<NP>
<NP>
Fortran	NOM	fortran
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
Cobol	NOM	cobol
</NP>
</NP>
<VN>
étaient	VER:impf	être
</VN>
<NP>
les	DET:ART	le
seuls	ADJ	seul
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
largement	ADV	largement
</NP>
</PP>
<VPpart>
utilisés	VER:pper	utiliser
</VPpart>
.	SENT	.
</s>
<s>
<NP>
ISWIM	NAM	<unknown>
</NP>
<VN>
est	VER:pres	être
</VN>
<NP>
un	DET:ART	un
langage	NOM	langage
</NP>
<AP>
impératif	ADJ	impératif
</AP>
<PP>
à	PRP	à
<NP>
noyau	NOM	noyau
</NP>
</PP>
<AP>
fonctionnel	ADJ	fonctionnel
(	PUN	(
</AP>
«	PUN:cit	«
<AP>
non	ADV	non
procédural	ADJ	procédural
»	PUN:cit	»
</AP>
<Ssub>
comme	KON	comme
</Ssub>
<VN>
on	PRO:PER	on
l'	PRO:PER	la|le
appelait	VER:impf	appeler
</VN>
<PP>
à	PRP	à
<NP>
<NP>
l'	DET:ART	le
époque	NOM	époque
</NP>
<COORD>
ou	KON	ou
«	PUN:cit	«
</COORD>
<NP>
dénotationnelle	NOM	<unknown>
»	PUN:cit	»
</NP>
</NP>
</PP>
<Ssub>
comme	KON	comme
</Ssub>
<VN>
l'	PRO:PER	la|le
appelle	VER:pres	appeler
</VN>
<NP>
Landin	NAM	<unknown>
</NP>
<COORD>
ou	KON	ou
encore	ADV	encore
«	PUN:cit	«
</COORD>
<AP>
descriptif	ADJ	descriptif
»	PUN:cit	»
</AP>
<COORD>
ou	KON	ou
«	PUN:cit	«
</COORD>
<AP>
déclaratif	ADJ	déclaratif
»	PUN:cit	»
</AP>
<Ssub>
comme	ADV	comme
</Ssub>
<NP>
Strachey	NAM	<unknown>
</NP>
<VN>
appelle	VER:pres	appeler
</VN>
<NP>
les	DET:ART	le
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
ce	PRO:DEM	ce
type	NOM	type
)	PUN	)
;	PUN	;
</NP>
</PP>
<PP>
en	PRO:PER	en
<NP>
fait	VER:pres	faire
</NP>
</PP>
<VN>
c'	PRO:DEM	ce
est	VER:pres	être
</VN>
<NP>
une	DET:ART	un
syntaxe	NOM	syntaxe
</NP>
<AP>
lisible	ADJ	lisible
</AP>
<PP>
du	PRP:det	du
<NP>
lambda-calcul	NOM	<unknown>
</NP>
</PP>
<PP>
à	PRP	à
<NP>
laquelle	PRO:REL	lequel
</NP>
</PP>
<VN>
sont	VER:pres	être
</VN>
<VPpart>
ajoutés	VER:pper	ajouter
</VPpart>
<PP>
des	PRP:det	du
<NP>
variables	ADJ	variable
</NP>
</PP>
<AP>
mutables	ADJ	mutable
</AP>
<COORD>
et	KON	et
</COORD>
<PP>
des	PRP:det	du
<NP>
définitions	NOM	définition
</NP>
</PP>
.	SENT	.
</s>
<s>
<PP>
Grâce	NOM	grâce
<PP>
au	PRP:det	au
<NP>
lambda-calcul	NOM	<unknown>
,	PUN	,
ISWIM	NAM	<unknown>
</NP>
</PP>
</PP>
<VN>
comporte	VER:pres	comporter
</VN>
<NP>
des	PRP:det	du
fonctions	NOM	fonction
</NP>
<PP>
d'	PRP	de
<NP>
ordre	NOM	ordre
</NP>
</PP>
<AP>
supérieur	ADJ	supérieur
</AP>
<COORD>
et	KON	et
</COORD>
<NP>
une	DET:ART	un
portée	NOM	portée
</NP>
<AP>
lexicale	ADJ	lexical
</AP>
<PP>
des	PRP:det	du
<NP>
variables	ADJ	variable
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
Le	DET:ART	le
but	NOM	but
</NP>
<VN>
est	VER:pres	être
</VN>
<VPinf>
de	PRP	de
</VPinf>
<VN>
décrire	VER:infi	décrire
</VN>
<NP>
des	PRP:det	du
concepts	NOM	concept
</NP>
<PP>
en	PRP	en
<PP>
fonction	NOM	fonction
<PP>
d'	PRP	de
<NP>
autres	ADJ	autre
concepts	NOM	concept
</NP>
</PP>
</PP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
sémantique	NOM	sémantique
opérationnelle	ADJ	opérationnel
de	PRP	de
ISWIM	NAM	<unknown>
est	VER:pres	être
</NP>
<VPpart>
définie	VER:pper	définir
</VPpart>
<PP>
à	PRP	à
<PP>
l'	DET:ART	le
<PP>
aide	NOM	aide
<PP>
de	PRP	de
<NP>
la	DET:ART	le
machine	NOM	machine
</NP>
</PP>
</PP>
</PP>
</PP>
<AP>
abstraite	ADJ	abstrait
SECD	NAM	<unknown>
</AP>
<COORD>
et	KON	et
</COORD>
<VN>
utilise	VER:pres	utiliser
</VN>
<NP>
l'	DET:ART	le
appel	NOM	appel
</NP>
<PP>
par	PRP	par
<NP>
valeur	NOM	valeur
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
L'	DET:ART	le
un	NOM	un
</NP>
<PP>
des	PRP:det	du
<NP>
buts	NOM	but
d'	PRP	de
ISWIM	NAM	<unknown>
</NP>
</PP>
<VN>
est	VER:pres	être
</VN>
<VPinf>
de	PRP	de
</VPinf>
<VN>
ressembler	VER:infi	ressembler
</VN>
<Ssub>
autant	ADV	autant
que	KON	que
possible	ADJ	possible
</Ssub>
<PP>
à	PRP	à
<NP>
la	DET:ART	le
notation	NOM	notation
</NP>
</PP>
<AP>
mathématique	ADJ	mathématique
,	PUN	,
</AP>
<VN>
poussant	VER:ppre	pousser
</VN>
<NP>
Landin	NOM	<unknown>
</NP>
<VPinf>
à	PRP	à
</VPinf>
<VN>
abandonner	VER:infi	abandonner
</VN>
<NP>
les	DET:ART	le
points-virgules	NOM	<unknown>
</NP>
<PP>
d'	PRP	de
<NP>
ALGOL	NOM	algol
60	NUM	@card@
</NP>
</PP>
<PP>
comme	KON	comme
<NP>
<NP>
séparateurs	ADJ	séparateur
d'	PRP	de
instructions	NOM	instruction
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
les	DET:ART	le
begin	NOM	<unknown>
...	PUN	...
</NP>
</NP>
</PP>
<VN>
end	VER:simp	<unknown>
</VN>
<NP>
des	PRP:det	du
blocs	NOM	bloc
</NP>
<COORD>
et	KON	et
</COORD>
<VPinf>
à	PRP	à
</VPinf>
<VN>
les	PRO:PER	la|le
remplacer	VER:infi	remplacer
</VN>
<PP>
par	PRP	par
<NP>
des	PRP:det	du
indentations	NOM	indentation
</NP>
</PP>
.	SENT	.
</s>
<s>
<PP>
Au	PRP:det	au
<PP>
niveau	NOM	niveau
<PP>
de	PRP	de
<NP>
la	DET:ART	le
notation	NOM	notation
,	PUN	,
</NP>
</PP>
</PP>
</PP>
<NP>
une	DET:ART	un
innovation	NOM	innovation
d'	PRP	de
ISWIM	NAM	<unknown>
</NP>
<VN>
est	VER:pres	être
</VN>
<NP>
son	DET:POS	son
utilisation	NOM	utilisation
</NP>
<PP>
de	PRP	de
<NP>
clauses	NOM	clause
where	NOM	<unknown>
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
Un	DET:ART	un
programme	NOM	programme
</NP>
<PP>
de	PRP	de
<NP>
ISWIM	NAM	<unknown>
</NP>
</PP>
<VN>
est	VER:pres	être
ainsi	ADV	ainsi
</VN>
<NP>
une	DET:ART	un
expression	NOM	expression
</NP>
<AP>
unique	ADJ	unique
</AP>
<VPpart>
agrémentée	VER:pper	agrémenter
</VPpart>
<PP>
de	PRP	de
<NP>
clauses	NOM	clause
where	NOM	<unknown>
,	PUN	,
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
sont	VER:pres	être
</VN>
<NP>
des	PRP:det	du
définitions	NOM	définition
</NP>
<AP>
auxiliaires	ADJ	auxiliaire
,	PUN	,
</AP>
<PP>
notamment	ADV	notamment
<PP>
des	PRP:det	du
<NP>
équations	NOM	équation
</NP>
</PP>
</PP>
<PP>
entre	PRP	entre
<NP>
variables	ADJ	variable
,	PUN	,
</NP>
</PP>
<PP>
des	PRP:det	du
<NP>
expressions	NOM	expression
</NP>
</PP>
<AP>
conditionnelles	ADJ	conditionnel
</AP>
<COORD>
et	KON	et
</COORD>
<PP>
des	PRP:det	du
<NP>
définitions	NOM	définition
de	PRP	de
fonctions	NOM	fonction
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
Une	DET:ART	un
autre	ADJ	autre
caractéristique	NOM	caractéristique
d'	PRP	de
ISWIM	NAM	<unknown>
</NP>
<VN>
est	VER:pres	être
</VN>
<NP>
la	DET:ART	le
possibilité	NOM	possibilité
</NP>
<VPinf>
de	PRP	de
</VPinf>
<VN>
définir	VER:infi	définir
</VN>
<NP>
des	PRP:det	du
types	NOM	type
</NP>
<PP>
de	PRP	de
<NP>
données	NOM	donnée
</NP>
</PP>
<VPpart>
éventuellement	ADV	éventuellement
récursifs	ADJ	récursif
en	PRP	en
</VPpart>
<VN>
utilisant	VER:ppre	utiliser
</VN>
<NP>
des	PRP:det	du
sommes	NOM	somme
</NP>
<PP>
de	PRP	de
<NP>
produits	NOM	produit
</NP>
</PP>
.	SENT	.
</s>
<s>
<PONCT:S>
Ceci	PRO:DEM	ceci
</PONCT:S>
<VN>
se	PRO:PER	se
fait	VER:pres	faire
</VN>
<VPpart>
en	PRP	en
</VPpart>
<VN>
utilisant	VER:ppre	utiliser
</VN>
<NP>
une	DET:ART	un
description	NOM	description
</NP>
<PP>
dans	PRP	dans
<NP>
une	DET:ART	un
syntaxe	NOM	syntaxe
</NP>
</PP>
<AP>
un	DET:ART	un
peu	ADV	peu
bavarde	ADJ	bavard
proche	ADJ	proche
</AP>
<PP>
du	PRP:det	du
<NP>
langage	NOM	langage
naturel	ADJ	naturel
;	PUN	;
</NP>
</PP>
<COORD>
mais	KON	mais
</COORD>
<PP>
hormis	PRP	hormis
<NP>
cette	PRO:DEM	ce
notation	NOM	notation
,	PUN	,
</NP>
</PP>
<VN>
on	PRO:PER	on
se	PRO:PER	se
rapproche	VER:pres	rapprocher
</VN>
<NP>
des	PRP:det	du
types	NOM	type
</NP>
<PP>
de	PRP	de
<NP>
données	NOM	donnée
algébriques	ADJ	algébrique
</NP>
</PP>
<NP>
que	PRO:REL	que
</NP>
<VN>
l'	DET:ART	le
on	PRO:PER	on
trouve	VER:pres	trouver
</VN>
<PP>
dans	PRP	dans
<NP>
les	DET:ART	le
langages	NOM	langage
</NP>
</PP>
<AP>
fonctionnels	ADJ	fonctionnel
</AP>
<AP>
contemporains	ADJ	contemporain
</AP>
.	SENT	.
</s>
<s>
<PONCT:S>
D'	PRP	de
autre	ADJ	autre
part	NOM	part
,	PUN	,
</PONCT:S>
<NP>
les	DET:ART	le
types	NOM	type
</NP>
<PP>
des	PRP:det	du
<NP>
variables	ADJ	variable
d'	PRP	de
ISWIM	NAM	<unknown>
</NP>
</PP>
<VN>
ne	ADV	ne
sont	VER:pres	être
pas	ADV	pas
</VN>
<NP>
déclarés	VER:pper	déclarer
</NP>
<VN>
explicitement	ADV	explicitement
,	PUN	,
</VN>
<Ssub>
quoiqu'	KON	quoique
</Ssub>
<VN>
il	PRO:PER	il
semble	VER:pres	sembler
</VN>
<AdP>
sans	PRP	sans
</AdP>
<Ssub>
que	KON	que
</Ssub>
<NP>
ce	PRO:DEM	ce
</NP>
<VN>
soit	VER:subp	être
explicitement	ADV	explicitement
indiqué	VER:pper	indiquer
</VN>
<PP>
dans	PRP	dans
<NP>
l'	DET:ART	le
article	NOM	article
</NP>
</PP>
<AP>
original	ADJ	original
</AP>
<Ssub>
que	KON	que
</Ssub>
<NP>
Landin	NAM	<unknown>
</NP>
<VN>
pensait	VER:impf	penser
,	PUN	,
</VN>
<PP>
à	PRP	à
<PP>
la	DET:ART	le
<PP>
différence	NOM	différence
<PP>
d'	PRP	de
<NP>
ALGOL	NOM	algol
,	PUN	,
</NP>
</PP>
</PP>
</PP>
</PP>
<PP>
à	PRP	à
<NP>
un	DET:ART	un
typage	NOM	<unknown>
</NP>
</PP>
<AP>
dynamique	ADJ	dynamique
,	PUN	,
</AP>
<PP>
comme	ADV	comme
<PP>
en	PRP	en
<NP>
LISP	NAM	<unknown>
;	PUN	;
</NP>
</PP>
</PP>
<COORD>
mais	KON	mais
</COORD>
<VN>
on	PRO:PER	on
ne	ADV	ne
doit	VER:pres	devoir
pas	ADV	pas
</VN>
<VN>
rejeter	VER:infi	rejeter
"	PUN:cit	"
a	VER:pres	avoir
priori	ADV	priori
"	PUN:cit	"
</VN>
<NP>
l'	DET:ART	le
idée	NOM	idée
</NP>
<PP>
d'	PRP	de
<NP>
une	DET:ART	un
certaine	ADJ	certain
forme	NOM	forme
</NP>
</PP>
<PP>
d'	PRP	de
<NP>
inférence	NOM	inférence
</NP>
</PP>
<PP>
de	PRP	de
<NP>
types	NOM	type
</NP>
</PP>
<NP>
Aucune	PRO:IND	aucun
mise	NOM	mise
</NP>
<PP>
en	PRP	en
<NP>
œuvre	NOM	<unknown>
</NP>
</PP>
<AP>
directe	ADJ	direct
</AP>
<PP>
de	PRP	de
<NP>
ISWIM	NAM	<unknown>
</NP>
</PP>
<VN>
n'	ADV	ne
a	VER:pres	avoir
été	VER:pper	être
tentée	VER:pper	tenter
,	PUN	,
</VN>
<COORD>
mais	KON	mais
</COORD>
<NP>
Art	NAM	Art
Evan	NAM	<unknown>
</NP>
<PP>
avec	PRP	avec
<NP>
<NP>
PAL	NOM	pal
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
John	NAM	John
C.	ABR	<unknown>
</NP>
</NP>
</PP>
<VN>
Reynolds	NOM	<unknown>
avec	PRP	avec
ont	VER:pres	avoir
tenté	VER:pper	tenter
</VN>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
inclure	VER:infi	inclure
</VN>
<NP>
la	DET:ART	le
plupart	NOM	plupart
</NP>
<PP>
des	PRP:det	du
<NP>
concepts	NOM	concept
</NP>
</PP>
<PP>
de	PRP	de
<NP>
Landin	NAM	<unknown>
</NP>
</PP>
<VPpart>
en	PRP	en
</VPpart>
<VN>
adoptant	VER:ppre	adopter
</VN>
<NP>
tous	PRO:IND	tout
deux	NUM	deux
</NP>
<NP>
un	DET:ART	un
typage	NOM	<unknown>
</NP>
<AP>
dynamique	ADJ	dynamique
</AP>
.	SENT	.
</s>
<s>
<PONCT:S>
D'	PRP	de
autre	ADJ	autre
part	NOM	part
,	PUN	,
</PONCT:S>
<NP>
le	DET:ART	le
langage	NOM	langage
ML	NAM	<unknown>
</NP>
<PP>
de	PRP	de
<NP>
Robin	NAM	Robin
Milner	NAM	Milner
</NP>
</PP>
<VN>
peut	VER:pres	pouvoir
</VN>
<VN>
être	VER:infi	être
considéré	VER:pper	considérer
</VN>
<PP>
comme	ADV	comme
<NP>
un	DET:ART	un
ISWIM	NOM	<unknown>
</NP>
</PP>
<PP>
avec	PRP	avec
<NP>
inférence	NOM	inférence
</NP>
</PP>
<PP>
de	PRP	de
<NP>
type	NOM	type
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
Une	DET:ART	un
autre	ADJ	autre
héritage	NOM	héritage
</NP>
<VN>
consiste	VER:pres	consister
</VN>
<VPinf>
à	PRP	à
</VPinf>
<VN>
dépouiller	VER:infi	dépouiller
</VN>
<NP>
ISWIM	NAM	<unknown>
</NP>
<PP>
de	PRP	de
<NP>
ses	DET:POS	son
traits	NOM	trait
</NP>
</PP>
<AP>
impératifs	ADJ	impératif
(	PUN	(
</AP>
<NP>
<NP>
affectation	NOM	affectation
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
opérateur	NOM	opérateur
J	ABR	<unknown>
)	PUN	)
</NP>
</NP>
<COORD>
et	KON	et
</COORD>
<VPinf>
à	PRP	à
</VPinf>
<VN>
en	PRO:PER	en
faire	VER:infi	faire
</VN>
<NP>
un	DET:ART	un
langage	NOM	langage
</NP>
<AP>
purement	ADV	purement
fonctionnel	ADJ	fonctionnel
</AP>
.	SENT	.
</s>
<s>
<VN>
Il	PRO:PER	il
devient	VER:pres	devenir
alors	ADV	alors
</VN>
<AP>
possible	ADJ	possible
</AP>
<VPinf>
de	PRP	de
</VPinf>
<VN>
passer	VER:infi	passer
</VN>
<PP>
de	PRP	de
<NP>
l'	DET:ART	le
appel	NOM	appel
</NP>
</PP>
<PP>
par	PRP	par
<NP>
valeur	NOM	valeur
</NP>
</PP>
<PP>
à	PRP	à
<NP>
l'	DET:ART	le
évaluation	NOM	évaluation
</NP>
</PP>
<AP>
paresseuse	ADJ	paresseux
</AP>
.	SENT	.
</s>
<s>
<NP>
Cela	PRO:DEM	cela
mène	VER:pres	mener
</NP>
<PP>
aux	PRP:det	au
<NP>
langages	NOM	langage
</NP>
</PP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
SASL	NAM	<unknown>
,	PUN	,
KRC	NAM	<unknown>
(	PUN	(
Kent	NAM	<unknown>
Calculator	NAM	<unknown>
récursive	ADJ	récursif
)	PUN	)
,	PUN	,
</NP>
</PP>
<NP>
Hope	NAM	<unknown>
,	PUN	,
Miranda	NAM	Miranda
,	PUN	,
Haskell	NAM	<unknown>
</NP>
<COORD>
et	KON	et
</COORD>
.	SENT	.
</s>
<s>
<PP>
Dans	PRP	dans
<NP>
son	DET:POS	son
article	NOM	article
Landin	NAM	<unknown>
</NP>
</PP>
<VN>
a	VER:pres	avoir
jeté	VER:pper	jeter
</VN>
<NP>
les	DET:ART	le
bases	NOM	base
</NP>
<PP>
de	PRP	de
<NP>
trois	NUM	trois
concepts	NOM	concept
</NP>
</PP>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
définir	VER:infi	définir
proprement	ADV	proprement
</VN>
<NP>
des	PRP:det	du
langages	NOM	langage
</NP>
<PP>
de	PRP	de
<NP>
programmation	NOM	programmation
:	PUN	:
</NP>
</PP>
<NP>
la	DET:ART	le
syntaxe	NOM	syntaxe
</NP>
<AP>
abstraite	ADJ	abstrait
,	PUN	,
</AP>
<NP>
<NP>
l'	DET:ART	le
axiomatisation	NOM	axiomatisation
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
les	DET:ART	le
machines	NOM	machine
</NP>
</NP>
<AP>
abstraites	ADJ	abstrait
</AP>
.	SENT	.
</s>
