<s>
<NP>
Injection	NOM	injection
SQL	NAM	<unknown>
</NP>
<NP>
La	DET:ART	le
faille	NOM	faille
SQLi	NAM	<unknown>
,	PUN	,
</NP>
<NP>
abréviation	NOM	abréviation
</NP>
<PP>
de	PRP	de
<PP>
"	PUN:cit	"
<NP>
<NP>
SQL	ABR	<unknown>
Injection	NOM	injection
"	PUN:cit	"
</NP>
<COORD>
,	PUN	,
soit	KON	soit
</COORD>
<NP>
injection	NOM	injection
SQL	ADJ	<unknown>
</NP>
</NP>
</PP>
</PP>
<PP>
en	PRP	en
<NP>
français	ADJ	français
,	PUN	,
</NP>
</PP>
<VN>
est	VER:pres	être
</VN>
<NP>
un	DET:ART	un
groupe	NOM	groupe
de	PRP	de
méthodes	NOM	méthode
</NP>
<PP>
d'	PRP	de
<NP>
exploitation	NOM	exploitation
</NP>
</PP>
<PP>
de	PRP	de
<NP>
faille	NOM	faille
</NP>
</PP>
<PP>
de	PRP	de
<NP>
sécurité	NOM	sécurité
</NP>
</PP>
<PP>
d'	PRP	de
<NP>
une	DET:ART	un
application	NOM	application
</NP>
</PP>
<VN>
interagissant	VER:ppre	interagir
</VN>
<PP>
avec	PRP	avec
<NP>
une	DET:ART	un
base	NOM	base
</NP>
</PP>
<PP>
de	PRP	de
<NP>
données	NOM	donnée
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Elle	PRO:PER	elle
permet	VER:pres	permettre
</VN>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
injecter	VER:infi	injecter
</VN>
<PP>
dans	PRP	dans
<NP>
la	DET:ART	le
requête	NOM	requête
</NP>
</PP>
<AP>
SQL	ADJ	<unknown>
</AP>
<PP>
en	PRP	en
<PP>
cours	NOM	cour|cours
<NP>
un	DET:ART	un
morceau	NOM	morceau
</NP>
</PP>
</PP>
<PP>
de	PRP	de
<NP>
requête	NOM	requête
</NP>
</PP>
<VPpart>
non	ADV	non
prévu	VER:pper	prévoir
</VPpart>
<PP>
par	PRP	par
<NP>
le	DET:ART	le
système	NOM	système
</NP>
</PP>
<COORD>
et	KON	et
</COORD>
<VN>
pouvant	VER:ppre	pouvoir
</VN>
<VPinf>
en	PRP	en
</VPinf>
<VN>
compromettre	VER:infi	compromettre
</VN>
<NP>
la	DET:ART	le
sécurité	NOM	sécurité
</NP>
.	SENT	.
</s>
<s>
<VN>
Il	PRO:PER	il
existe	VER:pres	exister
</VN>
<NP>
plusieurs	PRO:IND	plusieurs
types	NOM	type
</NP>
<PP>
d'	PRP	de
<NP>
injection	NOM	injection
</NP>
</PP>
<AP>
SQL	ADJ	<unknown>
:	PUN	:
</AP>
<VN>
Considérons	VER:pres	considérer
</VN>
<NP>
un	DET:ART	un
site	NOM	site
</NP>
<AP>
web	NOM	<unknown>
dynamique	ADJ	dynamique
(	PUN	(
</AP>
<VPpart>
programmé	VER:pper	programmer
en	PRP	en
PHP	NOM	<unknown>
</VPpart>
<PP>
dans	PRP	dans
<NP>
cet	PRO:DEM	ce
exemple	NOM	exemple
)	PUN	)
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
dispose	VER:pres	disposer
</VN>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
système	NOM	système
</NP>
</PP>
<VN>
permettant	VER:ppre	permettre
</VN>
<PP>
aux	PRP:det	au
<NP>
utilisateurs	NOM	utilisateur
</NP>
</PP>
<VN>
possédant	VER:ppre	posséder
</VN>
<NP>
<NP>
un	DET:ART	un
nom	NOM	nom
d'	PRP	de
utilisateur	NOM	utilisateur
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
un	DET:ART	un
mot	NOM	mot
</NP>
</NP>
<PP>
de	PRP	de
<NP>
passe	NOM	passe
</NP>
</PP>
<AP>
valides	ADJ	valide
</AP>
<VPinf>
de	PRP	de
</VPinf>
<VN>
se	PRO:PER	se
connecter	VER:infi	connecter
</VN>
.	SENT	.
</s>
<s>
<NP>
Ce	PRO:DEM	ce
site	NOM	site
</NP>
<VN>
utilise	VER:pres	utiliser
</VN>
<NP>
la	DET:ART	le
requête	NOM	requête
</NP>
<AP>
SQL	ADJ	<unknown>
</AP>
<AP>
suivante	ADJ	suivant
</AP>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
identifier	VER:infi	identifier
</VN>
<NP>
un	DET:ART	un
utilisateur	NOM	utilisateur
:	PUN	:
</NP>
<NP>
L'	DET:ART	le
utilisateur	ADJ	utilisateur
Dupont	NAM	Dupont
</NP>
<VN>
souhaite	VER:pres	souhaiter
</VN>
<VN>
se	PRO:PER	se
connecter	VER:infi	connecter
</VN>
<PP>
avec	PRP	avec
<NP>
son	DET:POS	son
mot	NOM	mot
</NP>
</PP>
<PP>
de	PRP	de
<NP>
passe	NOM	passe
«	PUN:cit	«
</NP>
</PP>
<AP>
truc	NOM	truc
»	PUN:cit	»
</AP>
<VPpart>
hashé	VER:pper	<unknown>
</VPpart>
<PP>
en	PRP	en
<NP>
MD5	NAM	<unknown>
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
requête	NOM	requête
</NP>
<AP>
suivante	ADJ	suivant
</AP>
<VN>
est	VER:pres	être
</VN>
<AP>
exécutée	VER:pper	exécuter
:	PUN	:
</AP>
<VN>
Imaginons	VER:pres	imaginer
à	PRP	à
présent	ADJ	présent
</VN>
<Ssub>
que	KON	que
</Ssub>
<NP>
le	DET:ART	le
script	NOM	script
PHP	NAM	<unknown>
</NP>
<VN>
exécutant	VER:ppre	exécuter
</VN>
<NP>
cette	PRO:DEM	ce
requête	NOM	requête
</NP>
<VN>
ne	ADV	ne
vérifie	VER:pres	vérifier
pas	ADV	pas
</VN>
<NP>
les	DET:ART	le
données	NOM	donnée
</NP>
<AP>
entrantes	ADJ	entrant
</AP>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
garantir	VER:infi	garantir
</VN>
<NP>
sa	DET:POS	son
sécurité	NOM	sécurité
</NP>
.	SENT	.
</s>
<s>
<NP>
Un	DET:ART	un
hacker	NOM	<unknown>
</NP>
<VN>
pourrait	VER:cond	pouvoir
alors	ADV	alors
</VN>
<VN>
fournir	VER:infi	fournir
</VN>
<NP>
les	DET:ART	le
informations	NOM	information
</NP>
<AP>
suivantes	ADJ	suivant
:	PUN	:
</AP>
<NP>
La	DET:ART	le
requête	NOM	requête
</NP>
<VN>
devient	VER:pres	devenir
:	PUN	:
</VN>
<NP>
Les	DET:ART	le
caractères	NOM	caractère
</NP>
<AP>
codice_2	ADJ	<unknown>
</AP>
<VN>
marquent	VER:pres	marquer
</VN>
<NP>
le	DET:ART	le
début	NOM	début
</NP>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
commentaire	NOM	commentaire
</NP>
</PP>
<PP>
en	PRP	en
<NP>
SQL	NAM	<unknown>
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
requête	NOM	requête
</NP>
<VN>
est	VER:pres	être
donc	ADV	donc
</VN>
<AP>
équivalente	ADJ	équivalent
à	PRP	à
:	PUN	:
</AP>
<NP>
L'	DET:ART	le
attaquant	NOM	attaquant
</NP>
<VN>
peut	VER:pres	pouvoir
alors	ADV	alors
</VN>
<VN>
se	PRO:PER	se
connecter	VER:infi	connecter
</VN>
<PP>
sous	PRP	sous
<NP>
l'	DET:ART	le
utilisateur	ADJ	utilisateur
Dupont	NAM	Dupont
</NP>
</PP>
<PP>
avec	PRP	avec
<NP>
n'	ADV	ne
importe	VER:pres	importer
quel	PRO:REL	quel
mot	NOM	mot
</NP>
</PP>
<PP>
de	PRP	de
<NP>
passe	NOM	passe
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Il	PRO:PER	il
s'	PRO:PER	se
agit	VER:pres	agir
</VN>
<PP>
d'	PRP	de
<NP>
une	DET:ART	un
injection	NOM	injection
</NP>
</PP>
<PP>
de	PRP	de
<NP>
SQL	NOM	<unknown>
</NP>
</PP>
<VPpart>
réussie	VER:pper	réussir
,	PUN	,
</VPpart>
<COORD>
car	KON	car
</COORD>
<NP>
l'	DET:ART	le
attaquant	NOM	attaquant
</NP>
<VN>
est	VER:pres	être
</VN>
<VPpart>
parvenu	VER:pper	parvenir
</VPpart>
<VPinf>
à	PRP	à
</VPinf>
<VN>
injecter	VER:infi	injecter
</VN>
<NP>
les	DET:ART	le
caractères	NOM	caractère
</NP>
<Ssub>
qu'	PRO:REL	que
</Ssub>
<VN>
il	PRO:PER	il
voulait	VER:impf	vouloir
</VN>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
modifier	VER:infi	modifier
</VN>
<NP>
le	DET:ART	le
comportement	NOM	comportement
</NP>
<PP>
de	PRP	de
<NP>
la	DET:ART	le
requête	NOM	requête
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Supposons	VER:pres	supposer
maintenant	ADV	maintenant
</VN>
<Ssub>
que	KON	que
</Ssub>
<NP>
l'	DET:ART	le
attaquant	NOM	attaquant
</NP>
<VN>
veuille	VER:subp	vouloir
non	ADV	non
pas	ADV	pas
</VN>
<VN>
tromper	VER:infi	tromper
</VN>
<NP>
le	DET:ART	le
script	NOM	script
</NP>
<AP>
SQL	ADJ	<unknown>
</AP>
<PP>
sur	PRP	sur
<PP>
le	DET:ART	le
<PP>
nom	NOM	nom
<PP>
d'	PRP	de
<NP>
utilisateur	NOM	utilisateur
,	PUN	,
</NP>
</PP>
</PP>
</PP>
</PP>
<COORD>
mais	KON	mais
</COORD>
<PP>
sur	PRP	sur
<NP>
le	DET:ART	le
mot	NOM	mot
</NP>
</PP>
<PP>
de	PRP	de
<NP>
passe	NOM	passe
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Il	PRO:PER	il
pourra	VER:futu	pouvoir
alors	ADV	alors
</VN>
<VN>
injecter	VER:infi	injecter
</VN>
<NP>
le	DET:ART	le
code	NOM	code
</NP>
<AP>
suivant	VER:ppre	suivre
:	PUN	:
</AP>
<NP>
L'	DET:ART	le
apostrophe	NOM	apostrophe
</NP>
<VN>
indique	VER:pres	indiquer
</VN>
<NP>
la	DET:ART	le
fin	NOM	fin
</NP>
<PP>
de	PRP	de
<NP>
la	DET:ART	le
zone	NOM	zone
</NP>
</PP>
<PP>
de	PRP	de
<NP>
frappe	NOM	frappe
</NP>
</PP>
<PP>
de	PRP	de
<NP>
l'	DET:ART	le
utilisateur	NOM	utilisateur
,	PUN	,
</NP>
</PP>
<NP>
le	DET:ART	le
code	NOM	code
«	PUN:cit	«
</NP>
<AP>
codice_4	NOM	<unknown>
»	PUN:cit	»
</AP>
<VN>
demande	VER:pres	demander
</VN>
<NP>
au	PRP:det	au
script	NOM	script
</NP>
<AP>
si	KON	si
</AP>
<NP>
1	NUM	@card@
</NP>
<VN>
est	VER:pres	être
</VN>
<AP>
vrai	ADJ	vrai
,	PUN	,
</AP>
<Ssub>
or	KON	or
</Ssub>
<VN>
c'	PRO:DEM	ce
est	VER:pres	être
toujours	ADV	toujours
</VN>
<NP>
le	DET:ART	le
cas	NOM	cas
,	PUN	,
</NP>
<COORD>
et	KON	et
</COORD>
<Sint>
--	PUN	--
</Sint>
<VN>
indique	VER:pres	indiquer
</VN>
<NP>
le	DET:ART	le
début	NOM	début
</NP>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
commentaire	NOM	commentaire
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
requête	NOM	requête
</NP>
<VN>
devient	VER:pres	devenir
</VN>
<Ssub>
alors	ADV	alors
</Ssub>
:	PUN	:
<PONCT:S>
Ainsi	ADV	ainsi
,	PUN	,
</PONCT:S>
<NP>
le	DET:ART	le
script	NOM	script
</NP>
<VPpart>
programmé	VER:pper	programmer
</VPpart>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
vérifier	VER:infi	vérifier
</VN>
<Ssub>
si	KON	si
</Ssub>
<NP>
ce	PRO:DEM	ce
</NP>
<NP>
que	PRO:REL	que
</NP>
<NP>
l'	DET:ART	le
utilisateur	ADJ	utilisateur
tape	NOM	tape
</NP>
<VN>
est	VER:pres	être
</VN>
<AP>
vrai	ADJ	vrai
,	PUN	,
</AP>
<VN>
il	PRO:PER	il
verra	VER:futu	voir
</VN>
<Ssub>
que	KON	que
</Ssub>
<NP>
1	NUM	@card@
</NP>
<VN>
est	VER:pres	être
</VN>
<AP>
vrai	ADJ	vrai
,	PUN	,
</AP>
<COORD>
et	KON	et
</COORD>
<NP>
l'	DET:ART	le
attaquant	NOM	attaquant
</NP>
<VN>
sera	VER:futu	être
</VN>
<VPpart>
connecté	VER:pper	connecter
</VPpart>
<PP>
sous	PRP	sous
<NP>
la	DET:ART	le
session	NOM	session
Dupont	NAM	Dupont
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
première	NUM	premier
solution	NOM	solution
</NP>
<VN>
consiste	VER:pres	consister
</VN>
<VPinf>
à	PRP	à
</VPinf>
<VN>
échapper	VER:infi	échapper
</VN>
<NP>
les	DET:ART	le
caractères	NOM	caractère
</NP>
<AP>
spéciaux	ADJ	spécial
</AP>
<VPpart>
contenus	VER:pper	contenir
</VPpart>
<PP>
dans	PRP	dans
<NP>
les	DET:ART	le
chaînes	NOM	chaîne
</NP>
</PP>
<PP>
de	PRP	de
<NP>
caractères	NOM	caractère
</NP>
</PP>
<VPpart>
entrées	VER:pper	entrer
</VPpart>
<PP>
par	PRP	par
<NP>
l'	DET:ART	le
utilisateur	NOM	utilisateur
</NP>
</PP>
.	SENT	.
</s>
<s>
<PP>
En	PRP	en
<NP>
PHP	NAM	<unknown>
</NP>
</PP>
<VN>
on	PRO:PER	on
peut	VER:pres	pouvoir
</VN>
<VN>
utiliser	VER:infi	utiliser
</VN>
<Ssub>
pour	KON	pour
</Ssub>
<NP>
cela	PRO:DEM	cela
</NP>
<NP>
la	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_5	ADJ	<unknown>
,	PUN	,
</AP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
transformera	VER:futu	transformer
</VN>
<NP>
la	DET:ART	le
chaîne	NOM	chaîne
</NP>
<AP>
codice_6	ADJ	<unknown>
</AP>
<PP>
en	PRP	en
<NP>
codice_7	NOM	<unknown>
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
requête	NOM	requête
</NP>
<VN>
deviendrait	VER:cond	devenir
alors	ADV	alors
:	PUN	:
</VN>
<NP>
L'	DET:ART	le
apostrophe	NOM	apostrophe
</NP>
<PP>
de	PRP	de
<NP>
fin	NOM	fin
de	PRP	de
chaîne	NOM	chaîne
</NP>
</PP>
<VN>
ayant	VER:ppre	avoir
été	VER:pper	être
</VN>
<PP>
correctement	ADV	correctement
<VPpart>
dé-spécialisée	VER:pper	<unknown>
en	PRP	en
la	DET:ART	le
</VPpart>
</PP>
<VN>
faisant	VER:ppre	faire
</VN>
<VN>
précéder	VER:infi	précéder
</VN>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
caractère	NOM	caractère
«	PUN:cit	«
</NP>
</PP>
<AP>
\	NOM	<unknown>
»	PUN:cit	»
</AP>
.	SENT	.
</s>
<s>
<NP>
L'	DET:ART	le
échappement	NOM	échappement
</NP>
<VN>
peut	VER:pres	pouvoir
aussi	ADV	aussi
</VN>
<VN>
se	PRO:PER	se
faire	VER:infi	faire
(	PUN	(
</VN>
<VN>
suivant	VER:ppre	suivre
</VN>
<NP>
le	DET:ART	le
SGBD	NOM	<unknown>
</NP>
<VPpart>
utilisé	VER:pper	utiliser
)	PUN	)
</VPpart>
<VPpart>
en	PRP	en
</VPpart>
<VN>
doublant	VER:ppre	doubler
</VN>
<NP>
les	DET:ART	le
apostrophes	NOM	apostrophe
</NP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
marque	NOM	marque
</NP>
<PP>
de	PRP	de
<NP>
commentaire	NOM	commentaire
</NP>
</PP>
<VN>
fera	VER:futu	faire
alors	ADV	alors
partie	VER:pper	partir
</VN>
<PP>
de	PRP	de
<NP>
<NP>
la	DET:ART	le
chaîne	NOM	chaîne
,	PUN	,
</NP>
<COORD>
et	KON	et
finalement	ADV	finalement
</COORD>
<NP>
le	DET:ART	le
serveur	NOM	serveur
SQL	NAM	<unknown>
</NP>
</NP>
</PP>
<VN>
répondra	VER:futu	répondre
</VN>
<Ssub>
qu'	KON	que
</Ssub>
<VN>
il	PRO:PER	il
n'	ADV	ne
y	PRO:PER	y
a	VER:pres	avoir
</VN>
<NP>
aucune	PRO:IND	aucun
entrée	NOM	entrée
</NP>
<PP>
dans	PRP	dans
<NP>
la	DET:ART	le
base	NOM	base
</NP>
</PP>
<PP>
de	PRP	de
<NP>
données	VER:pper	donner
</NP>
</PP>
<VN>
correspondant	VER:ppre	correspondre
</VN>
<PP>
à	PRP	à
<NP>
un	DET:ART	un
utilisateur	ADJ	utilisateur
codice_8	NOM	<unknown>
</NP>
</PP>
<PP>
avec	PRP	avec
<NP>
ce	PRO:DEM	ce
mot	NOM	mot
</NP>
</PP>
<PP>
de	PRP	de
<NP>
passe	NOM	passe
</NP>
</PP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_9	ADJ	<unknown>
</AP>
<VN>
ne	ADV	ne
suffit	VER:pres	suffire
pas	ADV	pas
</VN>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
empêcher	VER:infi	empêcher
</VN>
<NP>
les	DET:ART	le
injections	NOM	injection
</NP>
<PP>
via	PRP	via
<NP>
les	DET:ART	le
variables	ADJ	variable
</NP>
</PP>
<AP>
numériques	ADJ	numérique
,	PUN	,
</AP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
ne	ADV	ne
sont	VER:pres	être
pas	ADV	pas
encadrées	VER:pper	encadrer
</VN>
<PP>
d'	PRP	de
<NP>
apostrophes	NOM	apostrophe
</NP>
</PP>
<COORD>
ou	KON	ou
</COORD>
<PP>
de	PRP	de
<NP>
guillemets	NOM	guillemet
</NP>
</PP>
<PP>
dans	PRP	dans
<NP>
les	DET:ART	le
requêtes	NOM	requête
</NP>
</PP>
<AP>
SQL	ADJ	<unknown>
</AP>
.	SENT	.
</s>
<s>
<NP>
Exemple	NOM	exemple
</NP>
<PP>
avec	PRP	avec
<NP>
la	DET:ART	le
requête	NOM	requête
:	PUN	:
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
réussit	VER:pres	réussir
</VN>
<Ssub>
lorsque	KON	lorsque
</Ssub>
<NP>
la	DET:ART	le
variable	ADJ	variable
codice_10	NOM	<unknown>
</NP>
<VN>
contient	VER:pres	contenir
</VN>
<NP>
codice_11	NOM	<unknown>
</NP>
.	SENT	.
</s>
<s>
<NP>
Une	DET:ART	un
précaution	NOM	précaution
</NP>
<VN>
est	VER:pres	être
</VN>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
utiliser	VER:infi	utiliser
</VN>
<NP>
la	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_12	ADJ	<unknown>
</AP>
<VPinf>
pour	PRP	pour
</VPinf>
<VN>
vérifier	VER:infi	vérifier
</VN>
<NP>
les	DET:ART	le
variables	ADJ	variable
</NP>
<AP>
numériques	ADJ	numérique
</AP>
<PP>
des	PRP:det	du
<NP>
requêtes	NOM	requête
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
On	PRO:PER	on
peut	VER:pres	pouvoir
aussi	ADV	aussi
</VN>
<VN>
forcer	VER:infi	forcer
</VN>
<NP>
la	DET:ART	le
transformation	NOM	transformation
</NP>
<PP>
de	PRP	de
<NP>
la	DET:ART	le
variable	ADJ	variable
</NP>
</PP>
<PP>
en	PRP	en
<NP>
nombre	NOM	nombre
</NP>
</PP>
<VPpart>
en	PRP	en
</VPpart>
<VN>
la	DET:ART	le
faisant	VER:ppre	faire
</VN>
<VN>
précéder	VER:infi	précéder
</VN>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
"	PUN:cit	"
transtypeur	NOM	<unknown>
"	PUN:cit	"
,	PUN	,
</NP>
</PP>
<Ssub>
comme	ADV	comme
codice_13	ADJ	<unknown>
si	KON	si
</Ssub>
<VN>
on	PRO:PER	on
attend	VER:pres	attendre
</VN>
<NP>
un	DET:ART	un
entier	ADJ	entier
(	PUN	(
</NP>
<NP>
la	DET:ART	le
chaîne	NOM	chaîne
</NP>
<AP>
codice_11	ADJ	<unknown>
</AP>
<VN>
sera	VER:futu	être
alors	ADV	alors
transformée	VER:pper	transformer
</VN>
<PP>
en	PRP	en
<NP>
<NP>
l'	DET:ART	le
entier	ADJ	entier
codice_15	NOM	<unknown>
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
l'	DET:ART	le
injection	NOM	injection
SQL	NAM	<unknown>
</NP>
</NP>
</PP>
<VN>
échouera	VER:futu	échouer
</VN>
<NP>
)	PUN	)
</NP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_9	ADJ	<unknown>
</AP>
<VN>
possède	VER:pres	posséder
</VN>
<NP>
elle-même	PRO:PER	elle-même
</NP>
<NP>
quelques	PRO:IND	quelque
failles	NOM	faille
</NP>
<PP>
sur	PRP	sur
<NP>
certaines	PRO:IND	certain
versions	NOM	version
</NP>
</PP>
<PP>
de	PRP	de
<NP>
PHP	NAM	<unknown>
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
datent	VER:pres	dater
</VN>
.	SENT	.
</s>
<s>
<PONCT:S>
De	PRP	de
plus	ADV	plus
,	PUN	,
</PONCT:S>
<VN>
elle	PRO:PER	elle
échappe	VER:pres	échapper
uniquement	ADV	uniquement
</VN>
<NP>
les	DET:ART	le
caractères	NOM	caractère
«	PUN:cit	«
</NP>
<AP>
\	NOM	<unknown>
»	PUN:cit	»
,	PUN	,
«	PUN:cit	«
</AP>
<NP>
NULL	NAM	<unknown>
»	PUN:cit	»
</NP>
<COORD>
,	PUN	,
«	PUN:cit	«
</COORD>
<COORD>
'	PUN	'
»	PUN:cit	»
</COORD>
<COORD>
et	KON	et
«	PUN:cit	«
"	PUN:cit	"
</COORD>
<NP>
»	PUN:cit	»
</NP>
.	SENT	.
</s>
<s>
<VN>
Il	PRO:PER	il
serait	VER:cond	être
plus	ADV	plus
approprié	VER:pper	approprier
</VN>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
utiliser	VER:infi	utiliser
</VN>
<NP>
la	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_5	ADJ	<unknown>
</AP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
échappe	VER:pres	échapper
justement	ADV	justement
</VN>
<NP>
les	DET:ART	le
caractères	NOM	caractère
</NP>
<AP>
spéciaux	ADJ	spécial
</AP>
<PP>
d'	PRP	de
<NP>
une	DET:ART	un
commande	NOM	commande
</NP>
</PP>
<NP>
SQL	NAM	<unknown>
(	PUN	(
NULL	NAM	<unknown>
,	PUN	,
</NP>
<NP>
\x1a	NOM	<unknown>
,	PUN	,
</NP>
<NP>
\n	NOM	<unknown>
,	PUN	,
</NP>
<NP>
\r	NOM	<unknown>
,	PUN	,
</NP>
<NP>
\	NOM	<unknown>
,	PUN	,
</NP>
<PP>
'	PUN	'
<NP>
,	PUN	,
"	PUN:cit	"
</NP>
<COORD>
et	KON	et
</COORD>
</PP>
<NP>
\x00	NOM	<unknown>
)	PUN	)
</NP>
.	SENT	.
</s>
<s>
<NP>
La	DET:ART	le
seconde	NUM	second
solution	NOM	solution
</NP>
<VN>
consiste	VER:pres	consister
</VN>
<VPinf>
à	PRP	à
</VPinf>
<VN>
utiliser	VER:infi	utiliser
</VN>
<NP>
des	PRP:det	du
requêtes	NOM	requête
</NP>
<AP>
préparées	ADJ	préparé
:	PUN	:
</AP>
<PP>
dans	PRP	dans
<NP>
ce	PRO:DEM	ce
cas	NOM	cas
,	PUN	,
</NP>
</PP>
<NP>
une	DET:ART	un
compilation	NOM	compilation
</NP>
<PP>
de	PRP	de
<NP>
la	DET:ART	le
requête	NOM	requête
</NP>
</PP>
<VN>
est	VER:pres	être
</VN>
<VPpart>
réalisée	VER:pper	réaliser
</VPpart>
<VPinf>
avant	PRP	avant
d'	PRP	de
</VPinf>
<VN>
y	PRO:PER	y
insérer	VER:infi	insérer
</VN>
<NP>
les	DET:ART	le
paramètres	NOM	paramètre
</NP>
<COORD>
et	KON	et
</COORD>
<VPinf>
de	PRP	de
</VPinf>
<VN>
l'	PRO:PER	la|le
exécuter	VER:infi	exécuter
,	PUN	,
</VN>
<NP>
ce	PRO:DEM	ce
</NP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
empêche	VER:pres	empêcher
</VN>
<NP>
un	DET:ART	un
éventuel	ADJ	éventuel
code	NOM	code
</NP>
<VPpart>
inséré	VER:pper	insérer
</VPpart>
<PP>
dans	PRP	dans
<NP>
les	DET:ART	le
paramètres	NOM	paramètre
</NP>
</PP>
<VPinf>
d'	PRP	de
</VPinf>
<VN>
être	VER:infi	être
</VN>
<NP>
interprété	VER:pper	interpréter
</NP>
.	SENT	.
</s>
<s>
<NP>
De	PRP	de
nombreux	ADJ	nombreux
cadriciels	NOM	<unknown>
</NP>
<VN>
sont	VER:pres	être
</VN>
<VPpart>
équipés	VER:pper	équiper
</VPpart>
<PP>
d'	PRP	de
<NP>
un	DET:ART	un
ORM	NAM	<unknown>
</NP>
</PP>
<NP>
qui	PRO:REL	qui
</NP>
<VN>
se	PRO:PER	se
charge	VER:pres	charger
entre	PRP	entre
autres	ADJ	autre
</VN>
<VPinf>
de	PRP	de
</VPinf>
<VN>
préparer	VER:infi	préparer
</VN>
<NP>
les	DET:ART	le
requêtes	NOM	requête
</NP>
.	SENT	.
</s>
<s>
<NP>
Ces	PRO:DEM	ce
attaques	NOM	attaque
</NP>
<VN>
peuvent	VER:pres	pouvoir
</VN>
<VN>
être	VER:infi	être
</VN>
<AP>
évitées	VER:pper	éviter
</AP>
<PP>
de	PRP	de
<NP>
plusieurs	PRO:IND	plusieurs
façons	NOM	façon
:	PUN	:
</NP>
</PP>
<AdP>
Les	DET:ART	le
</AdP>
<PP>
«	PUN:cit	«
"	PUN:cit	"
<PONCT:S>
»	PUN:cit	»
</PONCT:S>
<VN>
étaient	VER:impf	être
</VN>
<VPpart>
utilisées	VER:pper	utiliser
</VPpart>
</PP>
<PP>
par	PRP	par
<NP>
défaut	NOM	défaut
</NP>
</PP>
<PP>
dans	PRP	dans
<NP>
la	DET:ART	le
configuration	NOM	configuration
</NP>
</PP>
<PP>
de	PRP	de
<NP>
PHP	NAM	<unknown>
</NP>
</PP>
.	SENT	.
</s>
<s>
<VN>
Elles	PRO:PER	elle
permettaient	VER:impf	permettre
</VN>
<Ssub>
qu'	KON	que
</Ssub>
<NP>
un	DET:ART	un
caractère	NOM	caractère
</NP>
<VPpart>
d’	ADJ	<unknown>
</VPpart>
<NP>
échappement	NOM	échappement
</NP>
<VN>
soit	KON	soit
automatiquement	ADV	automatiquement
placé	VER:pper	placer
</VN>
<PP>
devant	PRP	devant
<NP>
<NP>
les	DET:ART	le
apostrophes	NOM	apostrophe
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
guillemets	NOM	guillemet
</NP>
</NP>
</PP>
<AP>
dangereux	ADJ	dangereux
</AP>
.	SENT	.
</s>
<s>
<NP>
Certaines	PRO:IND	certain
failles	NOM	faille
</NP>
<PP>
de	PRP	de
<NP>
<NP>
sécurité	NOM	sécurité
</NP>
<COORD>
et	KON	et
</COORD>
<NP>
la	DET:ART	le
disparition	NOM	disparition
</NP>
</NP>
</PP>
<PP>
de	PRP	de
<NP>
codice_18	NOM	<unknown>
</NP>
</PP>
<PP>
dans	PRP	dans
<NP>
PHP5.4	NOM	<unknown>
</NP>
</PP>
<VN>
incitent	VER:pres	inciter
</VN>
<VPinf>
à	PRP	à
</VPinf>
<VN>
remplacer	VER:infi	remplacer
</VN>
<NP>
cette	PRO:DEM	ce
option	NOM	option
</NP>
<PP>
par	PRP	par
<NP>
les	DET:ART	le
solutions	NOM	solution
ci-dessus	ADV	ci-dessus
:	PUN	:
</NP>
</PP>
<NP>
la	DET:ART	le
fonction	NOM	fonction
</NP>
<AP>
codice_5	ADJ	<unknown>
,	PUN	,
</AP>
<NP>
les	DET:ART	le
classes	NOM	classe
</NP>
</s>
