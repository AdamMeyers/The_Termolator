GRASP programmation General responsibility
<NP> software patterns
principles
GRASP
de lignes directrices
l' attribution
la responsabilité
classes
objets
conception
objet
<NP> Les différents modèles
principes
les GRASP
le contrôleur le créateur l' indirection le spécialiste
l' information
la cohésion forte
le couplage faible
le polymorphisme les variations protégées
l' invention pure
Tous ces modèles
certains problèmes
développement logiciel
une nouvelle façon
l' existant
l' aide de principes
programmation
conception
objet
Craig Larman
GRASP
une boîte
outils
une aide
la conception
logiciels
objets
Le contrôleur
schéma
la responsabilité
les événements
système
une classe
qui
l' ensemble
système
un scénario cas d' utilisation
Un objet contrôleur
l' interface
la réception
la manipulation
un système d' événements
Le contrôleur
tous
les événements
système
un cas d' utilisation
plus d' un cas d' utilisation
exemple
les cas d' utilisation
un Utilisateur
l' Utilisateur
un seul UserController
deux cas d' utilisation
contrôleurs
le premier objet au-delà
la couche
interface
qui
témoins un système
exploitation
Le contrôleur
le travail qui
d' autres objets
l' activité
beaucoup
travail
lui-même
La portée
Contrôleur
une partie
l' application/de
la couche
service
la demande
une distinction explicite
<NP> les applications/services
la couche
la couche domaine
un système
objet
l' ensemble
couches
un système
informations
La création d' objets
l' une
activités
les plus courantes
un système
objet
la bonne classe qui
la responsabilité
des objets
un
principes
général une classe codice_1
la création
instances
la classe
l' un
préférence
plusieurs des critères suivants
Une forte cohésion
un modèle d' évaluation qui
les objets
Une forte cohésion
un couplage
Une cohésion élevée
les responsabilités
un élément
La séparation
programmes
<NP> les classes
les sous-systèmes
un exemple
activités
qui
la cohésion
propriétés
un système
la faible cohésion
une situation
laquelle
un élément
trop d' activités
ses responsabilités
Les éléments
une faible cohésion
changement
L' indirection
le couplage faible
la réutilisation potentielle
deux éléments
la responsabilité
la médiation
eux
un objet
Un exemple
ceci
l' introduction
un composant
médiation
les données
<NP> le modèle
sa représentation vue
le schéma modèle-vue-contrôleur
Spécialiste
l' Information également expert
information
un principe qui
où
des responsabilités
Ces responsabilités
des méthodes des champs calculés
le principe
spécialiste
l' information
une approche générale
l' attribution de responsabilités
une responsabilité
les informations nécessaires
où cette information
Spécialiste
l' Information
la responsabilité
la classe
le plus de renseignements
Le couplage faible
une mesure
la force
un élément
la connaissance de
d' autres éléments
Le couplage faible
un modèle d' évaluation qui
la façon
des responsabilités
l' appui
le principe
polymorphisme
la responsabilité
la variation
comportements
le type
type
lequel
cette variation
L' utilisateur
type
des opérations
polymorphisme
la place
des branchements explicites
le type
Le motif
variations
protégées
les éléments
variations
d' autres éléments
objets
systèmes
sous-systèmes
le focus
l' instabilité
une interface
le polymorphisme
les différentes implémentations
cette interface
Une pure invention
une classe qui
un concept
le domaine
problème
un couplage faible <NP> une forte cohésion
la réutilisation potentielle
celle
une solution
le spécialiste
l' information de modèle
qui
Ce type de classe
un service
le domain-driven design
