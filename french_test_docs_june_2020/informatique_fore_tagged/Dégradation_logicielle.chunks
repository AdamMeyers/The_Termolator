Dégradation
La dégradation logicielle
érosion logicielle
le déséquilibre
l' architecture
son implémentation
Le vieillissement logiciel
terme
allusion
défaillances
un logiciel
fil
temps
ce
vieillissement
des moyens
où
l' intérêt
architectures
L' architecture logicielle
le logiciel
spécifications
celui -ci
L' implémentation logicielle
modèle d' architecture
la phase
conception
cette règle
Les origines
décalages
les principaux
l' évolution logicielle
<NP> les erreurs d' implémentations
les contradictions
l' architecture
qui
le développement
cette problématique
des concepts
génie logiciel
l' importance
l' architecture
les différentes étapes
la réalisation
un projet
Tout projet
un besoin
les futurs utilisateurs
leurs besoins
une solution
cela
une architecture logicielle adaptée
un résultat proche
celui
une architecture
l' implémentation
la solution
attentes
client
de divergences
les deux
L' architecture logicielle
le logiciel
une forme
manière
Ceci
les contraintes techniques
les évolutions
manière
la qualité
logiciel
les coûts
les logiciels
de meilleures qualités
L' architecture logicielle
un rôle important
les
développement
la liaison
<NP> l' architecture
l' implémentation
un ensemble
règles
Celles
l' implémentation
l' architecture
deux types
règles
les règles structurelles
les règles d’ interactions
Les règles structurelles
l' existence
<NP> mêmes entités
les relations
qui
les règles d’
interactions
la présence
appels de méthode
le même ordre
cet ensemble
règles
l' analyse
trois types
résultats
<NP> chaque divergence
absence une
une
La pratique la plus courante
le code
l' architecture
l' architecture
projet
difficultés
développement
Les principales causes
dégradations
les modifications
code
la documentation
le non-respect
règles
Ces changements
suivantes raisons
L' une
principales causes
dégradations
les architectures
l' évolution
besoin client
Le client
ce
ce
qu'
une première version
produit
des modifications
spécifications
Ce problème
les spécifications
Ces deux points
les deux principaux types
vieillissement logiciels
les défaillances
les modifications
propriétaires
produit
évolutions
<NP> besoin
le résultat
modifications
incompréhensions
deux parties
client/concepteur
logiciel
la conception
développement
produit
Une autre cause
dégradations
logicielles
le matériel auquel
le logiciel
Les architectures logicielles
le respect
matériel
le logiciel
temps
le matériel
cela
une instabilité
l' architecture
Les modifications
logiciel
sa durée de vie
un problème d' allocation mémoire
des changements
le code plus
la taille
programme
la taille
programme
la mémoire
système
la mémoire
dégradations
plusieurs solutions
le vieillissement
la qualité
un équilibre
<NP> l' architecture
l' implémentation
Certaines technologies
dégradations
des éléments pratiques
la qualité
logiciels
Le but
la phase
conception
un design capable
des demandes
changements
Ceci
l' itérative nature
nombreuses méthodes
développement
extrême pro- programming le prototypage rapide
etc
<NP>
ces méthodologies
de nouvelles exigences qui
un impact architectural
développement
une bonne conception
connaissances
ces exigences
l' avance
des architectures
changements
les méthodologies
développement
architectures
des développements
la durée de vie
logiciel
des modifications
logiciel
ces modifications
le code
le vieillissement
<NP> l' architecture
la documentation
chaque changement
le code
les règles
architectures
la documentation
jour
Ceci
les décalages
<NP> l' implémentation
l' architecture
Une bonne maintenance logicielle
la durée de vie
logiciel
Les processus
maintenances
l' amélioration
le modèle
réutilisation
La réutilisation
le coût
la maintenance
les règles architecturales surtout
l' intégration
nouveaux composants
des éléments pratiques ci-dessous
un équilibre
l' architecture
son implémentation
Card
<NP> Claire Dimech
Dharini Balasubramaniam
l' École d' informatique
l' Université
St Andrews
Card
un outil
vérification
conformité
<NP> architecture
implémentation
plugin
Eclipse
Le vérification
une description
architecture
<NP> UML
son implémentation
Java
Ce framework
deux modules
prétraitement
l' un
<NP> les diagrammes UML 2.0
l' autre
le code source Java
les fichiers UML
l' arborescence
projet Eclipse ensuite
ses préprocesseurs
l' extraction
propriétés
Ces propriétés
des structures
données
l' analyse
conformité
le concept
Maître Esclave architecture prescriptive Maître
Esclave
lesquelles
les règles
Card
un paramétrage
utilisateur
trois niveaux
exigences
High Medium Low
une vérification
structures
<NP> données
affiche
les violations
l' esclave
Les développeurs
la conformité
<NP> leur code
le model
mode static
offline
les préférences
Card
de nombreux projets
fait
de fausses violations
oublis
de preuves formelles
SAVE
Fraunhofer IESE
Institute for Experimental
Software Engineering Institut
recherche
ingénierie
Français
Kaiserslautern
<NP> Allemagne
Fraunhofer Center Maryland Center
Centre de recherche
ingénierie
Français
Maryland
États-Unis
SAVE
un outil
développement
qui
<NP> les convergences
divergences
deux entités
un projet
manière
Cet outil
plugin Eclipse
celui -ci
les projets
Java
<NP> C/C++
Delphi
La version statique
l' entreprise TESTO
une période
trois ans
une douzaine
<NP> produits
l' étude
résultats
un plugin LiFe
la vérification au fur et
le code
l' application
Ce plugin
une promo
étudiants
où certains groupes
le plugin <NP> SAVE Life
le reste
aucun outil
vérification
L' étude
quelques semaines
les groupes
étudiants
qui
le plugin
moins d' erreurs
implémentations
le projet
résultat
celui
autres groupes
ArchJava
l' une
premières solutions
développés
la cohésion
<NP> l' architecture
l' implémentation
Cette solution
le jour
2002
États-Unis
ArchJava
un langage
Java
la mise
place
contraintes
l' implémentation
Ces contraintes
le code
des entités
port
les classes
Ces ports
objets
<NP> eux
quelles
les méthodes
ce port
Une étude
les points suivants
L' ensemble
points
<NP> succès
la compréhension
code
projet
les communications
