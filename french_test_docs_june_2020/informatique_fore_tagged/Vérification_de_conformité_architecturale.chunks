Vérification
conformité
La vérification
conformité
anglais
conformance checking
l' ensemble
vérifications
une implémentation
un logiciel
son architecture
Un humain
des violations
comparant deux modèles
une architecture
Ce procédé
une grande concentration une certaine difficulté
des erreurs
la complexité
modèle
Le modèle
de multiples vues
sa complexité
La vérification
conformité
une vérification informatique
un choix préférable
ce genre de cas
L' architecture logicielle
des pressions
<NP> les exigences
les technologies
un niveau
performance
les utilisateurs
L' érosion logicielle
l' écart
l' architecture
son implémentation finale
qui
ces différentes pressions
les modifications
le développement
un système
des dommages
l' intégralité
sa structure
ses principes
design
L' érosion
plusieurs facteurs
Plusieurs stratégies
l' érosion
la stratégie qui
l' érosion
plusieurs techniques
la documentation <NP> l' analyse
la surveillance
la conformité
l' architecture
La stratégie
l' érosion
la réparation
une implémentation
son architecture
les dommages
l' érosion
l' implémentation
son architecture
chaque stratégie
un second niveau
catégories
les différentes solutions Les vérifications statiques
le code
la compilation
un système
sa phase
maintenance
où l' application
son environnement
production
la structure
<NP> code
les aspects
l' intégrité
la communication
trois approches principales
les vérifications
Les vérifications dynamiques
deux objectifs
<NP> l' exécution
la cohérence
l' architecture
<NP> système
la spécification
une protection
les fautes
l' exécution
Cette protection
un moniteur
différentes violations
Les vérifications dynamiques
le système
l' accès
l' état d' exécution
opérations
Ces opérations
des contraintes
une solution
Ces deux types
vérifications
façon
la vérification
conformité
<NP> une architecture
son implémentation
Les vérifications
conformité
un mapping
<NP> l' architecture
son implémentation
Ce rapprochement
les vérifications
différentes catégories qui
différentes solutions
PandArch
un framework
vérifications
conformité
<NP> l' architecture
l' implémentation
un logiciel
Cette solution
ces principes
les problèmes
vérifications
l' impact
les performances
logiciel
les vérifications
L' objectif principal
ce framework
la vérification
conformité
architectures
une option viable
les développeurs
La réalisation
PandArch
plusieurs principes
la conformité
fonctionnalités
une implémentation
le système
son environnement
production
les routines
maintenance
<NP> les pré-requis
les opérations
une déviation
comportement
l' application
production
PandArch
une solution
la détection
violations
l' exécution
un programme
ses motivations
la minimalisation
impacts
l' application
La conformité
fonctionnalités
l' instanciation
l' exécution
l' invocation de méthodes réflectives
les liaisons dynamiques
la qualité
services etc
La vérification
conformité
<NP> l' architecture
l' implémentation
un logiciel
l' utilisation
un système
surveillance
une vue
l' architecture
l' exécution
l' application
L' architecture
les vérifications
conformité
L' exécution
mécanisme
vérification
conformité
une spécification
l' architecture
Cette spécification
les annotations
mapping
<NP> l' architecture
l' implémentation
logiciel cible
Les contraintes architecturales
les informations
ce mapping
la compilation
cette spécification
le générateur
règles
l' ensemble
règles
conformité
le vérificateur de conformité
l' ensemble
règles
conformité
les évènements d' exécution
l' exécution
programme
Ce processus
une série
violations
l' architecte
dérivations
l' implémentation
l' architecture
Card
l' anglais
Controlling Architectural Degradation
un outil
l' érosion
l' architecture
un programme Java
Cette solution
besoin
spécifications
descriptions
elle-même
aucune dépendance
un langage
modélisation
les développeurs
l' UML 2.0
quelques fonctionnalités importantes
Card
L' érosion architecturale
un problème bien connu
plusieurs approches
ces érosions principalement
la concept
conformité
la plupart
ces approches
une rigueur stricte
la spécification
l' architecture
logiciel
l' utilisation
<NP> un
plusieurs outils
Des interventions manuelles
le processus
vérification
qui
sa potentielle utilisation
milieu d' entreprise
Les objectifs
Card
tous ces problèmes
un outil
l' érosion architecturale d' un programme comme solution envisageable
les entreprises
Son fonctionnement
l' utilisation
deux catégories
règles
conformité
des règles structurelles
interaction
La première catégorie
la structure statique
une architecture
l' héritage
deux éléments
La seconde catégorie
l' interaction
les éléments
l' ordre
<NP> méthodes d' invocation
la communication
éléments
Les règles structurelles
diagramme
classes
l' architecture
l' application
les règles d' interaction
diagramme
classes
diagramme
séquences
ArchJava
une extension
langage Java
qui
la spécification
l' architecture
un logiciel
son implémentation
L' architecture
le même langage
son implémentation ce qui
les contraintes architecturales
Cette approche qui
<NP> architecture
implémentation
principaux objectifs
développeurs
l' architecture
logiciel ArchJava
langage
nouveaux éléments
la description
l' architecture
Les éléments
ces éléments
le développeur
le comportement
la fonctionnalité
laquelle
<NP> Les échanges
dépendances
contraintes
sein même
code
SAVE Software Architecture Visualization
Evaluation
un outil qui
l' architecture
un logiciel
son code source
l' architecture visée initialement
SAVE
le développeur
une vision
l' architecture
l' implémentation
les violations
contraintes
L' outil
les parties
l' application
qui
plus d' attention
la part
développeur
manière
le nombre
violations
Le processus
SAVE est
six étapes
Cette solution
une méthode semi-automatique
vérification
conformité
L' approche principale
cette méthode
la conformité
un système
son exécution
la description
son implémentation
La méthode
la combinaison
deux techniques
La première
une technique
au respect
une implémentation
règles
son architecture
le lien
<NP> une architecture
son implémentation
les violations
La seconde
le principe
injection
les règles architecturales
la technologie d' implémentation
une approche
développement
son architecture
L' objectif final
ce procédé
l' ingénieur logiciel
la fiabilité
système
l' architecture
son implémentation
les propriétés désirées
la correspondance
son architecture
La méthode
deux étapes
La séquence prescriptive
spécificités
l' architecture
le message  Aapparait
le message
le message
le message
B. Cette méthode
données
l' exécution
système
l' ingénieur même qui
la séquence
la séquence
les différences
les deux séquences
un outil
seul un ingénieur
une violation
l' architecture
